# ACGS Compliance Testing Configuration
# Constitutional Hash: cdd01ef066bc6cf2

[tool:pytest]
# Test discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --show-capture=no
    --disable-warnings
    --color=yes
    --junitxml=junit_results.xml
    --html=compliance_test_report.html
    --self-contained-html
    --json-report=compliance_test_results.json
    --json-report-summary

# Markers for test categorization
markers =
    constitutional: Constitutional compliance tests
    multi_tenant: Multi-tenant isolation tests
    regulatory: Regulatory compliance tests (SOC2, GDPR, ISO27001)
    soc2: SOC2 Type II compliance tests
    gdpr: GDPR compliance tests
    iso27001: ISO27001 compliance tests
    stress: Stress and load testing
    integration: Integration tests
    unit: Unit tests
    slow: Slow running tests
    critical: Critical compliance tests that must pass

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:urllib3.*

# Minimum version requirements
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to run tests in parallel (requires pytest-xdist)
# addopts = -n auto

# Coverage reporting (uncomment to enable)
# addopts = --cov=services --cov-report=html --cov-report=term-missing --cov-fail-under=80

# Constitutional hash validation
# This ensures all tests maintain constitutional compliance
required_plugins = 
    pytest-asyncio>=0.21.0
    pytest-mock>=3.11.0