[pytest]
# ACGS E2E Test Configuration

# Test discovery
testpaths = tests/e2e/tests
python_files = test_*.py *_test.py
python_classes = Test* *Test
python_functions = test_*

# Test execution options
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --maxfail=10

# Markers for test categorization
markers =
    smoke: Quick smoke tests for basic validation
    constitutional: Constitutional compliance and validation tests
    hitl: Human-in-the-loop decision processing tests
    performance: Performance, latency, and load tests
    security: Security, authentication, and compliance tests
    integration: Service integration and communication tests
    governance: Multi-agent governance and coordination tests
    infrastructure: Infrastructure component and connectivity tests
    slow: Slow running tests (>30 seconds)
    critical: Critical tests that block deployment
    regression: Regression tests for performance validation
    
# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:asyncio
    ignore::UserWarning:httpx
    ignore::pytest.PytestCacheWarning

# Asyncio configuration
asyncio_mode = auto

# Cache configuration
cache_dir = /app/.pytest_cache

# Timeout configuration (disabled - not supported in this pytest version)
# timeout = 300
# timeout_method = thread

# Coverage configuration (merged with addopts above)

# Coverage configuration (disabled by default for E2E tests)
# E2E tests focus on service integration, not test framework coverage
# To enable coverage for service testing, use:
# python -m pytest --cov=services --cov-report=xml --cov-report=term-missing
#
# Minimum coverage threshold for service testing
# addopts = --cov-fail-under=80

# Test output configuration
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging
log_file = reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution
# addopts = -n auto
