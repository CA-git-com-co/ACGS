version: '3.8'
services:
  nvidia_llm_router_controller:
    build:
      context: ../../services/platform/nvidia-llm-router
      dockerfile: Dockerfile.controller
    container_name: acgs_nvidia_llm_router_controller
    ports:
    - 8080:8080
    - 9092:9092
    environment:
    - NVIDIA_API_KEY=${NVIDIA_API_KEY}
    - NVIDIA_API_BASE_URL=${NVIDIA_API_BASE_URL:-https://integrate.api.nvidia.com/v1}
    - LLM_ROUTER_CONTROLLER_PORT=8080
    - LLM_ROUTER_LOG_LEVEL=${LLM_ROUTER_LOG_LEVEL:-INFO}
    - LLM_ROUTER_DEBUG_MODE=${LLM_ROUTER_DEBUG_MODE:-false}
    - ENVIRONMENT=${ENVIRONMENT:-development}
    - DEFAULT_MODEL_TIER=${DEFAULT_MODEL_TIER:-standard}
    - FALLBACK_MODEL=${FALLBACK_MODEL:-nvidia/llama-3.1-8b-instruct}
    - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-100}
    - REQUEST_TIMEOUT_SECONDS=${REQUEST_TIMEOUT_SECONDS:-30}
    - ENABLE_CONSTITUTIONAL_ROUTING=${ENABLE_CONSTITUTIONAL_ROUTING:-true}
    - CONSTITUTIONAL_MODEL_TIER=${CONSTITUTIONAL_MODEL_TIER:-premium}
    - POLICY_SYNTHESIS_MODEL=${POLICY_SYNTHESIS_MODEL:-nvidia/llama-3.1-nemotron-70b-instruct}
    - AUTH_SERVICE_INTERNAL_URL=${AUTH_SERVICE_INTERNAL_URL:-http://auth_service:8000}
    - AC_SERVICE_INTERNAL_URL=${AC_SERVICE_INTERNAL_URL:-http://ac_service:8001}
    - GS_SERVICE_INTERNAL_URL=${GS_SERVICE_INTERNAL_URL:-http://gs_service:8004}
    - PGC_SERVICE_INTERNAL_URL=${PGC_SERVICE_INTERNAL_URL:-http://pgc_service:8005}
    - DATABASE_URL=os.environ.get("DATABASE_URL")
    - REDIS_URL=${REDIS_URL:-redis://redis:6379/3}
    - JWT_SECRET_KEY=${JWT_SECRET_KEY:-acgs-development-secret-key-2024-phase1-infrastructure-stabilization-jwt-token-signing}  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2
    - API_KEY_ENCRYPTION_KEY=${API_KEY_ENCRYPTION_KEY:-your-encryption-key-change-in-production}
    - PYTHONPATH=/app:/app/shared
    volumes:
    - ../../services/platform/nvidia-llm-router:/app
    - ../../services/shared:/app/shared
    - nvidia_router_config:/app/config
    - nvidia_router_logs:/app/logs
    depends_on:
    - redis
    - postgres_db
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8080/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
    - acgs_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
  nvidia_llm_router_server:
    build:
      context: ../../services/platform/nvidia-llm-router
      dockerfile: Dockerfile.server
    container_name: acgs_nvidia_llm_router_server
    ports:
    - 8081:8081
    - 9093:9093
    environment:
    - NVIDIA_API_KEY=${NVIDIA_API_KEY}
    - NVIDIA_API_BASE_URL=${NVIDIA_API_BASE_URL:-https://integrate.api.nvidia.com/v1}
    - LLM_ROUTER_SERVER_PORT=8081
    - LLM_ROUTER_CONTROLLER_URL=http://nvidia_llm_router_controller:8080
    - LLM_ROUTER_LOG_LEVEL=${LLM_ROUTER_LOG_LEVEL:-INFO}
    - LLM_ROUTER_DEBUG_MODE=${LLM_ROUTER_DEBUG_MODE:-false}
    - ENVIRONMENT=${ENVIRONMENT:-development}
    - DEFAULT_MODEL_TIER=${DEFAULT_MODEL_TIER:-standard}
    - FALLBACK_MODEL=${FALLBACK_MODEL:-nvidia/llama-3.1-8b-instruct}
    - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-100}
    - REQUEST_TIMEOUT_SECONDS=${REQUEST_TIMEOUT_SECONDS:-30}
    - ENABLE_CONSTITUTIONAL_ROUTING=${ENABLE_CONSTITUTIONAL_ROUTING:-true}
    - CONSTITUTIONAL_MODEL_TIER=${CONSTITUTIONAL_MODEL_TIER:-premium}
    - POLICY_SYNTHESIS_MODEL=${POLICY_SYNTHESIS_MODEL:-nvidia/llama-3.1-nemotron-70b-instruct}
    - AUTH_SERVICE_INTERNAL_URL=${AUTH_SERVICE_INTERNAL_URL:-http://auth_service:8000}
    - AC_SERVICE_INTERNAL_URL=${AC_SERVICE_INTERNAL_URL:-http://ac_service:8001}
    - GS_SERVICE_INTERNAL_URL=${GS_SERVICE_INTERNAL_URL:-http://gs_service:8004}
    - PGC_SERVICE_INTERNAL_URL=${PGC_SERVICE_INTERNAL_URL:-http://pgc_service:8005}
    - DATABASE_URL=os.environ.get("DATABASE_URL")
    - REDIS_URL=${REDIS_URL:-redis://redis:6379/3}
    - JWT_SECRET_KEY=${JWT_SECRET_KEY:-acgs-development-secret-key-2024-phase1-infrastructure-stabilization-jwt-token-signing}  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2
    - API_KEY_ENCRYPTION_KEY=${API_KEY_ENCRYPTION_KEY:-your-encryption-key-change-in-production}
    - PYTHONPATH=/app:/app/shared
    volumes:
    - ../../services/platform/nvidia-llm-router:/app
    - ../../services/shared:/app/shared
    - nvidia_router_config:/app/config
    - nvidia_router_logs:/app/logs
    depends_on:
    - nvidia_llm_router_controller
    - redis
    - postgres_db
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8081/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
    - acgs_network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
  nvidia_router_redis:
    image: redis:7-alpine
    container_name: acgs_nvidia_router_redis
    ports:
    - 6382:6379
    volumes:
    - nvidia_router_redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
    - acgs_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
networks:
  acgs_network:
    external: true
    name: acgs_network
volumes:
  nvidia_router_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./nvidia-router-config
  nvidia_router_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./nvidia-router-logs
  nvidia_router_redis_data:
    driver: local
constitutional_hash: cdd01ef066bc6cf2

# Performance Targets: P99 <5ms, >100 RPS, >85% cache hit rates
# Constitutional Compliance: cdd01ef066bc6cf2
# Implementation Status: ðŸ”„ IN PROGRESS

# Performance Targets: P99 <5ms, >100 RPS, >85% cache hit rates
# Constitutional Compliance: cdd01ef066bc6cf2
# Implementation Status: ðŸ”„ IN PROGRESS
