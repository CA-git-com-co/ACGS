version: '3.8'

# ACGS Backup and Disaster Recovery Stack
# Comprehensive backup, recovery, and archival services

services:
  # =============================================================================
  # Backup Services
  # =============================================================================
  backup-scheduler:
    build:
      context: ../operational-excellence
      dockerfile: Dockerfile.backup
    container_name: acgs_backup_scheduler
    environment:
      - ENVIRONMENT=production
      - BACKUP_SCHEDULE=0 */6 * * *
      - BACKUP_RETENTION_DAYS=30
      - BACKUP_COMPRESSION=true
      - BACKUP_ENCRYPTION=true
      - BACKUP_VERIFICATION=true
    volumes:
      - /backups:/backups
      - ../operational-excellence/scripts:/scripts:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - acgs_network
    restart: unless-stopped
    depends_on:
      - postgresql
      - redis
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 60s
      timeout: 30s
      retries: 3

  backup-validator:
    image: acgs/backup-validator:latest
    container_name: acgs_backup_validator
    environment:
      - VALIDATION_INTERVAL=3600
      - BACKUP_PATH=/backups
      - CHECKSUM_VALIDATION=true
      - INTEGRITY_CHECK=true
    volumes:
      - /backups:/backups:ro
      - backup_validation_logs:/var/log/validation
    networks:
      - acgs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Archive Storage
  # =============================================================================
  minio-backup:
    image: minio/minio:latest
    container_name: acgs_minio_backup
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=acgs_backup
      - MINIO_ROOT_PASSWORD=acgs_backup_123456
    ports:
      - "9010:9000"
      - "9011:9001"
    volumes:
      - minio_backup_data:/data
    networks:
      - acgs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Backup Monitoring
  # =============================================================================
  backup-monitor:
    image: acgs/backup-monitor:latest
    container_name: acgs_backup_monitor
    environment:
      - MONITORING_INTERVAL=300
      - ALERT_THRESHOLD_HOURS=24
      - PROMETHEUS_URL=http://prometheus:9090
    ports:
      - "8090:8080"
    volumes:
      - /backups:/backups:ro
      - backup_monitor_logs:/var/log/monitor
    networks:
      - acgs_network
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Recovery Services
  # =============================================================================
  recovery-orchestrator:
    image: acgs/recovery-orchestrator:latest
    container_name: acgs_recovery_orchestrator
    environment:
      - RTO_TARGET=1800
      - RPO_TARGET=300
      - RECOVERY_MODE=standby
    volumes:
      - /backups:/backups:ro
      - recovery_logs:/var/log/recovery
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - acgs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Backup Metrics Exporter
  # =============================================================================
  backup-exporter:
    image: acgs/backup-exporter:latest
    container_name: acgs_backup_exporter
    environment:
      - METRICS_PORT=9100
      - BACKUP_PATH=/backups
      - EXPORT_INTERVAL=60
    ports:
      - "9110:9100"
    volumes:
      - /backups:/backups:ro
    networks:
      - acgs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Backup Cleanup Service
  # =============================================================================
  backup-cleanup:
    image: acgs/backup-cleanup:latest
    container_name: acgs_backup_cleanup
    environment:
      - CLEANUP_SCHEDULE=0 2 * * *
      - RETENTION_DAYS=30
      - DRY_RUN=false
    volumes:
      - /backups:/backups
      - cleanup_logs:/var/log/cleanup
    networks:
      - acgs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 60s
      timeout: 30s
      retries: 3

# =============================================================================
# Networks
# =============================================================================
networks:
  acgs_network:
    external: true

# =============================================================================
# Volumes
# =============================================================================
volumes:
  minio_backup_data:
    driver: local
  backup_validation_logs:
    driver: local
  backup_monitor_logs:
    driver: local
  recovery_logs:
    driver: local
  cleanup_logs:
    driver: local
