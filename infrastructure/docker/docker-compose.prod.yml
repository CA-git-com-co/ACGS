version: '3.8'
networks:
  acgs_prod:
    driver: bridge
    ipam:
      config:
      - subnet: 172.21.0.0/16
    driver_opts:
      com.docker.network.bridge.enable_icc: 'false'
      com.docker.network.bridge.enable_ip_masquerade: 'true'
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  acgs_logs:
    driver: local
services:
  postgres:
    image: postgres:15-alpine
    container_name: acgs_postgres_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-acgs_prod}
      POSTGRES_INITDB_ARGS: --encoding=UTF8 --locale=C
    volumes:
    - postgres_data:/var/lib/postgresql/data
    - /etc/localtime:/etc/localtime:ro
    ports:
    - 127.0.0.1:5439:5432
    networks:
    - acgs_prod
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB:-acgs_prod}
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    security_opt:
    - no-new-privileges:true
    read_only: true
    tmpfs:
    - /tmp
    - /var/run/postgresql
  redis:
    image: redis:7-alpine
    container_name: acgs_redis_prod
    command: 'redis-server --appendonly yes --appendfsync everysec --maxmemory 2gb
      --maxmemory-policy allkeys-lru --timeout 300 --tcp-keepalive 60 --requirepass
      ${REDIS_PASSWORD}

      '
    volumes:
    - redis_data:/data
    - /etc/localtime:/etc/localtime:ro
    ports:
    - 127.0.0.1:6389:6379
    networks:
    - acgs_prod
    healthcheck:
      test:
      - CMD
      - redis-cli
      - --pass
      - ${REDIS_PASSWORD}
      - ping
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    security_opt:
    - no-new-privileges:true
    read_only: true
    tmpfs:
    - /tmp
  opa:
    image: openpolicyagent/opa:latest-envoy
    container_name: acgs_opa_prod
    command: 'run --server --log-level=error --set=decision_logs.console=false --set=status.console=false

      '
    ports:
    - 127.0.0.1:8181:8181
    networks:
    - acgs_prod
    environment:
    - CONSTITUTIONAL_HASH=cdd01ef066bc6cf2
    healthcheck:
      test:
      - CMD
      - wget
      - --quiet
      - --tries=1
      - --spider
      - http://localhost:8181/health
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    security_opt:
    - no-new-privileges:true
    read_only: true
    tmpfs:
    - /tmp
  api_gateway:
    image: acgs/api-gateway:${ACGS_VERSION:-latest}
    container_name: acgs_api_gateway_prod
    environment:
    - SERVICE_NAME=api_gateway
    - SERVICE_PORT=8080
    - ENVIRONMENT=production
    - LOG_LEVEL=WARNING
    - CONSTITUTIONAL_HASH=cdd01ef066bc6cf2
    - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-acgs_prod}
    - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    - CONSTITUTIONAL_CORE_URL=http://constitutional_core:8001
    - GOVERNANCE_ENGINE_URL=http://governance_engine:8004
    - INTEGRITY_SERVICE_URL=http://integrity_service:8002
    - RATE_LIMIT_REQUESTS_PER_MINUTE=100
    - RATE_LIMIT_BURST=20
    - ENABLE_DOCS=false
    - CORS_ORIGINS=${ALLOWED_ORIGINS}
    command:
    - uvicorn
    - app.main:app
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --workers
    - '4'
    ports:
    - 8080:8080
    volumes:
    - acgs_logs:/app/logs
    - /etc/localtime:/etc/localtime:ro
    networks:
    - acgs_prod
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      opa:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - wget
      - --quiet
      - --tries=1
      - --spider
      - http://localhost:8080/health
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
      replicas: 2
    security_opt:
    - no-new-privileges:true
  constitutional_core:
    image: acgs/constitutional-core:${ACGS_VERSION:-latest}
    container_name: acgs_constitutional_core_prod
    environment:
    - SERVICE_NAME=constitutional_core
    - SERVICE_PORT=8001
    - ENVIRONMENT=production
    - LOG_LEVEL=WARNING
    - CONSTITUTIONAL_HASH=cdd01ef066bc6cf2
    - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-acgs_prod}
    - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/1
    - API_GATEWAY_URL=http://api_gateway:8080
    command:
    - uvicorn
    - app.main:app
    - --host
    - 0.0.0.0
    - --port
    - '8001'
    - --workers
    - '2'
    ports:
    - 127.0.0.1:8001:8001
    volumes:
    - acgs_logs:/app/logs
    - /etc/localtime:/etc/localtime:ro
    networks:
    - acgs_prod
    depends_on:
      api_gateway:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - wget
      - --quiet
      - --tries=1
      - --spider
      - http://localhost:8001/health
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    security_opt:
    - no-new-privileges:true
  integrity_service:
    image: acgs/integrity:${ACGS_VERSION:-latest}
    container_name: acgs_integrity_service_prod
    environment:
    - SERVICE_NAME=integrity_service
    - SERVICE_PORT=8002
    - ENVIRONMENT=production
    - LOG_LEVEL=WARNING
    - CONSTITUTIONAL_HASH=cdd01ef066bc6cf2
    - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-acgs_prod}
    - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/2
    - CONSTITUTIONAL_CORE_URL=http://constitutional_core:8001
    command:
    - uvicorn
    - simple_integrity_main:app
    - --host
    - 0.0.0.0
    - --port
    - '8002'
    - --workers
    - '2'
    ports:
    - 127.0.0.1:8002:8002
    volumes:
    - acgs_logs:/app/logs
    - /etc/localtime:/etc/localtime:ro
    networks:
    - acgs_prod
    depends_on:
      constitutional_core:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - wget
      - --quiet
      - --tries=1
      - --spider
      - http://localhost:8002/health
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    security_opt:
    - no-new-privileges:true
  governance_engine:
    image: acgs/governance-engine:${ACGS_VERSION:-latest}
    container_name: acgs_governance_engine_prod
    environment:
    - SERVICE_NAME=governance_engine
    - SERVICE_PORT=8004
    - ENVIRONMENT=production
    - LOG_LEVEL=WARNING
    - CONSTITUTIONAL_HASH=cdd01ef066bc6cf2
    - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-acgs_prod}
    - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/4
    - CONSTITUTIONAL_CORE_URL=http://constitutional_core:8001
    command:
    - uvicorn
    - app.main:app
    - --host
    - 0.0.0.0
    - --port
    - '8004'
    - --workers
    - '2'
    ports:
    - 127.0.0.1:8004:8004
    volumes:
    - acgs_logs:/app/logs
    - /etc/localtime:/etc/localtime:ro
    networks:
    - acgs_prod
    depends_on:
      constitutional_core:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - wget
      - --quiet
      - --tries=1
      - --spider
      - http://localhost:8004/health
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    security_opt:
    - no-new-privileges:true
  nginx:
    image: nginx:alpine
    container_name: acgs_nginx_prod
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./nginx/nginx-prod.conf:/etc/nginx/nginx.conf:ro
    - ./ssl/certs:/etc/ssl/certs:ro
    - ./ssl/private:/etc/ssl/private:ro
    - acgs_logs:/var/log/nginx
    networks:
    - acgs_prod
    depends_on:
    - api_gateway
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    security_opt:
    - no-new-privileges:true
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: acgs_fluentd_prod
    volumes:
    - acgs_logs:/fluentd/log:ro
    - ./fluentd/fluent-prod.conf:/fluentd/etc/fluent.conf:ro
    networks:
    - acgs_prod
    environment:
    - FLUENTD_CONF=fluent.conf
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    security_opt:
    - no-new-privileges:true
constitutional_hash: cdd01ef066bc6cf2

# Performance Targets: P99 <5ms, >100 RPS, >85% cache hit rates
# Constitutional Compliance: cdd01ef066bc6cf2
# Implementation Status: ðŸ”„ IN PROGRESS

# Performance Targets: P99 <5ms, >100 RPS, >85% cache hit rates
# Constitutional Compliance: cdd01ef066bc6cf2
# Implementation Status: ðŸ”„ IN PROGRESS
