# ACGS Phase 3A Database HAProxy Configuration
# Constitutional Hash: cdd01ef066bc6cf2
# Purpose: Load balancing for PostgreSQL Primary-Replica setup

global
    daemon
    log stdout local0 info
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    description "ACGS Database Load Balancer - Constitutional Hash: cdd01ef066bc6cf2"

defaults
    mode tcp
    log global
    option tcplog
    option dontlognull
    option log-health-checks
    
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout check 3s
    
    # Error handling
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Statistics interface
frontend stats
    bind *:8080
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats show-legends
    stats show-desc "ACGS Database Load Balancer Statistics - Constitutional Hash: cdd01ef066bc6cf2"

# PostgreSQL Write Frontend (Primary only)
frontend postgres_write
    bind *:5432
    mode tcp
    option tcplog
    
    # Route all writes to primary
    default_backend postgres_primary

# PostgreSQL Read Frontend (Load balanced across replicas)
frontend postgres_read
    bind *:5433
    mode tcp
    option tcplog
    
    # Route reads to replicas with primary as backup
    default_backend postgres_replicas

# PostgreSQL Primary Backend (Write operations)
backend postgres_primary
    mode tcp
    balance first
    option tcp-check
    tcp-check connect
    tcp-check send-binary 00000020 # packet length
    tcp-check send-binary 00030000 # protocol version
    tcp-check send-binary 7573657200 # "user\0"
    tcp-check send-binary 61636773 # "acgs"
    tcp-check send-binary 5f61646d696e00 # "_admin\0"
    tcp-check send-binary 00 # end of packet
    tcp-check expect binary 52 # Authentication request
    
    server postgres_primary postgres-primary-ha:5432 check inter 10s fall 3 rise 2 weight 100

# PostgreSQL Replicas Backend (Read operations)
backend postgres_replicas
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect
    tcp-check send-binary 00000020 # packet length
    tcp-check send-binary 00030000 # protocol version
    tcp-check send-binary 7573657200 # "user\0"
    tcp-check send-binary 61636773 # "acgs"
    tcp-check send-binary 5f61646d696e00 # "_admin\0"
    tcp-check send-binary 00 # end of packet
    tcp-check expect binary 52 # Authentication request
    
    # Replicas for read operations
    server postgres_replica_a postgres-replica-a-ha:5432 check inter 10s fall 3 rise 2 weight 100
    server postgres_replica_b postgres-replica-b-ha:5432 check inter 10s fall 3 rise 2 weight 100
    
    # Primary as backup for reads
    server postgres_primary_backup postgres-primary-ha:5432 check inter 10s fall 3 rise 2 weight 50 backup

# Health check backend for monitoring
backend postgres_health
    mode tcp
    balance roundrobin
    option tcp-check
    
    server health_primary postgres-primary-ha:5432 check inter 5s fall 2 rise 1
    server health_replica_a postgres-replica-a-ha:5432 check inter 5s fall 2 rise 1
    server health_replica_b postgres-replica-b-ha:5432 check inter 5s fall 2 rise 1
