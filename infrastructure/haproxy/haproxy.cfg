# HAProxy Configuration for ACGS-1 Constitutional Governance System
# Optimized for >1000 concurrent governance actions with <500ms response times

global
    # Process and thread configuration
    nbproc 1
    nbthread 4
    cpu-map auto:1/1-4 0-3
    
    # Performance tuning
    maxconn 4096
    tune.ssl.default-dh-param 2048
    tune.bufsize 32768
    tune.maxrewrite 8192
    
    # Logging
    log stdout local0 info
    
    # Security
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    # Mode and options
    mode http
    option httplog
    option dontlognull
    option log-health-checks
    option redispatch
    
    # Timeouts optimized for governance operations
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout check 3s
    
    # Retries and connection management
    retries 3
    option httpclose
    option forwardfor
    option http-server-close
    
    # Health check defaults
    default-server check inter 10s rise 2 fall 3

# Statistics interface
listen stats
    bind *:8080
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats show-legends
    stats show-desc "ACGS-1 Constitutional Governance System Load Balancer"

# Frontend for ACGS services
frontend acgs_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/acgs.pem
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Rate limiting (1000 requests per minute per IP)
    stick-table type ip size 100k expire 60s store http_req_rate(60s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 1000 }
    
    # Service routing based on path
    acl is_auth_service path_beg /api/v1/auth
    acl is_ac_service path_beg /api/v1/constitutional-council /api/v1/voting
    acl is_integrity_service path_beg /api/v1/integrity
    acl is_fv_service path_beg /api/v1/formal-verification
    acl is_gs_service path_beg /api/v1/governance
    acl is_pgc_service path_beg /api/v1/constitutional /api/v1/governance-workflows
    acl is_ec_service path_beg /api/v1/enforcement
    acl is_research_service path_beg /api/v1/research
    
    # Health check routing
    acl is_health_check path_beg /health
    
    # Route to appropriate backend
    use_backend auth_backend if is_auth_service
    use_backend ac_backend if is_ac_service
    use_backend integrity_backend if is_integrity_service
    use_backend fv_backend if is_fv_service
    use_backend gs_backend if is_gs_service
    use_backend pgc_backend if is_pgc_service
    use_backend ec_backend if is_ec_service
    use_backend research_backend if is_research_service
    use_backend health_backend if is_health_check
    
    # Default to PGC service for constitutional operations
    default_backend pgc_backend

# Backend configurations for ACGS services

backend auth_backend
    description "Authentication Service - User authentication and authorization"
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server auth1 localhost:8000 weight 100 maxconn 200
    # Add more auth servers for HA: server auth2 localhost:8010 weight 100 maxconn 200

backend ac_backend
    description "Access Control Service - Constitutional council and voting mechanisms"
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server ac1 localhost:8001 weight 100 maxconn 300
    # Add more AC servers: server ac2 localhost:8011 weight 100 maxconn 300

backend integrity_backend
    description "Integrity Service - Data integrity and validation"
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server integrity1 localhost:8002 weight 100 maxconn 200
    # Add more integrity servers: server integrity2 localhost:8012 weight 100 maxconn 200

backend fv_backend
    description "Formal Verification Service - Mathematical verification of policies"
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server fv1 localhost:8003 weight 100 maxconn 150
    # Add more FV servers: server fv2 localhost:8013 weight 100 maxconn 150

backend gs_backend
    description "Governance Service - Policy synthesis and governance workflows"
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server gs1 localhost:8004 weight 100 maxconn 250
    # Add more GS servers: server gs2 localhost:8014 weight 100 maxconn 250

backend pgc_backend
    description "Policy Governance Compliance Service - Constitutional validation"
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    # PGC is critical - higher connection limits
    server pgc1 localhost:8005 weight 100 maxconn 400
    # Add more PGC servers: server pgc2 localhost:8015 weight 100 maxconn 400

backend ec_backend
    description "Enforcement Coordination Service - Policy enforcement"
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server ec1 localhost:8006 weight 100 maxconn 200
    # Add more EC servers: server ec2 localhost:8016 weight 100 maxconn 200

backend research_backend
    description "Research Service - AI research and analysis"
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server research1 localhost:8007 weight 100 maxconn 100 backup
    # Research service as backup with lower priority

backend health_backend
    description "Health Check Aggregator"
    balance roundrobin
    option httpchk GET /health
    
    # Health checks to all services
    server auth_health localhost:8000 weight 10 maxconn 50
    server ac_health localhost:8001 weight 10 maxconn 50
    server integrity_health localhost:8002 weight 10 maxconn 50
    server fv_health localhost:8003 weight 10 maxconn 50
    server gs_health localhost:8004 weight 10 maxconn 50
    server pgc_health localhost:8005 weight 10 maxconn 50
    server ec_health localhost:8006 weight 10 maxconn 50

# Error pages for better user experience
errorfile 400 /etc/haproxy/errors/400.http
errorfile 403 /etc/haproxy/errors/403.http
errorfile 408 /etc/haproxy/errors/408.http
errorfile 500 /etc/haproxy/errors/500.http
errorfile 502 /etc/haproxy/errors/502.http
errorfile 503 /etc/haproxy/errors/503.http
errorfile 504 /etc/haproxy/errors/504.http
