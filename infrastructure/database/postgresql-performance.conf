# PostgreSQL Performance Configuration for ACGS-1 Phase A3
# Optimized for high-throughput governance operations and constitutional compliance
# Target: <500ms response times, >1000 concurrent users, >99.9% availability

# =============================================================================
# MEMORY CONFIGURATION
# =============================================================================

# Shared memory settings (25% of total RAM for shared_buffers)
shared_buffers = 1GB                    # Main memory buffer for PostgreSQL
effective_cache_size = 3GB              # OS cache size estimate (75% of RAM)
work_mem = 16MB                         # Memory for sort/hash operations per connection
maintenance_work_mem = 256MB            # Memory for maintenance operations
temp_buffers = 32MB                     # Temporary buffer size per session

# Memory for specific operations
max_stack_depth = 7MB                   # Maximum stack depth
dynamic_shared_memory_type = posix      # Shared memory implementation

# =============================================================================
# CONNECTION AND RESOURCE LIMITS
# =============================================================================

# Connection limits optimized for governance workload
max_connections = 200                   # Maximum concurrent connections
superuser_reserved_connections = 3     # Reserved connections for superusers

# Background worker processes
max_worker_processes = 8               # Total background worker processes
max_parallel_workers_per_gather = 4   # Parallel workers per query
max_parallel_workers = 8              # Total parallel workers
max_parallel_maintenance_workers = 4   # Parallel maintenance workers

# =============================================================================
# WRITE-AHEAD LOGGING (WAL) CONFIGURATION
# =============================================================================

# WAL settings for performance and durability
wal_level = replica                    # WAL level for replication
wal_buffers = 32MB                     # WAL buffer size
wal_writer_delay = 200ms               # WAL writer delay
wal_writer_flush_after = 1MB           # WAL writer flush threshold

# Checkpoint configuration
checkpoint_timeout = 15min             # Maximum time between checkpoints
checkpoint_completion_target = 0.9     # Checkpoint completion target
checkpoint_flush_after = 256kB         # Checkpoint flush threshold
checkpoint_warning = 30s               # Checkpoint warning threshold

# WAL archiving (for backup and replication)
archive_mode = on                      # Enable WAL archiving
archive_command = '/bin/true'          # Archive command (configure for production)
archive_timeout = 1800s                # Archive timeout (30 minutes)

# =============================================================================
# QUERY OPTIMIZATION
# =============================================================================

# Cost-based optimizer settings
random_page_cost = 1.1                # Random page access cost (SSD optimized)
seq_page_cost = 1.0                   # Sequential page access cost
cpu_tuple_cost = 0.01                 # CPU cost per tuple
cpu_index_tuple_cost = 0.005          # CPU cost per index tuple
cpu_operator_cost = 0.0025            # CPU cost per operator

# Planner configuration
default_statistics_target = 150       # Statistics target for query planning
constraint_exclusion = partition      # Constraint exclusion for partitions
cursor_tuple_fraction = 0.1           # Cursor tuple fraction
from_collapse_limit = 8               # FROM clause collapse limit
join_collapse_limit = 8               # JOIN clause collapse limit

# Genetic query optimizer
geqo = on                             # Enable genetic query optimizer
geqo_threshold = 12                   # GEQO threshold
geqo_effort = 5                       # GEQO effort
geqo_pool_size = 0                    # GEQO pool size (0 = auto)
geqo_generations = 0                  # GEQO generations (0 = auto)

# =============================================================================
# PERFORMANCE MONITORING AND LOGGING
# =============================================================================

# Query performance tracking
track_activities = on                 # Track running queries
track_counts = on                     # Track table/index access statistics
track_io_timing = on                  # Track I/O timing
track_functions = all                 # Track function call statistics
track_activity_query_size = 4096     # Query text size in pg_stat_activity

# Slow query logging
log_min_duration_statement = 1000     # Log queries slower than 1 second
log_checkpoints = on                  # Log checkpoint activity
log_connections = on                  # Log new connections
log_disconnections = on               # Log disconnections
log_lock_waits = on                   # Log lock waits
log_temp_files = 10MB                 # Log temporary files larger than 10MB

# Statement logging
log_statement = 'mod'                 # Log modification statements
log_duration = on                     # Log statement duration
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Auto-explain for slow queries
shared_preload_libraries = 'pg_stat_statements,auto_explain'
auto_explain.log_min_duration = 5000  # Auto-explain for queries > 5 seconds
auto_explain.log_analyze = on         # Include actual row counts
auto_explain.log_buffers = on         # Include buffer usage
auto_explain.log_timing = on          # Include timing information
auto_explain.log_triggers = on        # Include trigger information
auto_explain.log_verbose = on         # Include verbose output

# pg_stat_statements configuration
pg_stat_statements.max = 10000        # Maximum number of statements tracked
pg_stat_statements.track = all        # Track all statements
pg_stat_statements.track_utility = on # Track utility statements
pg_stat_statements.save = on          # Save statistics across restarts

# =============================================================================
# VACUUM AND AUTOVACUUM CONFIGURATION
# =============================================================================

# Autovacuum settings for governance workload
autovacuum = on                       # Enable autovacuum
autovacuum_max_workers = 4            # Maximum autovacuum workers
autovacuum_naptime = 30s              # Autovacuum sleep time
autovacuum_vacuum_threshold = 50      # Minimum number of updated tuples
autovacuum_vacuum_scale_factor = 0.1  # Fraction of table size
autovacuum_analyze_threshold = 50     # Minimum number of updated tuples for analyze
autovacuum_analyze_scale_factor = 0.05 # Fraction of table size for analyze
autovacuum_freeze_max_age = 200000000 # Maximum age before forced vacuum
autovacuum_multixact_freeze_max_age = 400000000 # Maximum multixact age

# Vacuum cost-based delay
vacuum_cost_delay = 10ms              # Vacuum cost delay
vacuum_cost_page_hit = 1              # Vacuum cost for page hit
vacuum_cost_page_miss = 10            # Vacuum cost for page miss
vacuum_cost_page_dirty = 20           # Vacuum cost for dirty page
vacuum_cost_limit = 2000              # Vacuum cost limit

# =============================================================================
# REPLICATION AND HIGH AVAILABILITY
# =============================================================================

# Hot standby configuration
hot_standby = on                      # Enable hot standby
max_standby_archive_delay = 30s       # Maximum delay for archive recovery
max_standby_streaming_delay = 30s     # Maximum delay for streaming recovery
wal_receiver_status_interval = 10s    # WAL receiver status interval
hot_standby_feedback = on             # Send feedback to primary

# Replication settings
max_wal_senders = 10                  # Maximum WAL senders
wal_keep_segments = 32                # WAL segments to keep
wal_sender_timeout = 60s              # WAL sender timeout
max_replication_slots = 10            # Maximum replication slots

# =============================================================================
# SECURITY AND ACCESS CONTROL
# =============================================================================

# SSL configuration
ssl = on                              # Enable SSL
ssl_cert_file = 'server.crt'         # SSL certificate file
ssl_key_file = 'server.key'          # SSL private key file
ssl_ca_file = 'ca.crt'               # SSL certificate authority file
ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # SSL cipher list
ssl_prefer_server_ciphers = on        # Prefer server ciphers

# Authentication and authorization
password_encryption = scram-sha-256   # Password encryption method
krb_server_keyfile = ''               # Kerberos server key file
db_user_namespace = off               # Database user namespace

# =============================================================================
# GOVERNANCE-SPECIFIC OPTIMIZATIONS
# =============================================================================

# JSON and JSONB optimization
gin_pending_list_limit = 4MB          # GIN pending list limit for JSONB indexes

# Full-text search optimization
default_text_search_config = 'pg_catalog.english' # Default text search config

# Locale and character set
lc_messages = 'en_US.UTF-8'           # Locale for messages
lc_monetary = 'en_US.UTF-8'           # Locale for monetary formatting
lc_numeric = 'en_US.UTF-8'            # Locale for numeric formatting
lc_time = 'en_US.UTF-8'               # Locale for time formatting

# =============================================================================
# ADVANCED PERFORMANCE TUNING
# =============================================================================

# JIT compilation (PostgreSQL 11+)
jit = on                              # Enable JIT compilation
jit_above_cost = 100000               # JIT cost threshold
jit_inline_above_cost = 500000        # JIT inline cost threshold
jit_optimize_above_cost = 500000      # JIT optimization cost threshold

# Parallel query configuration
force_parallel_mode = off             # Force parallel mode
parallel_tuple_cost = 0.1             # Parallel tuple cost
parallel_setup_cost = 1000.0          # Parallel setup cost
min_parallel_table_scan_size = 8MB    # Minimum table size for parallel scan
min_parallel_index_scan_size = 512kB  # Minimum index size for parallel scan

# Background writer
bgwriter_delay = 200ms                # Background writer delay
bgwriter_lru_maxpages = 100           # Background writer LRU max pages
bgwriter_lru_multiplier = 2.0         # Background writer LRU multiplier
bgwriter_flush_after = 512kB          # Background writer flush threshold

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Statistics collector
stats_temp_directory = 'pg_stat_tmp'  # Statistics temporary directory
log_parser_stats = off                # Log parser statistics
log_planner_stats = off               # Log planner statistics
log_executor_stats = off              # Log executor statistics
log_statement_stats = off             # Log statement statistics

# Error reporting
log_min_messages = warning            # Minimum log level
log_min_error_statement = error       # Minimum error statement log level
log_destination = 'stderr'            # Log destination
logging_collector = on                # Enable logging collector
log_directory = 'pg_log'              # Log directory
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' # Log filename pattern
log_file_mode = 0600                  # Log file permissions
log_truncate_on_rotation = off        # Truncate log on rotation
log_rotation_age = 1d                 # Log rotation age
log_rotation_size = 100MB             # Log rotation size

# =============================================================================
# CUSTOM SETTINGS FOR ACGS-1
# =============================================================================

# Application-specific settings
application_name = 'acgs-1-governance' # Application name
cluster_name = 'acgs-production'       # Cluster name

# Custom variables for governance operations
custom_variable_classes = 'acgs'      # Custom variable classes
