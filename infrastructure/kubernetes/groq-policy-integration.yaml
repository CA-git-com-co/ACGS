---
# GroqCloud Policy Integration Service Deployment
# Constitutional Hash: cdd01ef066bc6cf2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: groq-policy-integration
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    tier: core
    constitutional-hash: cdd01ef066bc6cf2
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: groq-policy-integration
  template:
    metadata:
      labels:
        app: groq-policy-integration
        component: governance-synthesis
        tier: core
        constitutional-hash: cdd01ef066bc6cf2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8015"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: acgs-groq-policy
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: groq-policy-integration
        image: acgs/groq-policy-integration:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8015
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: groq-credentials
              key: api-key
        - name: CONSTITUTIONAL_HASH
          value: "cdd01ef066bc6cf2"
        - name: GROQ_BASE_URL
          value: "https://api.groq.com/openai/v1"
        - name: GROQ_DEFAULT_MODEL
          value: "qwen/qwen3-32b"
        - name: GROQ_TIER_MAPPING
          value: "nano:allam-2-7b,fast:llama-3.1-8b-instant,balanced:qwen/qwen3-32b,premium:llama-3.3-70b-versatile"
        - name: OPA_WASM_ENABLED
          value: "true"
        - name: WASM_POLICY_ENGINE_ENABLED
          value: "true"
        - name: WASM_RUNTIME
          value: "wasmtime"
        - name: WASM_POLICY_COMPILATION_TIMEOUT
          value: "30"
        - name: WASM_POLICY_CACHE_SIZE
          value: "1000"
        - name: OPA_WASM_POLICIES_PATH
          value: "/app/policies"
        - name: OPA_WASM_CACHE_SIZE
          value: "500"
        - name: OPA_WASM_EVALUATION_TIMEOUT
          value: "5"
        - name: POLICIES_PATH
          value: "/app/policies"
        - name: WASM_POOL_SIZE
          value: "20"
        - name: ENABLE_CACHING
          value: "true"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app"
        - name: PROMETHEUS_METRICS_PORT
          value: "9090"
        - name: SERVICE_PORT
          value: "8015"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: policies
          mountPath: /app/policies
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: wasm-cache
          mountPath: /app/wasm-cache
      volumes:
      - name: policies
        configMap:
          name: groq-policies
      - name: tmp
        emptyDir: {}
      - name: wasm-cache
        emptyDir:
          sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - groq-policy-integration
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "acgs/high-performance"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# Service for GroqCloud Policy Integration
apiVersion: v1
kind: Service
metadata:
  name: groq-policy-integration
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8015"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8015
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: groq-policy-integration

---
# ConfigMap for GroqCloud Policies
apiVersion: v1
kind: ConfigMap
metadata:
  name: groq-policies
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
data:
  groq_model_governance.rego: |
    # This would contain the actual policy content
    # In production, mount from policy files
    package acgs.groq.governance
    constitutional_hash := "cdd01ef066bc6cf2"
    default allow_groq_inference := false
    # ... (full policy content would be here)
  
  groq_constitutional_compliance.rego: |
    package acgs.groq.constitutional
    constitutional_hash := "cdd01ef066bc6cf2"
    default constitutional_compliant := false
    # ... (full policy content would be here)
  
  groq_output_validation.rego: |
    package acgs.groq.output_validation
    constitutional_hash := "cdd01ef066bc6cf2"
    default allow_output := false
    # ... (full policy content would be here)

---
# Secret for GroqCloud Credentials
apiVersion: v1
kind: Secret
metadata:
  name: groq-credentials
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
type: Opaque
data:
  # Base64 encoded GroqCloud API key
  # kubectl create secret generic groq-credentials --from-literal=api-key=YOUR_GROQ_API_KEY
  api-key: ""

---
# ServiceAccount for GroqCloud Policy Integration
apiVersion: v1
kind: ServiceAccount
metadata:
  name: acgs-groq-policy
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2

---
# ClusterRole for GroqCloud Policy Integration
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: acgs-groq-policy
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding for GroqCloud Policy Integration
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: acgs-groq-policy
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
subjects:
- kind: ServiceAccount
  name: acgs-groq-policy
  namespace: acgs
roleRef:
  kind: ClusterRole
  name: acgs-groq-policy
  apiGroup: rbac.authorization.k8s.io

---
# HorizontalPodAutoscaler for GroqCloud Policy Integration
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: groq-policy-integration-hpa
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: groq-policy-integration
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: groq_policy_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
# PodDisruptionBudget for GroqCloud Policy Integration
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: groq-policy-integration-pdb
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: groq-policy-integration

---
# NetworkPolicy for GroqCloud Policy Integration
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: groq-policy-integration-netpol
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
spec:
  podSelector:
    matchLabels:
      app: groq-policy-integration
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: acgs
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 8015
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS for GroqCloud API
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: acgs
    ports:
    - protocol: TCP
      port: 5439  # PostgreSQL
    - protocol: TCP
      port: 6389  # Redis
    - protocol: TCP
      port: 8181  # OPA

---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: groq-policy-integration
  namespace: acgs
  labels:
    app: groq-policy-integration
    component: governance-synthesis
    constitutional-hash: cdd01ef066bc6cf2
spec:
  selector:
    matchLabels:
      app: groq-policy-integration
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scheme: http
  namespaceSelector:
    matchNames:
    - acgs