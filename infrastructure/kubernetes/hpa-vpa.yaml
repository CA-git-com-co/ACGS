---
# Horizontal Pod Autoscaler for Auth Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: http_requests_per_second
        target:
          type: AverageValue
          averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 30

---
# Horizontal Pod Autoscaler for Constitutional AI Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: constitutional-ai-service-hpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: constitutional-ai-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 85
    - type: Pods
      pods:
        metric:
          name: constitutional_compliance_requests_per_second
        target:
          type: AverageValue
          averageValue: "30"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 15
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15

---
# Horizontal Pod Autoscaler for Integrity Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: integrity-service-hpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: integrity-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: audit_events_per_second
        target:
          type: AverageValue
          averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600 # Longer stabilization for audit integrity
      policies:
        - type: Percent
          value: 10
          periodSeconds: 120
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 30

---
# Horizontal Pod Autoscaler for Formal Verification Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: formal-verification-service-hpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: formal-verification-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 85
    - type: Pods
      pods:
        metric:
          name: verification_requests_per_second
        target:
          type: AverageValue
          averageValue: "10" # Lower due to computational complexity
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 20
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15

---
# Horizontal Pod Autoscaler for Policy Governance Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: policy-governance-service-hpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: policy-governance-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: policy_evaluations_per_second
        target:
          type: AverageValue
          averageValue: "40"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 15
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 30

---
# Horizontal Pod Autoscaler for Governance Synthesis Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: governance-synthesis-service-hpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: governance-synthesis-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: synthesis_requests_per_second
        target:
          type: AverageValue
          averageValue: "20"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 15
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 30

---
# Vertical Pod Autoscaler for PostgreSQL
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: postgresql-vpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  targetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: postgresql
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: postgresql
        minAllowed:
          memory: "2Gi"
          cpu: "1000m"
        maxAllowed:
          memory: "8Gi"
          cpu: "4000m"
        controlledResources: ["cpu", "memory"]

---
# Vertical Pod Autoscaler for Redis
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: redis-vpa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redis
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: redis
        minAllowed:
          memory: "512Mi"
          cpu: "250m"
        maxAllowed:
          memory: "2Gi"
          cpu: "1000m"
        controlledResources: ["cpu", "memory"]

---
# Custom Metrics for Constitutional Compliance Scaling
apiVersion: v1
kind: ConfigMap
metadata:
  name: acgs-custom-metrics
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: autoscaling
data:
  custom-metrics.yaml: |
    # Constitutional Compliance Custom Metrics for HPA
    # Constitutional Hash: cdd01ef066bc6cf2

    metrics:
      # Constitutional compliance score-based scaling
      - name: constitutional_compliance_score
        description: "Average constitutional compliance score"
        query: "avg(constitutional_compliance_score{job=~'acgs.*'})"
        target_value: 0.95
        scale_direction: "down"  # Scale down if compliance is too low

      # Audit trail processing rate
      - name: audit_events_per_second
        description: "Audit events processed per second"
        query: "rate(audit_events_total{job='acgs-integrity-service'}[5m])"
        target_value: 100
        scale_direction: "up"

      # Formal verification queue depth
      - name: verification_queue_depth
        description: "Number of pending verification requests"
        query: "verification_queue_depth{job='acgs-formal-verification-service'}"
        target_value: 50
        scale_direction: "up"

      # Constitutional hash verification rate
      - name: constitutional_hash_verifications_per_second
        description: "Constitutional hash verifications per second"
        query: "rate(constitutional_hash_verifications_total{job=~'acgs.*'}[5m])"
        target_value: 200
        scale_direction: "up"

      # Policy evaluation latency
      - name: policy_evaluation_latency
        description: "Average policy evaluation latency"
        query: "avg(policy_evaluation_duration_seconds{job='acgs-policy-governance-service'})"
        target_value: 0.1  # 100ms
        scale_direction: "up"  # Scale up if latency too high

      # Multi-tenant isolation violations
      - name: tenant_isolation_violations_per_minute
        description: "Tenant isolation violations per minute"
        query: "rate(tenant_isolation_violations_total{job=~'acgs.*'}[1m]) * 60"
        target_value: 0  # Zero tolerance for isolation violations
        scale_direction: "alert"  # Trigger alerts rather than scaling

---
# Pod Disruption Budget for Database
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgresql-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: database
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql

---
# Pod Disruption Budget for Redis
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: cache
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis

---
# Pod Disruption Budget for Core Services
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: acgs-core-services-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: services
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: acgs
      app.kubernetes.io/component: auth

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: acgs-constitutional-ai-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: constitutional-ai
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: acgs
      app.kubernetes.io/component: constitutional-ai

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: acgs-integrity-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: integrity
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: acgs
      app.kubernetes.io/component: integrity

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: acgs-verification-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: verification
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: acgs
      app.kubernetes.io/component: verification

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: acgs-policy-governance-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: policy
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: acgs
      app.kubernetes.io/component: policy

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: acgs-governance-synthesis-pdb
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: governance
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: acgs
      app.kubernetes.io/component: governance
