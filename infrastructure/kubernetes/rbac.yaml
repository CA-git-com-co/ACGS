---
# ACGS System Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: acgs-system-sa
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
  annotations:
    acgs.ai/constitutional-compliance: "required"
    acgs.ai/security-level: "strict"

---
# Constitutional Compliance ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: acgs-constitutional-compliance
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  # Constitutional compliance verification
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps"]
    verbs: ["get", "list", "watch"]
    resourceNames: []
  # Audit trail access
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create"]
  # Metrics access for constitutional monitoring
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list"]

---
# ACGS Core Services ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: acgs-core-services
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  # Service discovery and health checks
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
  # ConfigMap access for configuration
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  # Secret access (limited to own namespace)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["acgs-secrets", "postgresql-secret", "redis-secret"]
  # Pod information for service mesh
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

---
# Database Access Role (namespace-scoped)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: acgs-database-access
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  # Database secrets access
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["postgresql-secret", "redis-secret"]
  # Database service access
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get"]
    resourceNames: ["postgresql", "redis"]
  # PVC access for database storage
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list"]
    resourceNames: ["postgresql-pvc", "redis-pvc", "audit-logs-pvc"]

---
# Monitoring Access Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: acgs-monitoring-access
  namespace: acgs-monitoring
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  # Monitoring secrets access
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["monitoring-secrets"]
  # Monitoring services access
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]
    resourceNames: ["prometheus", "grafana"]
  # ConfigMaps for monitoring configuration
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]

---
# Audit Trail Access Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: acgs-audit-trail-access
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  # Audit logs PVC access
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
    resourceNames: ["audit-logs-pvc"]
  # Events for audit trail
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "patch"]
  # Pod logs access for audit
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]

---
# Constitutional Compliance ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: acgs-constitutional-compliance-binding
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: acgs-constitutional-compliance
subjects:
  - kind: ServiceAccount
    name: acgs-system-sa
    namespace: acgs-system

---
# Core Services ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: acgs-core-services-binding
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: acgs-core-services
subjects:
  - kind: ServiceAccount
    name: acgs-system-sa
    namespace: acgs-system

---
# Database Access RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: acgs-database-access-binding
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: acgs-database-access
subjects:
  - kind: ServiceAccount
    name: acgs-system-sa
    namespace: acgs-system

---
# Audit Trail Access RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: acgs-audit-trail-access-binding
  namespace: acgs-system
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: acgs-audit-trail-access
subjects:
  - kind: ServiceAccount
    name: acgs-system-sa
    namespace: acgs-system

---
# Monitoring Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: acgs-monitoring-sa
  namespace: acgs-monitoring
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac

---
# Monitoring Access RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: acgs-monitoring-access-binding
  namespace: acgs-monitoring
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: acgs-monitoring-access
subjects:
  - kind: ServiceAccount
    name: acgs-monitoring-sa
    namespace: acgs-monitoring

---
# Prometheus ClusterRole for metrics collection
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: acgs-prometheus-metrics
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  # Metrics collection across cluster
  - apiGroups: [""]
    resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  # Non-resource URLs for cluster metrics
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
# Prometheus ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: acgs-prometheus-metrics-binding
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: acgs-prometheus-metrics
subjects:
  - kind: ServiceAccount
    name: acgs-monitoring-sa
    namespace: acgs-monitoring

---
# Pod Security Policy (if PSP is enabled)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: acgs-restricted
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
  annotations:
    acgs.ai/constitutional-compliance: "required"
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: "docker/default,runtime/default"
    apparmor.security.beta.kubernetes.io/allowedProfileNames: "runtime/default"
    seccomp.security.alpha.kubernetes.io/defaultProfileName: "runtime/default"
    apparmor.security.beta.kubernetes.io/defaultProfileName: "runtime/default"
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - "configMap"
    - "emptyDir"
    - "projected"
    - "secret"
    - "downwardAPI"
    - "persistentVolumeClaim"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: "MustRunAsNonRoot"
  supplementalGroups:
    rule: "MustRunAs"
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: "MustRunAs"
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true

---
# ClusterRole for PSP usage
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: acgs-psp-user
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
rules:
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["acgs-restricted"]

---
# ClusterRoleBinding for PSP usage
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: acgs-psp-user-binding
  labels:
    constitutional-hash: "cdd01ef066bc6cf2"
    app.kubernetes.io/part-of: acgs
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: acgs-psp-user
subjects:
  - kind: ServiceAccount
    name: acgs-system-sa
    namespace: acgs-system
  - kind: ServiceAccount
    name: acgs-monitoring-sa
    namespace: acgs-monitoring
