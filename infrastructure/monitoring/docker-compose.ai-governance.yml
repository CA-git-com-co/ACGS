version: '3.8'
services:
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: acgs_ai_governance_prometheus
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --storage.tsdb.retention.time=720h
    - --web.enable-lifecycle
    - --web.enable-admin-api
    - --storage.tsdb.max-block-duration=2h
    volumes:
    - ./config/prometheus-ai-governance.yml:/etc/prometheus/prometheus.yml:ro
    - ./config/ai-governance-alert-rules.yml:/etc/prometheus/ai-governance-alert-rules.yml:ro
    - ./config/constitutional-ai-rules.yml:/etc/prometheus/constitutional-ai-rules.yml:ro
    - prometheus_ai_governance_data:/prometheus
    ports:
    - 9091:9090
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
  grafana:
    image: grafana/grafana:10.2.0
    container_name: acgs_ai_governance_grafana
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=os.environ.get("PASSWORD")
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
    - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    - GF_ANALYTICS_REPORTING_ENABLED=false
    - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
    - grafana_ai_governance_data:/var/lib/grafana
    - ./config/grafana/provisioning:/etc/grafana/provisioning
    - ./dashboards/ai-governance:/var/lib/grafana/dashboards/ai-governance
    - ./dashboards/constitutional-ai:/var/lib/grafana/dashboards/constitutional-ai  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2
    - ./dashboards/bandit-algorithms:/var/lib/grafana/dashboards/bandit-algorithms
    ports:
    - 3001:3000
    networks:
    - ai_governance_monitoring
    depends_on:
    - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
  evidently:
    image: evidentlyai/evidently-service:0.4.9
    container_name: acgs_evidently_ai
    environment:
    - EVIDENTLY_SERVICE_PORT=8080
    - EVIDENTLY_SERVICE_HOST=0.0.0.0
    - EVIDENTLY_WORKSPACE=/workspace
    volumes:
    - ./config/evidently:/workspace/config
    - evidently_data:/workspace/data
    - ./evidently-projects:/workspace/projects
    ports:
    - 8080:8080
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: acgs_ai_governance_alertmanager
    command:
    - --config.file=/etc/alertmanager/alertmanager.yml
    - --storage.path=/alertmanager
    - --web.external-url=http://localhost:9093
    - --cluster.listen-address=0.0.0.0:9094
    volumes:
    - ./config/alertmanager-ai-governance.yml:/etc/alertmanager/alertmanager.yml:ro
    - alertmanager_ai_governance_data:/alertmanager
    ports:
    - 9094:9093
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
  opa:
    image: openpolicyagent/opa:0.58.0-envoy
    container_name: acgs_opa_policy_engine
    command:
    - run
    - --server
    - --config-file=/config/opa-config.yaml
    - --addr=0.0.0.0:8181
    - --diagnostic-addr=0.0.0.0:8282
    - /policies
    volumes:
    - ./config/opa-ai-governance-config.yaml:/config/opa-config.yaml:ro
    - ./policies:/policies:ro
    - opa_data:/data
    ports:
    - 8181:8181
    - 8282:8282
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
  node_exporter:
    image: prom/node-exporter:v1.6.1
    container_name: acgs_ai_governance_node_exporter
    command:
    - --path.rootfs=/host
    - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    volumes:
    - /:/host:ro,rslave
    ports:
    - 9101:9100
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: acgs_ai_governance_cadvisor
    privileged: true
    devices:
    - /dev/kmsg:/dev/kmsg
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker:/var/lib/docker:ro
    - /cgroup:/cgroup:ro
    ports:
    - 8081:8080
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: acgs_ai_governance_jaeger
    environment:
    - COLLECTOR_OTLP_ENABLED=true
    - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
    - 16686:16686
    - 14268:14268
    - 14250:14250
    - 9411:9411
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
  redis:
    image: redis:7.2-alpine
    container_name: acgs_ai_governance_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
    - redis_ai_governance_data:/data
    ports:
    - 6380:6379
    networks:
    - ai_governance_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
networks:
  ai_governance_monitoring:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.0.0/16
volumes:
  prometheus_ai_governance_data: null
  grafana_ai_governance_data: null
  evidently_data: null
  alertmanager_ai_governance_data: null
  opa_data: null
  redis_ai_governance_data: null
constitutional_hash: cdd01ef066bc6cf2
