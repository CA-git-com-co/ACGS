# ACGS-1 Alert Manager Configuration - Subtask 13.5
# Enterprise-grade notification system with multi-channel delivery and escalation policies
# Target: Critical <5min, High <15min, Medium <1hr response times

global:
  # SMTP configuration for email alerts
  smtp_smarthost: 'localhost:587'
  smtp_from: 'acgs-alerts@acgs.ai'
  smtp_auth_username: 'acgs-alerts@acgs.ai'
  smtp_auth_password: 'secure_password_here'
  smtp_require_tls: false

  # Global alert resolution timeout
  resolve_timeout: 5m

  # External service URLs
  slack_api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
  pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'

# ============================================================================
# ROUTING CONFIGURATION WITH ESCALATION POLICIES
# ============================================================================
route:
  group_by: ['alertname', 'severity', 'service', 'component', 'team']
  group_wait: 10s
  group_interval: 5m
  repeat_interval: 12h
  receiver: 'default-receiver'

  routes:
    # ========================================================================
    # CRITICAL ALERTS - IMMEDIATE ESCALATION (<5min response time)
    # ========================================================================
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 5s
      group_interval: 2m
      repeat_interval: 5m
      routes:
        # Immediate escalation for service down and constitutional violations
        - match:
            escalation: immediate
          receiver: 'immediate-escalation'
          group_wait: 0s
          repeat_interval: 2m

        # Security critical alerts - fastest response
        - match:
            team: security
          receiver: 'security-critical'
          group_wait: 0s
          repeat_interval: 1m

        # Blockchain critical alerts
        - match:
            team: blockchain
          receiver: 'blockchain-critical'
          group_wait: 5s
          repeat_interval: 3m

        # Constitutional governance critical
        - match:
            team: governance
          receiver: 'governance-critical'
          group_wait: 5s
          repeat_interval: 3m

    # ========================================================================
    # WARNING ALERTS - HIGH PRIORITY (<15min response time)
    # ========================================================================
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      group_interval: 10m
      repeat_interval: 2h
      routes:
        # Team-specific routing
        - match:
            team: governance
          receiver: 'governance-team'

        - match:
            team: infrastructure
          receiver: 'infrastructure-team'

        - match:
            team: platform
          receiver: 'platform-team'

        - match:
            team: security
          receiver: 'security-team'

        - match:
            team: blockchain
          receiver: 'blockchain-team'

    # ========================================================================
    # WORKFLOW-SPECIFIC ROUTING
    # ========================================================================
    - match_re:
        workflow: '.*'
      receiver: 'governance-workflow-alerts'
      group_by: ['workflow', 'component']
      group_wait: 15s
      group_interval: 5m
      repeat_interval: 1h

    # ========================================================================
    # SERVICE-SPECIFIC ROUTING
    # ========================================================================
    - match_re:
        service: '.*'
      receiver: 'service-specific-alerts'
      group_by: ['service', 'component']
      group_wait: 20s
      group_interval: 5m
      repeat_interval: 2h

    # ========================================================================
    # MAINTENANCE AND TESTING
    # ========================================================================
    - match:
        maintenance: 'true'
      receiver: 'null-receiver'

    - match:
        alertname: 'Watchdog'
      receiver: 'null-receiver'

# ============================================================================
# NOTIFICATION RECEIVERS - MULTI-CHANNEL WITH ESCALATION
# ============================================================================
receivers:
  # ========================================================================
  # DEFAULT RECEIVER
  # ========================================================================
  - name: 'default-receiver'
    email_configs:
      - to: 'ops-team@acgs.ai'
        subject: '[ACGS-1] {{ .GroupLabels.alertname }} - {{ .Status | toUpper }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Team: {{ .Labels.team }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'general'

    webhook_configs:
      - url: 'http://localhost:5001/webhook/general'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'acgs_webhook'
            password: 'webhook_secret'

  # ========================================================================
  # IMMEDIATE ESCALATION - FASTEST RESPONSE
  # ========================================================================
  - name: 'immediate-escalation'
    email_configs:
      - to: 'critical-alerts@acgs.ai,on-call@acgs.ai'
        subject: '🚨 [IMMEDIATE] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          🚨🚨🚨 IMMEDIATE ESCALATION REQUIRED 🚨🚨🚨

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Impact: {{ .Annotations.impact }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Team: {{ .Labels.team }}
          Runbook: {{ .Annotations.runbook_url }}

          ⏰ Response Time Target: <5 minutes
          📞 Escalation: Immediate
          {{ end }}
        headers:
          X-Priority: 'urgent'
          X-ACGS-Alert-Type: 'immediate'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#acgs-critical-alerts'
        title: '🚨 IMMEDIATE: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          **{{ .Annotations.summary }}**
          {{ .Annotations.description }}

          **Impact:** {{ .Annotations.impact }}
          **Service:** {{ .Labels.service }}
          **Team:** {{ .Labels.team }}
          **Runbook:** {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true

    pagerduty_configs:
      - routing_key: 'PLACEHOLDER_PAGERDUTY_KEY'
        description: '{{ .GroupLabels.alertname }}: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        severity: 'critical'
        details:
          service: '{{ .GroupLabels.service }}'
          component: '{{ .GroupLabels.component }}'
          team: '{{ .GroupLabels.team }}'

  # ========================================================================
  # CRITICAL ALERTS
  # ========================================================================
  - name: 'critical-alerts'
    email_configs:
      - to: 'critical-alerts@acgs.ai'
        subject: '[CRITICAL] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          🚨 CRITICAL ALERT 🚨

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Team: {{ .Labels.team }}
          Runbook: {{ .Annotations.runbook_url }}

          ⏰ Response Time Target: <5 minutes
          {{ end }}
        headers:
          X-Priority: 'high'
          X-ACGS-Alert-Type: 'critical'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#acgs-critical-alerts'
        title: '🚨 CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          **{{ .Annotations.summary }}**
          {{ .Annotations.description }}

          **Service:** {{ .Labels.service }}
          **Team:** {{ .Labels.team }}
          **Runbook:** {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true

  # ========================================================================
  # SECURITY CRITICAL ALERTS
  # ========================================================================
  - name: 'security-critical'
    email_configs:
      - to: 'security-team@acgs.ai,critical-alerts@acgs.ai'
        subject: '🔒 [SECURITY CRITICAL] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          🔒🚨 SECURITY CRITICAL ALERT 🚨🔒

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Impact: {{ .Annotations.impact }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}

          ⚠️ SECURITY BREACH POSSIBLE ⚠️
          ⏰ Response Time Target: <1 minute
          {{ end }}
        headers:
          X-Priority: 'urgent'
          X-ACGS-Alert-Type: 'security-critical'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#acgs-security-alerts'
        title: '🔒🚨 SECURITY CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          **{{ .Annotations.summary }}**
          {{ .Annotations.description }}

          **Impact:** {{ .Annotations.impact }}
          **Service:** {{ .Labels.service }}
          **Runbook:** {{ .Annotations.runbook_url }}

          @channel - Immediate security review required!
          {{ end }}
        send_resolved: true

    pagerduty_configs:
      - routing_key: 'PLACEHOLDER_PAGERDUTY_SECURITY_KEY'
        description: 'SECURITY: {{ .GroupLabels.alertname }}'
        severity: 'critical'

  # ========================================================================
  # BLOCKCHAIN CRITICAL ALERTS
  # ========================================================================
  - name: 'blockchain-critical'
    email_configs:
      - to: 'blockchain-team@acgs.ai,critical-alerts@acgs.ai'
        subject: '⛓️ [BLOCKCHAIN CRITICAL] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          ⛓️🚨 BLOCKCHAIN CRITICAL ALERT 🚨⛓️

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Impact: {{ .Annotations.impact }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}

          🔗 Quantumagi Solana devnet affected
          ⏰ Response Time Target: <5 minutes
          {{ end }}
        headers:
          X-Priority: 'high'
          X-ACGS-Alert-Type: 'blockchain-critical'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#acgs-blockchain-alerts'
        title: '⛓️🚨 BLOCKCHAIN CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          **{{ .Annotations.summary }}**
          {{ .Annotations.description }}

          **Impact:** {{ .Annotations.impact }}
          **Component:** {{ .Labels.component }}
          **Runbook:** {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true

  # ========================================================================
  # GOVERNANCE CRITICAL ALERTS
  # ========================================================================
  - name: 'governance-critical'
    email_configs:
      - to: 'governance-team@acgs.ai,critical-alerts@acgs.ai'
        subject: '⚖️ [GOVERNANCE CRITICAL] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          ⚖️🚨 CONSTITUTIONAL GOVERNANCE CRITICAL 🚨⚖️

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Impact: {{ .Annotations.impact }}
          Workflow: {{ .Labels.workflow }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}

          🏛️ Constitutional governance integrity at risk
          ⏰ Response Time Target: <5 minutes
          {{ end }}
        headers:
          X-Priority: 'high'
          X-ACGS-Alert-Type: 'governance-critical'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#acgs-governance-alerts'
        title: '⚖️🚨 GOVERNANCE CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          **{{ .Annotations.summary }}**
          {{ .Annotations.description }}

          **Impact:** {{ .Annotations.impact }}
          **Workflow:** {{ .Labels.workflow }}
          **Runbook:** {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true

  # ========================================================================
  # WARNING ALERTS
  # ========================================================================
  - name: 'warning-alerts'
    email_configs:
      - to: 'ops-team@acgs.ai'
        subject: '[WARNING] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          ⚠️ WARNING ALERT ⚠️

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Team: {{ .Labels.team }}
          Runbook: {{ .Annotations.runbook_url }}

          ⏰ Response Time Target: <15 minutes
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'warning'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#acgs-alerts'
        title: '⚠️ WARNING: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          **{{ .Annotations.summary }}**
          {{ .Annotations.description }}

          **Service:** {{ .Labels.service }}
          **Team:** {{ .Labels.team }}
          **Runbook:** {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true

  # ========================================================================
  # TEAM-SPECIFIC RECEIVERS
  # ========================================================================
  - name: 'governance-team'
    email_configs:
      - to: 'governance-team@acgs.ai'
        subject: '[GOVERNANCE] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          ⚖️ CONSTITUTIONAL GOVERNANCE ALERT ⚖️

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Workflow: {{ .Labels.workflow }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}

          This alert affects constitutional governance operations.
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'governance'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#governance-team'
        title: '⚖️ GOVERNANCE: {{ .GroupLabels.alertname }}'
        send_resolved: true

  - name: 'infrastructure-team'
    email_configs:
      - to: 'infrastructure-team@acgs.ai'
        subject: '[INFRASTRUCTURE] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          🏗️ INFRASTRUCTURE ALERT 🏗️

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'infrastructure'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#infrastructure-team'
        title: '🏗️ INFRASTRUCTURE: {{ .GroupLabels.alertname }}'
        send_resolved: true

  - name: 'platform-team'
    email_configs:
      - to: 'platform-team@acgs.ai'
        subject: '[PLATFORM] ACGS-1 {{ .GroupLabels.alertname }}'
        headers:
          X-ACGS-Alert-Type: 'platform'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#platform-team'
        title: '🖥️ PLATFORM: {{ .GroupLabels.alertname }}'
        send_resolved: true

  - name: 'security-team'
    email_configs:
      - to: 'security-team@acgs.ai'
        subject: '[SECURITY] ACGS-1 {{ .GroupLabels.alertname }}'
        body: |
          🔒 SECURITY ALERT 🔒

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}

          Security review required.
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'security'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#security-team'
        title: '🔒 SECURITY: {{ .GroupLabels.alertname }}'
        send_resolved: true

  - name: 'blockchain-team'
    email_configs:
      - to: 'blockchain-team@acgs.ai'
        subject: '[BLOCKCHAIN] ACGS-1 {{ .GroupLabels.alertname }}'
        headers:
          X-ACGS-Alert-Type: 'blockchain'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#blockchain-team'
        title: '⛓️ BLOCKCHAIN: {{ .GroupLabels.alertname }}'
        send_resolved: true

  # ========================================================================
  # WORKFLOW AND SERVICE-SPECIFIC RECEIVERS
  # ========================================================================
  - name: 'governance-workflow-alerts'
    email_configs:
      - to: 'governance-team@acgs.ai'
        subject: '[WORKFLOW] ACGS-1 {{ .GroupLabels.workflow }} - {{ .GroupLabels.alertname }}'
        body: |
          🔄 GOVERNANCE WORKFLOW ALERT 🔄

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Workflow: {{ .Labels.workflow }}
          Component: {{ .Labels.component }}
          Stage: {{ .Labels.stage }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'workflow'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#governance-workflows'
        title: '🔄 WORKFLOW: {{ .GroupLabels.workflow }} - {{ .GroupLabels.alertname }}'
        send_resolved: true

  - name: 'service-specific-alerts'
    email_configs:
      - to: 'ops-team@acgs.ai'
        subject: '[SERVICE] ACGS-1 {{ .GroupLabels.service }} - {{ .GroupLabels.alertname }}'
        body: |
          🔧 SERVICE ALERT 🔧

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
        headers:
          X-ACGS-Alert-Type: 'service'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/PLACEHOLDER/WEBHOOK/URL'
        channel: '#service-alerts'
        title: '🔧 SERVICE: {{ .GroupLabels.service }} - {{ .GroupLabels.alertname }}'
        send_resolved: true

  # ========================================================================
  # NULL RECEIVER FOR MAINTENANCE AND TESTING
  # ========================================================================
  - name: 'null-receiver'

# ============================================================================
# ENHANCED INHIBITION RULES
# ============================================================================
inhibit_rules:
  # Inhibit warning alerts when critical alerts are firing for the same service
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'service', 'component']

  # Inhibit all service alerts when the entire service is down
  - source_match:
      alertname: 'ACGSServiceDown'
    target_match_re:
      alertname: '.*'
    equal: ['service']

  # Inhibit specific service alerts when service is down
  - source_match:
      alertname: 'AuthenticationServiceDown'
    target_match_re:
      service: 'authentication'
    equal: ['service']

  - source_match:
      alertname: 'ConstitutionalAIServiceDown'
    target_match_re:
      service: 'constitutional_ai'
    equal: ['service']

  - source_match:
      alertname: 'IntegrityServiceDown'
    target_match_re:
      service: 'integrity'
    equal: ['service']

  - source_match:
      alertname: 'FormalVerificationServiceDown'
    target_match_re:
      service: 'formal_verification'
    equal: ['service']

  - source_match:
      alertname: 'GovernanceSynthesisServiceDown'
    target_match_re:
      service: 'governance_synthesis'
    equal: ['service']

  - source_match:
      alertname: 'PGCServiceDown'
    target_match_re:
      service: 'pgc'
    equal: ['service']

  - source_match:
      alertname: 'EvolutionaryComputationServiceDown'
    target_match_re:
      service: 'evolutionary_computation'
    equal: ['service']

  # Inhibit infrastructure alerts when load balancer is down
  - source_match:
      alertname: 'HAProxyDown'
    target_match_re:
      component: 'backend_.*|load_balancer_.*'
    equal: ['instance']

  # Inhibit cache alerts when Redis is down
  - source_match:
      alertname: 'RedisDown'
    target_match_re:
      component: 'cache_.*|redis_.*'
    equal: ['instance']

  # Inhibit blockchain alerts when Solana network has issues
  - source_match:
      alertname: 'SolanaNetworkHealthIssues'
    target_match_re:
      component: 'blockchain_.*|quantumagi_.*|solana_.*'
    equal: ['instance']

  # Inhibit dependent alerts when constitutional compliance is compromised
  - source_match:
      alertname: 'ConstitutionalComplianceScoreCritical'
    target_match_re:
      component: 'compliance_.*'
    equal: ['service']

  # Inhibit workflow alerts when governance services are down
  - source_match_re:
      alertname: '.*ServiceDown'
      team: 'governance'
    target_match_re:
      workflow: '.*'
    equal: ['service']

  # Inhibit performance alerts when system availability is below SLA
  - source_match:
      alertname: 'SystemAvailabilityBelowSLA'
    target_match_re:
      component: 'performance|response_time'
    equal: ['instance']
