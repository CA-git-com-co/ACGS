# ACGS-2 Consolidated Prometheus Configuration
# This configuration consolidates all monitoring targets and rules
# Constitutional Hash: cdd01ef066bc6cf2

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'acgs-2'
    constitutional_hash: 'cdd01ef066bc6cf2'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Core ACGS-2 Services
  - job_name: 'acgs-auth-service'
    static_configs:
      - targets: ['auth_service:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    params:
      module: [http_2xx]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: auth_service:8000

  - job_name: 'acgs-constitutional-ai'
    static_configs:
      - targets: ['ac_service:8001']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'acgs-integrity-service'
    static_configs:
      - targets: ['integrity_service:8002']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'acgs-formal-verification'
    static_configs:
      - targets: ['fv_service:8003']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'acgs-governance-synthesis'
    static_configs:
      - targets: ['gs_service:8004']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'acgs-policy-governance'
    static_configs:
      - targets: ['pgc_service:8005']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'acgs-evolutionary-computation'
    static_configs:
      - targets: ['ec_service:8006']
    metrics_path: '/metrics'
    scrape_interval: 10s

  # Infrastructure Services
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres_exporter:9187']
    metrics_path: '/metrics'
    scrape_interval: 30s

  - job_name: 'redis'
    static_configs:
      - targets: ['redis_exporter:9121']
    metrics_path: '/metrics'
    scrape_interval: 30s

  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node_exporter:9100']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Monitoring Stack
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    metrics_path: '/metrics'
    scrape_interval: 30s

  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Load Balancer
  - job_name: 'haproxy'
    static_configs:
      - targets: ['haproxy:8404']
    metrics_path: '/stats/prometheus'
    scrape_interval: 30s

  # Service Discovery for Dynamic Targets
  - job_name: 'docker-services'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
        filters:
          - name: label
            values: ["com.acgs.constitutional-hash=cdd01ef066bc6cf2"]
    relabel_configs:
      - source_labels: [__meta_docker_container_label_com_acgs_service]
        target_label: service
      - source_labels: [__meta_docker_container_label_com_acgs_component]
        target_label: component
      - source_labels: [__meta_docker_container_label_com_acgs_environment]
        target_label: environment
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      - source_labels: [__meta_docker_port_private]
        regex: '(8000|8001|8002|8003|8004|8005|8006|9090|9093|9100|9121|9187|3000|3100)'
        target_label: __address__
        replacement: '${1}'

  # Health Checks
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://auth_service:8000/health
        - http://ac_service:8001/health
        - http://integrity_service:8002/health
        - http://fv_service:8003/health
        - http://gs_service:8004/health
        - http://pgc_service:8005/health
        - http://ec_service:8006/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Remote write configuration for long-term storage
remote_write:
  - url: "${PROMETHEUS_REMOTE_WRITE_URL}"
    basic_auth:
      username: "${PROMETHEUS_REMOTE_WRITE_USERNAME}"
      password: "${PROMETHEUS_REMOTE_WRITE_PASSWORD}"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'acgs_.*'
        action: keep

# Remote read configuration
remote_read:
  - url: "${PROMETHEUS_REMOTE_READ_URL}"
    basic_auth:
      username: "${PROMETHEUS_REMOTE_READ_USERNAME}"
      password: "${PROMETHEUS_REMOTE_READ_PASSWORD}"

# Storage configuration
storage:
  tsdb:
    retention_time: "15d"
    retention_size: "10GB"
    wal_compression: true

# Web configuration
web:
  console:
    libraries: '/usr/share/prometheus/console_libraries'
    templates: '/usr/share/prometheus/consoles'
  enable_lifecycle: true
  enable_admin_api: true
  max_connections: 512
  read_timeout: 30s
  
# Tracing configuration
tracing:
  endpoint: "jaeger:14268"
  sampling_fraction: 0.1