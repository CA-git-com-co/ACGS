[tool:pytest]
# ACGS-1 Unified Test Configuration

# Test discovery
testpaths = ../tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and load tests
    security: Security and authentication tests
    slow: Tests that take a long time to run
    blockchain: Blockchain and Solana program tests
    governance: Governance workflow tests
    constitutional: Constitutional compliance tests

# Async support
asyncio_mode = auto

# Output options
addopts =
    --strict-markers
    --strict-config
    --tb=short
    --verbose
    --cov=../services
    --cov=../scripts
    --cov=../blockchain
    --cov-report=html:../tests/coverage/html
    --cov-report=json:../tests/coverage/coverage.json
    --cov-report=term-missing
    --cov-fail-under=80
    -ra

# Coverage configuration
[coverage:run]
source = services, scripts, blockchain
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */node_modules/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2
skip_covered = False

[coverage:html]
directory = tests/coverage/html
title = ACGS-1 Test Coverage Report

[coverage:json]
output = tests/coverage/coverage.json
