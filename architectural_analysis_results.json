{
  "constitutional_hash": "cdd01ef066bc6cf2",
  "analysis_timestamp": "2025-07-18T08:50:38.715039",
  "service_analysis": {
    "constitutional_hash": "cdd01ef066bc6cf2",
    "service_categories": {
      "examples": {
        "service_count": 1,
        "services": [
          {
            "name": "context_engineering",
            "path": "services/examples/context_engineering",
            "files": {
              "total": 10,
              "by_type": {
                ".md": 5,
                ".backup": 1,
                ".py": 3,
                ".pyc": 1
              }
            },
            "lines_of_code": 1879,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /metrics",
              "GET /api/v1/constitutional/validate",
              "GET /health",
              "POST /api/v1/process"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "requests",
              "Enum",
              "fastapi",
              "redis",
              "uuid4",
              "contextlib",
              "Counter",
              "datetime",
              "AsyncMock",
              "UUID",
              "prometheus_client",
              "uvicorn",
              "Depends",
              "asynccontextmanager",
              "typing",
              "pytest",
              "TestClient",
              "json",
              "localhost:8010",
              "enum",
              "Any",
              "localhost:8008",
              "CORSMiddleware",
              "time"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "service_layer"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 1,
          "total_lines": 1879,
          "total_files": 10,
          "average_lines_per_service": 1879.0,
          "average_files_per_service": 10.0,
          "constitutional_compliance_rate": 1.0
        }
      },
      "cli": {
        "service_count": 2,
        "services": [
          {
            "name": "opencode",
            "path": "services/cli/opencode",
            "files": {
              "total": 152,
              "by_type": {
                ".json": 4,
                "": 4,
                ".lock": 1,
                ".md": 36,
                ".ts": 83,
                ".mjs": 1,
                ".cmd": 1,
                ".snap": 1,
                ".txt": 19,
                ".backup": 2
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "tui",
            "path": "services/cli/tui",
            "files": {
              "total": 186,
              "by_type": {
                ".yml": 3,
                ".md": 50,
                ".mod": 2,
                "": 11,
                ".backup": 3,
                ".sum": 2,
                ".go": 92,
                ".json": 23
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          }
        ],
        "category_complexity": {
          "total_services": 2,
          "total_lines": 0,
          "total_files": 338,
          "average_lines_per_service": 0.0,
          "average_files_per_service": 169.0,
          "constitutional_compliance_rate": 0.0
        }
      },
      "contexts": {
        "service_count": 5,
        "services": [
          {
            "name": "integration",
            "path": "services/contexts/integration",
            "files": {
              "total": 2,
              "by_type": {
                ".py": 1,
                ".md": 1
              }
            },
            "lines_of_code": 531,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "ABC",
              "abc",
              "datetime",
              "Any",
              "logging",
              "TenantId"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "audit_integrity",
            "path": "services/contexts/audit_integrity",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 2,
                ".py": 1
              }
            },
            "lines_of_code": 491,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "json",
              "datetime",
              "Any",
              "hashlib"
            ],
            "communication_patterns": [
              "event_driven"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "policy_management",
            "path": "services/contexts/policy_management",
            "files": {
              "total": 5,
              "by_type": {
                ".md": 2,
                ".py": 3
              }
            },
            "lines_of_code": 1175,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "DomainEvent",
              "dataclasses",
              "CONSTITUTIONAL_HASH",
              "EntityId",
              "Enum",
              "datetime",
              "enum",
              "dataclass",
              "Any",
              "ComplianceLevel"
            ],
            "communication_patterns": [
              "event_driven"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "constitutional_governance",
            "path": "services/contexts/constitutional_governance",
            "files": {
              "total": 31,
              "by_type": {
                ".md": 5,
                ".py": 20,
                ".pyc": 6
              }
            },
            "lines_of_code": 6914,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "Annotated",
              "ABC",
              "uuid",
              "pydantic",
              "functools",
              "BaseModel",
              "asyncio",
              "logging",
              "timedelta",
              "AmendmentProposal",
              "JSONResponse",
              "DomainEvent",
              "dataclasses",
              "fastapi",
              "Enum",
              "dataclass",
              "UnitOfWorkManager",
              "ConstitutionalGovernanceApplicationService",
              "ConstitutionalGovernanceQueryService",
              "Specification",
              "ConstitutionalGovernanceService",
              "EntityId",
              "abc",
              "datetime",
              "UUID",
              "TenantId",
              "Depends",
              "typing",
              "CONSTITUTIONAL_HASH",
              "lru_cache",
              "asyncpg",
              "APIRouter",
              "json",
              "enum",
              "Any"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "mvc",
              "service_layer"
            ]
          },
          {
            "name": "multi_agent_coordination",
            "path": "services/contexts/multi_agent_coordination",
            "files": {
              "total": 11,
              "by_type": {
                ".md": 4,
                ".py": 7
              }
            },
            "lines_of_code": 2303,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /agents/{agent_id}/tasks",
              "PUT /agents/{agent_id}/status",
              "GET /health",
              "PUT /sessions/{session_id}/complete"
            ],
            "dependencies": [
              "get_unit_of_work_manager",
              "pydantic",
              "Agent",
              "BaseModel",
              "MultiAgentCoordinationService",
              "logging",
              "DomainEvent",
              "dataclasses",
              "AgentStatus",
              "fastapi",
              "Enum",
              "dataclass",
              "UnitOfWorkManager",
              "get_tenant_context",
              "EntityId",
              "datetime",
              "ValueObject",
              "get_repository_registry",
              "typing",
              "APIRouter",
              "enum",
              "Any",
              "ValidationError"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 5,
          "total_lines": 11414,
          "total_files": 52,
          "average_lines_per_service": 2282.8,
          "average_files_per_service": 10.4,
          "constitutional_compliance_rate": 1.0
        }
      },
      "core": {
        "service_count": 31,
        "services": [
          {
            "name": "multi_agent_coordinator",
            "path": "services/core/multi_agent_coordinator",
            "files": {
              "total": 15,
              "by_type": {
                ".py": 7,
                ".md": 3,
                ".backup": 1,
                ".pyc": 4
              }
            },
            "lines_of_code": 5138,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/agents/{agent_id}",
              "POST /api/v1/agents/register",
              "GET /api/v1/tasks",
              "GET /api/v1/agents",
              "GET /metrics",
              "GET /api/v1/coordination/{session_id}",
              "POST /api/v1/coordination/{session_id}/consensus",
              "POST /api/v1/coordination",
              "GET /api/v1/coordination/{session_id}/consensus",
              "POST /api/v1/coordination/{session_id}/vote",
              "GET /health",
              "PUT /api/v1/agents/{agent_id}/status"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "defaultdict",
              "ConstitutionalSafetyValidator",
              "asyncio",
              "BaseModel",
              "EventBus",
              "logging",
              "KnowledgeItem",
              "JSONResponse",
              "EnhancedPerformanceMonitor",
              "PerformanceMonitor",
              "dataclasses",
              "OptimizedBlackboardService",
              "Enum",
              "fastapi",
              "redis",
              "dataclass",
              "aioredis",
              "get_current_user",
              "uuid4",
              "contextlib",
              "datetime",
              "BlackboardService",
              "WINAPerformanceCollector",
              "uvicorn",
              "setup_error_handlers",
              "asynccontextmanager",
              "typing",
              "collections",
              "WINACore",
              "asyncpg",
              "EnhancedSecurityMiddleware",
              "enum",
              "Any",
              "CORSMiddleware",
              "sentry_sdk",
              "time",
              "FastAPI",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "facade"
            ]
          },
          {
            "name": "audit-service",
            "path": "services/core/audit-service",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".txt": 1,
                ".md": 1
              }
            },
            "lines_of_code": 1342,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/compliance/reports",
              "GET /api/v1/audit/trail/{resource}",
              "GET /",
              "GET /api/v1/export/audit-data",
              "GET /api/v1/compliance/metrics",
              "POST /api/v1/compliance/reports/generate",
              "POST /api/v1/audit/query",
              "GET /health",
              "POST /api/v1/audit/log",
              "GET /api/v1/compliance/frameworks"
            ],
            "dependencies": [
              "pydantic",
              "uuid",
              "defaultdict",
              "BaseModel",
              "asyncio",
              "logging",
              "hashlib",
              "csv",
              "Enum",
              "fastapi",
              "HTMLResponse",
              "contextlib",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "json",
              "tempfile",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "consensus-engine",
            "path": "services/core/consensus-engine",
            "files": {
              "total": 6,
              "by_type": {
                ".py": 4,
                ".md": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 1821,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "PUT /api/v1/nodes/{node_id}/status",
              "GET /api/v1/algorithms",
              "GET /api/v1/analytics/algorithms",
              "GET /api/v1/proposals/active",
              "POST /api/v1/nodes/register",
              "GET /api/v1/audit-trail",
              "POST /api/v1/proposals/submit",
              "GET /api/v1/metrics",
              "POST /api/v1/consensus/test",
              "POST /api/v1/proposals/{proposal_id}/consensus",
              "GET /api/v1/analytics/participation",
              "POST /api/v1/constitutional/validate",
              "GET /api/v1/nodes/{node_id}",
              "GET /api/v1/nodes",
              "GET /api/v1/constitutional/rules",
              "GET /api/v1/nodes/{node_id}/reputation",
              "GET /health",
              "GET /api/v1/proposals/{proposal_id}"
            ],
            "dependencies": [
              "pydantic",
              "uuid",
              "defaultdict",
              "BaseModel",
              "asyncio",
              "logging",
              "hashlib",
              "Enum",
              "fastapi",
              "ConsensusEngine",
              "contextlib",
              "random",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "Queue",
              "json",
              "enum",
              "CORSMiddleware",
              "time",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "service_layer"
            ]
          },
          {
            "name": "auth-service",
            "path": "services/core/auth-service",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".txt": 1,
                ".md": 1
              }
            },
            "lines_of_code": 959,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/permissions",
              "GET /api/v1/audit/logs",
              "GET /api/v1/users/me",
              "GET /api/v1/users",
              "POST /api/v1/auth/refresh",
              "GET /api/v1/roles",
              "POST /api/v1/auth/login",
              "GET /health",
              "POST /api/v1/auth/check-permission",
              "POST /api/v1/auth/register",
              "POST /api/v1/auth/logout"
            ],
            "dependencies": [
              "HTTPBearer",
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "jwt",
              "CryptContext",
              "fastapi",
              "Enum",
              "contextlib",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "bcrypt",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "evolutionary-computation",
            "path": "services/core/evolutionary-computation",
            "files": {
              "total": 117,
              "by_type": {
                ".backup": 3,
                ".py": 60,
                ".md": 14,
                "": 1,
                ".txt": 1,
                ".sh": 1,
                ".pyc": 37
              }
            },
            "lines_of_code": 26891,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /monitoring/alerts",
              "POST /batch-coordinate",
              "GET /api/v1/evolutionary/optimization/{optimization_id}",
              "GET /api/v1/monitoring/dashboard",
              "GET /metrics/wina",
              "POST /api/v1/reviews/{task_id}/approve",
              "GET /leader-election/status",
              "GET /api/v1/alphaevolve/strategies",
              "POST /api/v1/monitoring/configure",
              "GET /api/v1/reporting/constitutional",
              "POST /api/v1/alphaevolve/optimize",
              "GET /api/v1/status",
              "POST /api/v1/evolutionary/optimize",
              "GET /api/v1/advanced-wina/analytics/performance",
              "GET /api/v1/evolution/population/status",
              "POST /requests",
              "POST /monitoring/start",
              "POST /optimization/run",
              "GET /api/v1/compilation/{compilation_id}",
              "POST /coordinate",
              "POST /api/v1/evolution/submit",
              "POST /api/v1/evolutionary/analyze/{optimization_id}",
              "GET /api/v1/reporting/performance",
              "GET /wina-optimization",
              "GET /api/v1/evolution/{evolution_id}/status",
              "POST /api/v1/alphaevolve/governance",
              "POST /api/v1/advanced-wina/optimization/run",
              "POST /api/v1/evolution/constraint-satisfaction",
              "GET /constitutional-compliance",
              "GET /alerts",
              "GET /analytics/performance-metrics",
              "GET /oversight-summary",
              "GET /api/v1/wina/performance/metrics",
              "GET /api/v1/reviews/pending",
              "POST /generate-report",
              "GET /",
              "GET /api/v1/advanced-wina/monitoring/real-time",
              "POST /api/v1/reporting/custom",
              "GET /metrics/system",
              "POST /fitness/quick-evaluate",
              "GET /health",
              "POST /api/v1/advanced-wina/alerts/configure",
              "GET /api/v1/oversight/recommendations",
              "POST /api/v1/evolution/leader/coordinate",
              "POST /optimize",
              "GET /enterprise/configuration",
              "GET /api/v1/wina/performance/optimization",
              "GET /api/v1/evolution/{evolution_id}",
              "GET /api/v1/reporting/oversight",
              "POST /governance-evaluation",
              "GET /api/v1/advanced-wina/enterprise/configuration",
              "GET /strategies",
              "POST /api/v1/oversight/coordinate",
              "POST /api/v1/evolution/genetic-algorithm",
              "GET /api/v1/metrics",
              "GET /requests/{evolution_id}",
              "GET /optimization/algorithms",
              "GET /api/v1/evolutionary/objectives",
              "GET /api/v1/evolutionary/history",
              "POST /api/v1/evolution/multi-objective",
              "GET /contexts",
              "POST /api/v1/oversight/feedback",
              "POST /api/v1/reviews/{task_id}/decision",
              "POST /pgc-integration/execute",
              "GET /metrics",
              "POST /api/v1/evolution/{evolution_id}/rollback",
              "GET /requests",
              "GET /analytics/overview",
              "POST /select-strategy",
              "POST /api/v1/alphaevolve/constitutional",
              "GET /api/v1/wina/performance/dashboard",
              "POST /fitness/evaluate",
              "GET /api/v1/monitoring/system",
              "GET /leader-election/health",
              "GET /api/v1/oversight/status/{oversight_id}",
              "POST /api/v1/reviews/{task_id}/reject",
              "POST /api/v1/wina/performance/tune",
              "POST /requests/{evolution_id}/submit",
              "GET /api/v1/agents/{agent_id}/history",
              "GET /pgc-integration/status",
              "GET /api/v1/monitoring/alerts",
              "GET /dashboard"
            ],
            "dependencies": [
              "error_handling",
              "get_config",
              "RequestValidationError",
              "BaseHTTPMiddleware",
              "asyncio",
              "re",
              "EvolutionStatus",
              "jwt",
              "HITLService",
              "declarative_mixin",
              "JSONResponse",
              "AsyncSession",
              "redis",
              "FitnessMetrics",
              "BackgroundTasks",
              "abc",
              "IsolationForest",
              "UUID",
              "numpy",
              "EvolutionRequest",
              "statistics",
              "asdict",
              "human_approval_workflow",
              "EvolutionEngine",
              "asyncpg",
              "RiskAssessment",
              "enum",
              "TrustedHostMiddleware",
              "time",
              "httpx",
              "localhost:8000",
              "WINAECOversightCoordinator",
              "uuid",
              "\")\n            assert \":8004",
              "services",
              "functools",
              "operator",
              "localhost:8004",
              "WINAMetrics",
              "BaseSettings",
              "create_leader_election_service",
              "Request",
              "ConstitutionalValidator",
              "Path",
              "EvolutionService",
              "random",
              "pgc_service_client",
              "validator",
              "Counter",
              "datetime",
              "aiohttp",
              "localhost:3000",
              "FeedbackSignal",
              "prometheus_client",
              "uvicorn",
              "EnhancedSecurityMiddleware",
              "Any",
              "JSON",
              "List",
              "sys",
              "v1_router",
              "pydantic",
              "localhost:8015",
              "leader_election",
              "app",
              "psutil",
              "BaseACGSModel",
              "sqlalchemy",
              "get_settings",
              "SimpleTenantMixin",
              "load_wina_config_from_env",
              "localhost:8001",
              "Enum",
              "gs_service_client",
              "dataclass",
              "router",
              "failed",
              "Optional",
              "contextlib",
              "GatingStrategy",
              "ConstitutionalWINASupport",
              "evolution_engine",
              "DataIntegrationPipeline",
              "get_wina_coordinator",
              "asynccontextmanager",
              "typing",
              "WINACore",
              "lru_cache",
              "APIRouter",
              "SuccessResponse",
              "Base",
              "evolutionary_algorithms",
              "CORSMiddleware",
              "FastAPI",
              "localhost:8003",
              "OversightLevel",
              "ABC",
              "GZipMiddleware",
              "BaseModel",
              "logging",
              "declared_attr",
              "hashlib",
              "FitnessService",
              "dataclasses",
              "fastapi",
              "ForeignKey",
              "Column",
              "localhost:8006",
              "middleware_integration",
              "Individual",
              "event",
              "config",
              "structlog",
              "localhost:8080",
              "pytest",
              "localhost:8005",
              "Callable",
              "ac_service_client",
              "localhost:8002",
              "TestClient",
              "json",
              "declarative_base",
              "pathlib",
              "shared",
              "DecisionStatus",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade",
              "service_layer"
            ]
          },
          {
            "name": "seal-adaptation",
            "path": "services/core/seal-adaptation",
            "files": {
              "total": 6,
              "by_type": {
                ".md": 4,
                ".py": 2
              }
            },
            "lines_of_code": 614,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "Enum",
              "json",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "redis",
              "time",
              "hashlib"
            ],
            "communication_patterns": [
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "singleton"
            ]
          },
          {
            "name": "policy-governance",
            "path": "services/core/policy-governance",
            "files": {
              "total": 129,
              "by_type": {
                ".py": 78,
                ".md": 25,
                ".backup": 3,
                ".go": 4,
                ".sum": 1,
                ".mod": 1,
                "": 2,
                ".yaml": 3,
                ".staging": 1,
                ".example": 1,
                ".prod": 1,
                ".txt": 1,
                ".pyc": 5,
                ".proto": 1,
                ".sh": 2
              }
            },
            "lines_of_code": 33521,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /evaluate-single",
              "GET /status",
              "GET /cache-strategies",
              "POST /intercept-action",
              "POST /api/v1/govern",
              "GET /metrics",
              "POST /optimize",
              "POST /api/v1/policies/validate",
              "POST /realtime-compliance",
              "POST /api/v1/validate/batch",
              "GET /api/v1/performance/metrics",
              "GET /api/v1/policies",
              "POST /quantum/observe",
              "POST /cache/clear",
              "GET /api/v1/governance/workflows",
              "GET /api/v1/governance/validate",
              "GET /cache/stats",
              "GET /quantum/state/{policy_id}",
              "POST /benchmark",
              "POST /evaluate-batch",
              "GET /report",
              "GET /optimization-levels",
              "POST /enhanced-constitutional-analysis",
              "POST /quantum/register",
              "GET /api/v1/performance/health",
              "GET /api/v1/pgc/constitutional-metrics",
              "POST /constitutional-compliance",
              "GET /policy-creation/{workflow_id}/status",
              "GET /api/v1/status",
              "POST /api/v1/policies/enforce",
              "POST /pgc-enforcement-integration",
              "POST /deploy",
              "POST /adaptive-optimization",
              "GET /api/v1/pgc/cache-stats",
              "GET /api/v1/pgc/enhanced-status",
              "POST /api/v1/validate",
              "POST /audit-transparency",
              "GET /workflows/{workflow_id}",
              "GET /compliance-metrics",
              "POST /policy-enforcement",
              "POST /quantum/uncertainty",
              "GET /",
              "POST /quantum/enforce",
              "POST /rollback",
              "POST /wina-oversight",
              "POST /policy-creation",
              "GET /api/v1/info",
              "POST /policy-creation/{workflow_id}/advance-stage",
              "GET /api/v1/compliance/check",
              "GET /quantum/health",
              "GET /api/v1/pgc/performance-metrics",
              "GET /wina-performance",
              "GET /health"
            ],
            "dependencies": [
              "defaultdict",
              "RequestValidationError",
              "QPEClient",
              "datalog_engine",
              "Prometheus",
              "BaseHTTPMiddleware",
              "asyncio",
              "enhanced_constitutional_analyzer",
              "opentelemetry",
              "get_ultra_low_latency_optimizer",
              "re",
              "integrity_service_client",
              "RegoRuleResult",
              "limiter",
              "JSONResponse",
              "declarative_mixin",
              "track_performance_metrics",
              "get_current_user_id",
              "AsyncGenerator",
              "enhancement_framework",
              "AsyncSession",
              "redis",
              "ConstitutionalWINAIntegration",
              "tarfile",
              "CONTENT_TYPE_LATEST",
              "ManifestManager",
              "conflicts",
              "torch",
              "SentenceTransformer",
              "otel-collector:4317",
              "UUID",
              "uvloop",
              "statistics",
              "numpy",
              "networkx",
              "asdict",
              "MetaData",
              "CONSTITUTIONAL_HASH",
              "asyncpg",
              "grpc",
              "tempfile",
              "enum",
              "TrustedHostMiddleware",
              "Resource",
              "time",
              "setup_prometheus_middleware",
              "metrics",
              "httpx",
              "uuid",
              "tensorflow",
              "sentence_transformers",
              "functools",
              "localhost:8181",
              "operator",
              "HTTPException",
              "HTTPXClientInstrumentor",
              "WINAMetrics",
              "schemas",
              "MeterProvider",
              "BaseSettings",
              "error",
              "Request",
              "aio",
              "Path",
              "uuid4",
              "UltraLowLatencyOptimizer",
              "random",
              "validator",
              "Counter",
              "datetime",
              "localhost:3000",
              "slowapi",
              "prometheus_client",
              "uvicorn",
              "get_metrics",
              "WINAPolicyCompiler",
              "OrderedDict",
              "RAGIntegrationService",
              "Any",
              "JSON",
              "shutil",
              "MultiTierCache",
              "settings",
              "List",
              "statements",
              "sys",
              "wraps",
              "localhost:4317",
              "fv_service:8083",
              "pydantic",
              "EnhancedAuthMiddleware",
              "app",
              "trace",
              "ConsensusStrategy",
              "and",
              "deque",
              "psutil",
              "threading",
              "BaseACGSModel",
              "sqlalchemy",
              "ConstitutionalValidationMiddleware",
              "get_settings",
              "SimpleTenantMixin",
              "policy_manager",
              "in",
              "OTLPSpanExporter",
              "TracerProvider",
              "TraceIdRatioBased",
              "get_opa_client",
              "load_wina_config_from_env",
              "localhost:8001",
              "Enum",
              "dataclass",
              "RedisCacheManager",
              "router",
              "Optional",
              "contextlib",
              "optimized_governance_engine",
              "dependencies",
              "asynccontextmanager",
              "typing",
              "collections",
              "lru_cache",
              "APIRouter",
              "StaticPool",
              "PolicyFormatRouter",
              "CompilationMetrics",
              "Base",
              "platform",
              "CORSMiddleware",
              "AsyncClient",
              "aiofiles",
              "FastAPI",
              "localhost:8003",
              "IncrementalCompiler",
              "hmac",
              "RAGRuleGenerator",
              "OPAClient",
              "BaseModel",
              "logging",
              "declared_attr",
              "path",
              "fnmatch",
              "hashlib",
              "BatchSpanProcessor",
              "ResourceAttributes",
              "IntegrityPolicyRule",
              "dataclasses",
              "Field",
              "get_constitutional_principles_database",
              "yaml",
              "fastapi",
              "User",
              "subprocess",
              "ForeignKey",
              "ThreadPoolExecutor",
              "Column",
              "TenantServiceClient",
              "SBERT",
              "ACGSServiceEnhancer",
              "PlainTextResponse",
              "event",
              "ConstitutionalHashValidator",
              "FastAPIInstrumentor",
              "AsyncMock",
              "structlog",
              "Depends",
              "localhost:8080",
              "pytest",
              "Limiter",
              "Callable",
              "get_remote_address",
              "get_current_user_optional",
              "PolicyEvaluationRequest",
              "TestClient",
              "localhost:8002",
              "PolicyValidationRequest",
              "json",
              "get_service_config",
              "multi_model_manager",
              "auth",
              "declarative_base",
              "pathlib",
              "shared",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "grpc",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade",
              "singleton",
              "decorator",
              "service_layer"
            ]
          },
          {
            "name": "security-validation",
            "path": "services/core/security-validation",
            "files": {
              "total": 4,
              "by_type": {
                ".txt": 1,
                ".py": 2,
                ".md": 1
              }
            },
            "lines_of_code": 1466,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/compliance/assess",
              "GET /api/v1/security/metrics",
              "POST /api/v1/security/analyze",
              "GET /api/v1/security/status",
              "POST /api/v1/security/scan/vulnerability",
              "GET /health"
            ],
            "dependencies": [
              "HTTPBearer",
              "ipaddress",
              "hmac",
              "uuid",
              "pydantic",
              "StandardScaler",
              "asyncio",
              "BaseModel",
              "logging",
              "re",
              "jwt",
              "hashlib",
              "dataclasses",
              "AsyncSession",
              "Enum",
              "fastapi",
              "redis",
              "dataclass",
              "Dict",
              "datetime",
              "aiohttp",
              "IsolationForest",
              "UUID",
              "uvicorn",
              "numpy",
              "typing",
              "json",
              "enum",
              "CORSMiddleware",
              "time",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "a2a-policy-integration",
            "path": "services/core/a2a-policy-integration",
            "files": {
              "total": 4,
              "by_type": {
                ".txt": 1,
                ".md": 1,
                ".py": 2
              }
            },
            "lines_of_code": 1209,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/messages/send",
              "GET /api/v1/agents/discover",
              "POST /api/v1/agents/register",
              "GET /api/v1/metrics",
              "GET /health",
              "POST /api/v1/agents/heartbeat"
            ],
            "dependencies": [
              "hmac",
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "jwt",
              "hashlib",
              "dataclasses",
              "fastapi",
              "Enum",
              "redis",
              "dataclass",
              "base64",
              "Dict",
              "datetime",
              "aiohttp",
              "UUID",
              "uvicorn",
              "typing",
              "json",
              "enum",
              "CORSMiddleware",
              "time",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "grpc",
              "websocket",
              "rest_api",
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "monitoring-service",
            "path": "services/core/monitoring-service",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 1045,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /",
              "GET /api/v1/metrics/{service_name}",
              "GET /api/v1/dependencies",
              "GET /api/v1/services/{service_name}/health",
              "GET /api/v1/alerts",
              "GET /api/v1/overview",
              "GET /health",
              "GET /api/v1/performance/{service_name}",
              "GET /api/v1/services/health"
            ],
            "dependencies": [
              "localhost:8009",
              "localhost:8023",
              "localhost:8011",
              "localhost:8017",
              "pydantic",
              "defaultdict",
              "uuid",
              "asyncio",
              "localhost:8015",
              "BaseModel",
              "logging",
              "localhost:8001",
              "fastapi",
              "Enum",
              "HTMLResponse",
              "contextlib",
              "Dict",
              "datetime",
              "localhost:3000",
              "localhost:8020",
              "localhost:8021",
              "uvicorn",
              "localhost:8012",
              "statistics",
              "asynccontextmanager",
              "typing",
              "collections",
              "localhost:8080",
              "json",
              "localhost:8010",
              "enum",
              "localhost:8016",
              "localhost:8008",
              "CORSMiddleware",
              "time",
              "localhost:8013",
              "httpx",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "code-analysis",
            "path": "services/core/code-analysis",
            "files": {
              "total": 119,
              "by_type": {
                ".py": 41,
                ".json": 6,
                ".md": 19,
                ".yml": 3,
                ".backup": 4,
                "": 1,
                ".staging": 1,
                ".txt": 2,
                ".pyc": 36,
                ".conf": 3,
                ".sql": 3
              }
            },
            "lines_of_code": 12049,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/search",
              "GET /",
              "GET /metrics",
              "POST /api/v1/analyze",
              "GET /health"
            ],
            "dependencies": [
              "localhost:8007",
              "defaultdict",
              "BaseHTTPMiddleware",
              "asyncio",
              "re",
              "pydantic_settings",
              "JSONResponse",
              "AsyncGenerator",
              "AsyncSession",
              "pytest_asyncio",
              "ConstitutionalComplianceMiddleware",
              "redis",
              "ACGSIntegrationTester",
              "UUID",
              "statistics",
              "numpy",
              "CONSTITUTIONAL_HASH",
              "asyncpg",
              "sessionmaker",
              "tempfile",
              "enum",
              "time",
              "httpx",
              "prometheus_fastapi_instrumentator",
              "HTTPBearer",
              "uuid",
              "functools",
              "HTTPException",
              "BaseSettings",
              "Request",
              "ConstitutionalValidator",
              "Path",
              "ast",
              "AnyHttpUrl",
              "Counter",
              "datetime",
              "aiohttp",
              "localhost:3000",
              "DatabaseManager",
              "prometheus_client",
              "uvicorn",
              "main",
              "test_monitoring_setup",
              "localhost:9090",
              "Any",
              "AuthenticationMiddleware",
              "shutil",
              "get_logger",
              "Instrumentator",
              "traceback",
              "sys",
              "FileSystemEvent",
              "pydantic",
              "fakeredis",
              "app",
              "psutil",
              "PerformanceBenchmarker",
              "localhost:8107",
              "issues",
              "get_settings",
              "PerformanceMiddleware",
              "localhost:8001",
              "gc",
              "Enum",
              "ServiceRegistryClient",
              "MonitoringValidator",
              "get",
              "Settings",
              "contextlib",
              "localhost:3100",
              "IndexerService",
              "asynccontextmanager",
              "typing",
              "collections",
              "lru_cache",
              "APIRouter",
              "FileWatcherService",
              "Base",
              "localhost:9190",
              "CORSMiddleware",
              "AsyncClient",
              "FastAPI",
              "setup_logging",
              "pythonjsonlogger",
              "GZipMiddleware",
              "BaseModel",
              "CacheService",
              "Pool",
              "logging",
              "Observer",
              "hashlib",
              "requests",
              "yaml",
              "fastapi",
              "subprocess",
              "ThreadPoolExecutor",
              "test_priority3_integration",
              "jsonlogger",
              "test_performance_benchmarks",
              "api_router",
              "localhost:8012",
              "structlog",
              "localhost:8080",
              "pytest",
              "Callable",
              "TestClient",
              "json",
              "localhost:8016",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade"
            ]
          },
          {
            "name": "worker-agents",
            "path": "services/core/worker-agents",
            "files": {
              "total": 5,
              "by_type": {
                ".txt": 1,
                ".py": 3,
                ".md": 1
              }
            },
            "lines_of_code": 1819,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/workers/{worker_id}/command",
              "GET /api/v1/workers/available",
              "GET /api/v1/metrics/summary",
              "GET /api/v1/workers/{worker_id}/metrics",
              "GET /api/v1/tasks/results",
              "GET /api/v1/workers/{worker_id}/health",
              "GET /api/v1/task-types",
              "POST /api/v1/workers/register",
              "GET /api/v1/workers",
              "GET /api/v1/skills",
              "GET /api/v1/tasks/{task_id}/status",
              "GET /api/v1/workers/{worker_id}",
              "GET /health",
              "POST /api/v1/tasks/submit"
            ],
            "dependencies": [
              "uuid",
              "defaultdict",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "fastapi",
              "Enum",
              "contextlib",
              "random",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "Queue",
              "json",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "service_layer"
            ]
          },
          {
            "name": "context",
            "path": "services/core/context",
            "files": {
              "total": 20,
              "by_type": {
                ".py": 13,
                ".md": 6,
                ".backup": 1
              }
            },
            "lines_of_code": 4743,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/context/retrieve/{context_id}",
              "GET /",
              "POST /api/v1/context/search",
              "GET /metrics",
              "POST /api/v1/context/store",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "get_cache_manager",
              "sentence_transformers",
              "BaseModel",
              "asyncio",
              "logging",
              "re",
              "JSONResponse",
              "hashlib",
              "AuditLogger",
              "load_wina_config_from_env",
              "fastapi",
              "Enum",
              "MultiTierStorageManager",
              "models",
              "torch",
              "contextlib",
              "WINAModelIntegrator",
              "QdrantClient",
              "SentenceTransformer",
              "datetime",
              "UUID",
              "uvicorn",
              "numpy",
              "qdrant_client",
              "EmbeddingService",
              "typing",
              "WINACore",
              "ContextEngine",
              "asyncpg",
              "QdrantVectorStore",
              "enum",
              "Any",
              "CORSMiddleware",
              "time",
              "FastAPI",
              "os",
              "BaseContext"
            ],
            "communication_patterns": [
              "event_driven",
              "rest_api",
              "grpc",
              "websocket",
              "message_queue",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "multi-agent-coordination",
            "path": "services/core/multi-agent-coordination",
            "files": {
              "total": 5,
              "by_type": {
                ".txt": 1,
                ".py": 3,
                ".md": 1
              }
            },
            "lines_of_code": 1250,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/coordinate",
              "GET /api/v1/tasks/{task_id}",
              "POST /api/v1/messages/send",
              "GET /api/v1/patterns",
              "POST /api/v1/agents/register",
              "GET /api/v1/agents",
              "GET /api/v1/metrics",
              "POST /api/v1/teams/form",
              "GET /api/v1/workload",
              "POST /api/v1/workload/rebalance",
              "GET /health"
            ],
            "dependencies": [
              "pydantic",
              "uuid",
              "defaultdict",
              "BaseModel",
              "asyncio",
              "logging",
              "Enum",
              "fastapi",
              "contextlib",
              "random",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "Queue",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "service_layer"
            ]
          },
          {
            "name": "gdpr-compliance",
            "path": "services/core/gdpr-compliance",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 1458,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/privacy-assessments",
              "POST /api/v1/consent/record",
              "POST /api/v1/erasure/{subject_id}",
              "GET /api/v1/privacy-notices",
              "GET /",
              "POST /api/v1/data-subjects/register",
              "POST /api/v1/breaches/report",
              "POST /api/v1/consent/{consent_id}/withdraw",
              "POST /api/v1/subject-requests",
              "GET /api/v1/breaches",
              "GET /api/v1/subject-requests/{request_id}",
              "GET /api/v1/privacy-assessments",
              "GET /api/v1/compliance/report",
              "GET /health",
              "GET /api/v1/data-subjects/{subject_id}/consents"
            ],
            "dependencies": [
              "uuid",
              "defaultdict",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "hashlib",
              "fastapi",
              "Enum",
              "HTMLResponse",
              "contextlib",
              "Dict",
              "zipfile",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "json",
              "tempfile",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "formal-verification",
            "path": "services/core/formal-verification",
            "files": {
              "total": 98,
              "by_type": {
                ".py": 50,
                ".backup": 2,
                ".md": 20,
                ".pyc": 18,
                ".example": 1,
                ".prod": 1,
                "": 4,
                ".staging": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 20199,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /domains/{domain_id}",
              "PUT /domains/{domain_id}",
              "GET /results/{test_run_id}",
              "POST /api/v1/crypto/validate-signature",
              "GET /requests",
              "GET /parallel/statistics",
              "GET /domains",
              "GET /api/v1/performance/metrics",
              "GET /api/v1/integration/ac-service",
              "POST /smt/solve",
              "GET /requests/{request_id}/status",
              "POST /api/v1/verify/constitutional",
              "POST /api/v1/blockchain/add-audit-entry",
              "POST /generate-formal-proof",
              "GET /verification-metrics",
              "GET /scenarios/{scenario_id}",
              "POST /constitutional-compliance",
              "POST /api/v1/z3/solve",
              "GET /bias-metrics",
              "GET /api/v1/blockchain/audit-trail",
              "POST /execute",
              "POST /constitutional",
              "POST /parallel/scale",
              "POST /api/v1/verify/logical",
              "GET /scenarios",
              "GET /parallel/stats",
              "POST /requests",
              "GET /requests/{request_id}/result",
              "GET /",
              "GET /api/v1/validation/error-reports",
              "GET /health/constitutional",
              "GET /api/v1/verify/info",
              "POST /api/v1/verify/generate-formal-proof",
              "GET /health",
              "POST /policy/validate"
            ],
            "dependencies": [
              "acge-model-service.acgs-shared.svc.cluster.local:8080",
              "get_config",
              "defaultdict",
              "asyncio",
              "re",
              "advanced_proof_engine",
              "integrity_service_client",
              "JSONResponse",
              "AsyncSession",
              "CrossDomainTestResult",
              "redis",
              "DomainContext",
              "CrossDomainTestScenario",
              "tiered_validation_pipeline",
              "Bool",
              "TieredValidationPipeline",
              "UUID",
              "numpy",
              "asdict",
              "pandas",
              "CONSTITUTIONAL_HASH",
              "verify_rules_against_obligations",
              "tempfile",
              "enum",
              "get_service_token",
              "time",
              "httpx",
              "pickle",
              "localhost:8000",
              "uuid",
              "HTTPException",
              "z3",
              "schemas",
              "SMTSolverIntegration",
              "Request",
              "PolicySMTCompiler",
              "Path",
              "ConstitutionalVerificationEngine",
              "Counter",
              "datetime",
              "localhost:3000",
              "integrity_service:8000",
              "prometheus_client",
              "uvicorn",
              "SMTSolverRequest",
              "Any",
              "JSON",
              "settings",
              "sys",
              "v1_router",
              "secrets",
              "pydantic",
              "conflict_detector",
              "threading",
              "psutil",
              "cross_domain_testing_engine",
              "sqlalchemy",
              "get_async_db",
              "in",
              "parallel_pipeline",
              "Enum",
              "dataclass",
              "router",
              "failed",
              "contextlib",
              "typing",
              "collections",
              "APIRouter",
              "verify_policy_rules",
              "bias_detector",
              "CORSMiddleware",
              "FastAPI",
              "localhost:8003",
              "select",
              "BaseModel",
              "logging",
              "PolicyRule",
              "hashlib",
              "dataclasses",
              "FormalVerificationService",
              "yaml",
              "fastapi",
              "User",
              "ProofObligation",
              "SMTSolverInput",
              "Int",
              "generate_proof_obligations_from_principles",
              "AsyncMock",
              "ACPrinciple",
              "structlog",
              "localhost:8080",
              "pytest",
              "ac_service_client",
              "localhost:8002",
              "json",
              "Z3ConstitutionalSolver",
              "declarative_base",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "service_layer"
            ]
          },
          {
            "name": "blackboard-coordination",
            "path": "services/core/blackboard-coordination",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 1,
                ".py": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 784,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/notifications/{recipient_id}",
              "DELETE /api/v1/subscriptions/{subscription_id}",
              "GET /api/v1/subscriptions/{subscriber_id}",
              "POST /api/v1/subscriptions",
              "PUT /api/v1/entries/{entry_id}",
              "DELETE /api/v1/entries/{entry_id}",
              "GET /api/v1/workspaces",
              "POST /api/v1/workspaces",
              "GET /api/v1/knowledge-graph/{workspace_id}",
              "POST /api/v1/entries/search",
              "PUT /api/v1/workspaces/{workspace_id}",
              "POST /api/v1/entries",
              "GET /api/v1/analytics/workspace/{workspace_id}",
              "GET /api/v1/workspaces/{workspace_id}",
              "GET /api/v1/entries/{entry_id}",
              "PUT /api/v1/notifications/{notification_id}/read",
              "GET /api/v1/workspaces/{workspace_id}/entries",
              "GET /api/v1/workspaces/{workspace_id}/stream",
              "GET /health"
            ],
            "dependencies": [
              "localhost:8009",
              "pydantic",
              "uuid",
              "defaultdict",
              "asyncio",
              "BaseModel",
              "logging",
              "localhost:8001",
              "fastapi",
              "StreamingResponse",
              "contextlib",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "json",
              "localhost:8010",
              "localhost:8008",
              "CORSMiddleware",
              "time",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "human-in-the-loop",
            "path": "services/core/human-in-the-loop",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 972,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/workflows/trigger",
              "GET /api/v1/workflows",
              "GET /",
              "POST /api/v1/users/register",
              "GET /api/v1/users",
              "POST /api/v1/interventions/{request_id}/respond",
              "GET /api/v1/interventions/pending",
              "GET /api/v1/dashboard",
              "GET /api/v1/metrics",
              "POST /api/v1/interventions/request",
              "GET /api/v1/interventions/{request_id}",
              "GET /health",
              "GET /api/v1/users/{user_id}"
            ],
            "dependencies": [
              "pydantic",
              "defaultdict",
              "uuid",
              "asyncio",
              "BaseModel",
              "logging",
              "fastapi",
              "Enum",
              "HTMLResponse",
              "contextlib",
              "Dict",
              "datetime",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "collections",
              "json",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "groqcloud-policy-integration",
            "path": "services/core/groqcloud-policy-integration",
            "files": {
              "total": 6,
              "by_type": {
                ".txt": 1,
                ".md": 2,
                ".py": 3
              }
            },
            "lines_of_code": 944,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/policies/{policy_id}",
              "POST /api/v1/policies",
              "GET /api/v1/metrics",
              "GET /api/v1/tiers",
              "POST /api/v1/tier-selection",
              "POST /api/v1/evaluate",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "timedelta",
              "dataclasses",
              "Enum",
              "fastapi",
              "dataclass",
              "Dict",
              "datetime",
              "aiohttp",
              "UUID",
              "uvicorn",
              "typing",
              "json",
              "enum",
              "CORSMiddleware",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "consensus_engine",
            "path": "services/core/consensus_engine",
            "files": {
              "total": 5,
              "by_type": {
                ".md": 1,
                ".py": 2,
                ".pyc": 2
              }
            },
            "lines_of_code": 1042,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "uuid4",
              "uuid",
              "pydantic",
              "Enum",
              "json",
              "datetime",
              "enum",
              "BaseModel",
              "Any",
              "logging",
              "BlackboardService",
              "KnowledgeItem",
              "operator"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "governance-engine",
            "path": "services/core/governance-engine",
            "files": {
              "total": 27,
              "by_type": {
                ".md": 10,
                ".txt": 1,
                ".backup": 3,
                ".py": 9,
                "": 1,
                ".pyc": 3
              }
            },
            "lines_of_code": 1303,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/synthesis/synthesize",
              "GET /",
              "GET /api/v1/synthesis/policies",
              "POST /api/v1/compliance/check",
              "GET /api/v1/enforcement/policies/{policy_id}",
              "POST /api/v1/enforcement/enforce",
              "GET /api/v1/compliance/status",
              "GET /health",
              "GET /api/v1/workflows",
              "POST /api/v1/workflows/{workflow_id}/execute"
            ],
            "dependencies": [
              "error_handling",
              "get_service_client",
              "pydantic",
              "asyncio",
              "BaseModel",
              "localhost:8181",
              "logging",
              "app",
              "JSONResponse",
              "localhost:8001",
              "DecisionTreeRegressor",
              "fastapi",
              "shutdown_registry",
              "redis",
              "DynamicPolicyAdapter",
              "TenantServiceClient",
              "Path",
              "middleware_integration",
              "contextlib",
              "datetime",
              "uvicorn",
              "setup_error_handlers",
              "numpy",
              "Depends",
              "asynccontextmanager",
              "typing",
              "pytest",
              "localhost:8003",
              "TestClient",
              "localhost:8002",
              "json",
              "localhost:8016",
              "Any",
              "CORSMiddleware",
              "TrustedHostMiddleware",
              "time",
              "pathlib",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "constitutional-ai",
            "path": "services/core/constitutional-ai",
            "files": {
              "total": 235,
              "by_type": {
                ".txt": 3,
                ".md": 26,
                ".py": 108,
                ".backup": 5,
                ".example": 1,
                "": 4,
                ".prod": 1,
                ".production": 1,
                ".yaml": 1,
                ".pyc": 84,
                ".yml": 1
              }
            },
            "lines_of_code": 49864,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /amendments/{amendment_id}/democratic-process",
              "GET /transparency-dashboard",
              "POST /",
              "PUT /{principle_id}",
              "POST /api/v1/constitutional/validate",
              "GET /performance-report",
              "POST /propose-updates",
              "GET /{conflict_id}/qec-insights",
              "POST /proposals/{proposal_id}/finalize",
              "GET /conversations",
              "GET /api/v1/constitutional/validate",
              "GET /cache/stats",
              "POST /conversations",
              "GET /democratic-governance/metrics",
              "GET /sessions",
              "GET /algorithms",
              "POST /{conflict_id}/human-intervention",
              "GET /amendments/{amendment_id}",
              "POST /synthesize-principle",
              "GET /update-history",
              "POST /assess",
              "GET /{principle_id}",
              "GET /history",
              "POST /sessions/{session_id}/finalize",
              "GET /health/constitutional",
              "POST /recalculate",
              "POST /feedback",
              "POST /amendments/{amendment_id}/automated-transition",
              "POST /amendments/{amendment_id}/transition",
              "GET /status",
              "GET /sessions/{session_id}/status",
              "DELETE /cache/flush",
              "POST /{principle_id}/verify-signature",
              "POST /amendments/{amendment_id}/democratic-voting",
              "POST /{conflict_id}/resolve-automatically",
              "GET /status/{amendment_id}",
              "GET /category/{category}",
              "POST /amendments/{amendment_id}/process-finalization",
              "POST /validate",
              "POST /proposals/{proposal_id}/advance",
              "POST /proposals",
              "GET /feedback/{amendment_id}",
              "GET /capabilities",
              "GET /{workflow_id}/status",
              "POST /domains/{domain}/evaluate",
              "GET /current",
              "POST /validate-constitutional",
              "GET /data",
              "GET /scalability-metrics",
              "PUT /amendments/{amendment_id}",
              "GET /amendments/{amendment_id}/processing-status",
              "GET /alerts",
              "GET /",
              "POST /amendments/process-parallel",
              "POST /amendments/{amendment_id}/consultation",
              "GET /active/context/{context}",
              "GET /proposals/{proposal_id}",
              "GET /feedback/{proposal_id}",
              "GET /priority-range",
              "POST /detect-conflicts",
              "POST /start",
              "GET /meta-rules",
              "GET /health",
              "GET /config",
              "DELETE /{conflict_id}",
              "POST /proposals/{proposal_id}/approvals",
              "POST /evaluate",
              "POST /search/keywords",
              "DELETE /{principle_id}",
              "GET /amendments",
              "POST /initiate",
              "POST /trigger-oversight",
              "PUT /{workflow_id}/update",
              "PUT /{conflict_id}",
              "POST /start-monitoring",
              "DELETE /sessions/{session_id}",
              "POST /analyze-principles",
              "GET /meta-rules/{meta_rule_id}",
              "GET /conversations/{conversation_id}",
              "POST /{conflict_id}/generate-patch",
              "POST /stop-monitoring",
              "POST /submit-for-approval/{principle_id}",
              "GET /amendments/{amendment_id}/votes",
              "PUT /config",
              "GET /trend",
              "GET /notifications",
              "DELETE /cleanup",
              "GET /pending-updates",
              "GET /conflict-resolutions",
              "GET /constitutional-council/{workflow_id}/state",
              "GET /{conflict_id}/audit-trace",
              "GET /scope/{scope_context}",
              "GET /metrics",
              "POST /coordinate-oversight",
              "GET /domains",
              "POST /stop",
              "GET /api/v1/constitutional/info",
              "GET /conflict-resolutions/{conflict_id}",
              "POST /sessions/{session_id}/votes",
              "POST /api/v1/constitutional/acge-validate",
              "GET /proposals/{proposal_id}/audit-trail",
              "GET /{conflict_id}",
              "PUT /meta-rules/{meta_rule_id}",
              "POST /assess-cross-service",
              "GET /integration-metrics",
              "GET /proposals",
              "GET /sessions/{session_id}/results",
              "POST /bias-evaluation",
              "PUT /conflict-resolutions/{conflict_id}",
              "GET /monitoring/legitimacy",
              "POST /sessions",
              "GET /workflow-templates",
              "POST /initialize"
            ],
            "dependencies": [
              "acge-model-service.acgs-shared.svc.cluster.local:8080",
              "ConflictResolutionOrchestrator",
              "shap",
              "get_config",
              "defaultdict",
              "RequestValidationError",
              "asyncio",
              "re",
              "ConflictAnalysis",
              "pydantic_settings",
              "JSONResponse",
              "cachetools",
              "DemocraticGovernanceOrchestrator",
              "get_current_user_id",
              "op",
              "AsyncSession",
              "CollectiveConstitutionalAI",
              "GovernanceMonitor",
              "redis",
              "ConflictDetectionResult",
              "ConstitutionalComplianceService",
              "Throttler",
              "DomainContext",
              "for",
              "get_workflow_manager",
              "func",
              "get_cache",
              "ConflictAuditSystem",
              "UUID",
              "LLMAsJudgeFramework",
              "numpy",
              "refactored",
              "openai",
              "asdict",
              "ComplianceCalculator",
              "CONSTITUTIONAL_HASH",
              "and_",
              "FrameworkIntegration",
              "sessionmaker",
              "get_redis_client",
              "enum",
              "TrustedHostMiddleware",
              "time",
              "AsyncOpenAI",
              "postgresql",
              "httpx",
              "SQLAlchemyError",
              "localhost:8000",
              "ConstitutionalCouncilConfig",
              "uuid",
              "ACAmendmentCreate",
              "functools",
              "alembic",
              "setup_api_endpoints",
              "TTLCache",
              "localhost:8004",
              "WebSocket",
              "validate_policy_input",
              "schemas",
              "BaseSettings",
              "ACGSRedisClient",
              "SecurityMiddleware",
              "ed25519",
              "Request",
              "ConstitutionalValidator",
              "ConstitutionalValidation",
              "Path",
              "ast",
              "eli5",
              "uuid4",
              "random",
              "validator",
              "Counter",
              "ConstitutionalValidationRequest",
              "END",
              "datetime",
              "localhost:3000",
              "aiohttp",
              "FormalVerificationClient",
              "PermutationImportance",
              "ACConflictResolution",
              "prometheus_client",
              "uvicorn",
              "setup_error_handlers",
              "get_metrics",
              "ACAmendmentVote",
              "ResolutionResult",
              "HITLSamplingRequest",
              "Any",
              "MemorySaver",
              "get_principle",
              "List",
              "Send",
              "sys",
              "traceback",
              "get_prompt_manager",
              "secrets",
              "patch",
              "ACConflictResolutionCreate",
              "Web3",
              "pydantic",
              "ACConflictResolutionUpdate",
              "app",
              "and",
              "issues",
              "Principle",
              "BaseACGSModel",
              "sqlalchemy",
              "get_async_db",
              "get_settings",
              "ConstitutionalAsyncTestCase",
              "require_admin_role",
              "AuditLoggingService",
              "crud",
              "localhost:8001",
              "Enum",
              "dataclass",
              "router",
              "MIMEText",
              "ConstitutionalCouncilGraph",
              "models",
              "Optional",
              "contextlib",
              "ConstitutionalComplianceRequest",
              "ConstitutionalComplianceValidator",
              "ACAmendment",
              "EscalationRequest",
              "get_ac_conflict_resolution",
              "ContentValidator",
              "asynccontextmanager",
              "typing",
              "collections",
              "MIMEMultipart",
              "lru_cache",
              "APIRouter",
              "get_acgs_config",
              "ViolationDetectionService",
              "web3",
              "Base",
              "CORSMiddleware",
              "sentry_sdk",
              "AsyncClient",
              "FastAPI",
              "localhost:8003",
              "ConstitutionalPrinciple",
              "select",
              "hmac",
              "REGISTRY",
              "ImpactAnalyzer",
              "get_current_active_user",
              "ComplianceMetrics",
              "get_constitutional_metrics",
              "BaseModel",
              "GovernancePhase",
              "logging",
              "AlertingSystem",
              "hashlib",
              "AuditLogger",
              "dataclasses",
              "Field",
              "FormalVerificationService",
              "fastapi",
              "User",
              "FrameworkValidator",
              "CollectorRegistry",
              "localhost:8545",
              "Column",
              "base64",
              "QECConflictResolver",
              "create_ac_conflict_resolution",
              "middleware_integration",
              "asyncio_throttle",
              "Dict",
              "AsyncMock",
              "structlog",
              "serialization",
              "Depends",
              "localhost:8080",
              "pytest",
              "localhost:8005",
              "get_metrics_collector",
              "Callable",
              "TestClient",
              "setup_standard_acgs_service",
              "localhost:8002",
              "json",
              "HumanInTheLoopSampler",
              "ACAmendmentVoteCreate",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade",
              "singleton",
              "service_layer"
            ]
          },
          {
            "name": "api-gateway",
            "path": "services/core/api-gateway",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".txt": 1
              }
            },
            "lines_of_code": 989,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /gateway/routes",
              "GET /health",
              "GET /gateway/metrics",
              "GET /gateway/policies"
            ],
            "dependencies": [
              "localhost:8009",
              "wraps",
              "localhost:8023",
              "localhost:8011",
              "localhost:8017",
              "pydantic",
              "defaultdict",
              "uuid",
              "BaseHTTPMiddleware",
              "functools",
              "asyncio",
              "localhost:8015",
              "BaseModel",
              "logging",
              "jwt",
              "JSONResponse",
              "hashlib",
              "localhost:8001",
              "fastapi",
              "Enum",
              "localhost:8014",
              "contextlib",
              "Dict",
              "datetime",
              "localhost:3000",
              "localhost:8020",
              "localhost:8021",
              "uvicorn",
              "localhost:8012",
              "asynccontextmanager",
              "typing",
              "collections",
              "json",
              "localhost:8010",
              "enum",
              "localhost:8016",
              "localhost:8008",
              "CORSMiddleware",
              "time",
              "localhost:8013",
              "httpx",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "__pycache__",
            "path": "services/core/__pycache__",
            "files": {
              "total": 1,
              "by_type": {
                ".pyc": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "governance-synthesis",
            "path": "services/core/governance-synthesis",
            "files": {
              "total": 34,
              "by_type": {
                ".backup": 1,
                ".md": 3,
                ".py": 28,
                ".pyc": 2
              }
            },
            "lines_of_code": 12580,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /tools/available",
              "DELETE /templates/{template_id}",
              "POST /violations/scan",
              "GET /bottlenecks",
              "GET /environmental-factors/{factor_type}",
              "GET /templates/{template_id}",
              "POST /tools/execute",
              "GET /compliance-report",
              "POST /conflicts/detect",
              "POST /validation/semantic",
              "GET /algorithms",
              "GET /workflows/{workflow_id}",
              "GET /performance/summary",
              "GET /dashboard-data",
              "POST /workflows",
              "GET /clusters",
              "GET /violations",
              "POST /synthesize",
              "POST /batch",
              "GET /status",
              "POST /generate",
              "DELETE /policies/{policy_id}",
              "GET /reliability_metrics",
              "POST /validate",
              "POST /notify",
              "POST /models/reset-circuit-breakers",
              "POST /update-performance-targets",
              "PUT /templates/{template_id}",
              "POST /multi-model-consensus",
              "GET /models/config",
              "GET /",
              "DELETE /workflows/{workflow_id}",
              "GET /health",
              "POST /escalate",
              "GET /workflows/metrics",
              "DELETE /cache",
              "GET /constitutional-context/{context}",
              "GET /performance",
              "PUT /violations/{violation_id}/resolve",
              "POST /consensus",
              "GET /templates",
              "GET /latency-profile",
              "GET /policies/",
              "POST /governance-evaluation",
              "POST /conflicts/resolve",
              "GET /policies/{policy_id}",
              "GET /strategies",
              "GET /violations/{violation_id}",
              "GET /thresholds",
              "PUT /thresholds/{threshold_name}",
              "POST /update-performance",
              "POST /workflow/execute",
              "PUT /config",
              "POST /alerts/configure",
              "GET /adaptation-triggers/{context}",
              "PUT /policies/{policy_id}",
              "POST /workflows/{workflow_id}/start",
              "GET /prometheus-metrics",
              "POST /violations/{violation_id}/escalate",
              "GET /metrics",
              "POST /agents",
              "GET /agents/{agent_id}",
              "GET /optimization-recommendations",
              "GET /reliability_metrics/history",
              "POST /batch-synthesize",
              "POST /refinement/suggestions",
              "POST /workflows/{workflow_id}/cancel",
              "GET /workflows",
              "GET /workflows/types",
              "POST /environmental-factors",
              "GET /templates/",
              "GET /performance-summary",
              "GET /analytics",
              "GET /templates/best",
              "GET /conflicts/complexity/{conflict_id}",
              "POST /templates/register",
              "DELETE /agents/{agent_id}",
              "POST /analyze-context"
            ],
            "dependencies": [
              "OPAIntegrationError",
              "RequestValidationError",
              "asyncio",
              "ServiceOrchestrator",
              "paths",
              "MABAlgorithm",
              "JSONResponse",
              "declarative_mixin",
              "opa-server:8181",
              "AsyncSession",
              "ViolationAlert",
              "EnvironmentalFactor",
              "get_multi_model_manager",
              "MABIntegratedGSService",
              "get_policy",
              "UUID",
              "selectinload",
              "and_",
              "TrustedHostMiddleware",
              "time",
              "httpx",
              "uuid",
              "api_models",
              "functools",
              "schemas",
              "BaseSettings",
              "ToolSafetyLevel",
              "QECErrorCorrectionService",
              "os",
              "ConstitutionalSynthesisInput",
              "validator",
              "get_policy_synthesis_workflow",
              "datetime",
              "prometheus_client",
              "uvicorn",
              "get_metrics",
              "ThresholdConfig",
              "validation_helpers",
              "require_gs_admin",
              "query_llm_for_constitutional_synthesis",
              "Any",
              "JSON",
              "UnifiedInputValidator",
              "constitutional_prompt_builder",
              "List",
              "sys",
              "WebSocketState",
              "pydantic",
              "app",
              "Principle",
              "BaseACGSModel",
              "sqlalchemy",
              "get_async_db",
              "get_settings",
              "OptimizationStrategy",
              "SimpleTenantMixin",
              "get_opa_client",
              "get_security_service",
              "dataclass",
              "APGFOrchestrator",
              "Optional",
              "contextlib",
              "asynccontextmanager",
              "typing",
              "lru_cache",
              "APIRouter",
              "get_llm_client",
              "Base",
              "CORSMiddleware",
              "FastAPI",
              "ConstitutionalPrinciple",
              "REGISTRY",
              "get_current_active_user",
              "BaseModel",
              "logging",
              "declared_attr",
              "MultiModelConsensusRequest",
              "AlertingSystem",
              "AuditLogger",
              "dataclasses",
              "ValidationLevel",
              "handle_validation_errors",
              "fastapi",
              "User",
              "ForeignKey",
              "Column",
              "validation_models",
              "event",
              "get_performance_monitor",
              "structlog",
              "pytest",
              "rego",
              "ac_service_client",
              "ErrorCode",
              "TestClient",
              "json",
              "declarative_base",
              "pathlib",
              "shared",
              "select"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade",
              "singleton"
            ]
          },
          {
            "name": "superclaude-command-system",
            "path": "services/core/superclaude-command-system",
            "files": {
              "total": 2,
              "by_type": {
                ".md": 2
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "worker_agents",
            "path": "services/core/worker_agents",
            "files": {
              "total": 25,
              "by_type": {
                ".py": 15,
                ".md": 4,
                ".pyc": 6
              }
            },
            "lines_of_code": 11715,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/agents/{agent_id}",
              "GET /api/v1/tasks/{task_id}",
              "POST /api/v1/ethics/bias-assessment",
              "POST /api/v1/agents/register",
              "GET /api/v1/agents",
              "POST /api/v1/legal/regulatory-compliance",
              "GET /metrics",
              "POST /api/v1/tasks",
              "POST /api/v1/operational/performance-analysis",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "ConstitutionalSafetyValidator",
              "BaseModel",
              "asyncio",
              "logging",
              "OperationalAgent",
              "JSONResponse",
              "PerformanceMonitor",
              "EnhancedEthicalAnalysisResult",
              "dataclasses",
              "EthicalAnalysisResult",
              "Enum",
              "fastapi",
              "dataclass",
              "aioredis",
              "get_current_user",
              "Mock",
              "TaskDefinition",
              "EthicsAgent",
              "uuid4",
              "contextlib",
              "datetime",
              "BlackboardService",
              "BiasAssessment",
              "uvicorn",
              "setup_error_handlers",
              "AIModelService",
              "asynccontextmanager",
              "typing",
              "pytest",
              "asyncpg",
              "EthicalAnalyzer",
              "EnhancedSecurityMiddleware",
              "enum",
              "Any",
              "CORSMiddleware",
              "time",
              "LegalAgent",
              "FastAPI",
              "BiasDetector",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "shared",
            "path": "services/core/shared",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 4,
                ".md": 1
              }
            },
            "lines_of_code": 1674,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /metrics/performance"
            ],
            "dependencies": [
              "traceback",
              "wraps",
              "secrets",
              "ipaddress",
              "hmac",
              "uuid",
              "defaultdict",
              "BaseHTTPMiddleware",
              "functools",
              "asyncio",
              "logging",
              "re",
              "threading",
              "jwt",
              "HTTPException",
              "JSONResponse",
              "hashlib",
              "dataclasses",
              "Enum",
              "fastapi",
              "redis",
              "dataclass",
              "contextlib",
              "Dict",
              "datetime",
              "asynccontextmanager",
              "typing",
              "collections",
              "json",
              "enum",
              "Any",
              "signal",
              "time",
              "weakref",
              "HTTP_500_INTERNAL_SERVER_ERROR"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "facade",
              "middleware",
              "decorator"
            ]
          },
          {
            "name": "agent-hitl",
            "path": "services/core/agent-hitl",
            "files": {
              "total": 8,
              "by_type": {
                ".py": 3,
                "": 1,
                ".md": 1,
                ".pyc": 3
              }
            },
            "lines_of_code": 414,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/agent/status",
              "POST /api/v1/oversight/request",
              "GET /health",
              "GET /metrics"
            ],
            "dependencies": [
              "typing",
              "Dict",
              "fastapi",
              "json",
              "datetime",
              "asyncio",
              "redis",
              "AgentHITLService",
              "logging",
              "CORSMiddleware",
              "BaseHTTPRequestHandler",
              "time",
              "uvicorn",
              "FastAPI",
              "JSONResponse"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware"
            ]
          },
          {
            "name": "alerting-service",
            "path": "services/core/alerting-service",
            "files": {
              "total": 5,
              "by_type": {
                ".txt": 1,
                ".md": 1,
                ".py": 3
              }
            },
            "lines_of_code": 1599,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /",
              "GET /api/v1/contacts/{contact_id}",
              "GET /api/v1/alerts",
              "GET /api/v1/metrics",
              "POST /api/v1/escalation-policies",
              "POST /api/v1/alerts/{alert_id}/acknowledge",
              "GET /api/v1/escalation-policies",
              "POST /api/v1/alerts/{alert_id}/resolve",
              "GET /api/v1/contacts",
              "GET /health",
              "POST /api/v1/contacts",
              "POST /api/v1/alerts"
            ],
            "dependencies": [
              "pydantic",
              "uuid",
              "defaultdict",
              "BaseModel",
              "asyncio",
              "logging",
              "MimeText",
              "hashlib",
              "Enum",
              "fastapi",
              "HTMLResponse",
              "localhost:8014",
              "contextlib",
              "Dict",
              "datetime",
              "uvicorn",
              "smtplib",
              "asynccontextmanager",
              "typing",
              "collections",
              "localhost:8080",
              "json",
              "enum",
              "CORSMiddleware",
              "time",
              "localhost:8013",
              "httpx",
              "FastAPI",
              "os",
              "MimeMultipart"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "constitutional-core",
            "path": "services/core/constitutional-core",
            "files": {
              "total": 18,
              "by_type": {
                ".txt": 1,
                ".py": 6,
                ".md": 5,
                ".backup": 3,
                ".pyc": 3
              }
            },
            "lines_of_code": 2142,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/verification/verify",
              "GET /",
              "POST /api/v1/unified/compliance",
              "GET /api/v1/constitutional/principles",
              "GET /api/v1/constitutional/principles/{principle_id}",
              "GET /api/v1/verification/capabilities",
              "GET /metrics",
              "GET /api/v1/constitutional/performance",
              "GET /api/v1/unified/status",
              "GET /health"
            ],
            "dependencies": [
              "error_handling",
              "get_service_client",
              "pydantic",
              "functools",
              "BaseModel",
              "asyncio",
              "logging",
              "app",
              "hashlib",
              "z3",
              "dataclasses",
              "fastapi",
              "shutdown_registry",
              "redis",
              "dataclass",
              "And",
              "TenantServiceClient",
              "Path",
              "middleware_integration",
              "contextlib",
              "datetime",
              "localhost:3000",
              "uvicorn",
              "setup_error_handlers",
              "asynccontextmanager",
              "typing",
              "localhost:8080",
              "pytest",
              "lru_cache",
              "TestClient",
              "json",
              "localhost:9090",
              "Any",
              "CORSMiddleware",
              "TrustedHostMiddleware",
              "time",
              "pathlib",
              "FastAPI",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "mvc"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 31,
          "total_lines": 201546,
          "total_files": 932,
          "average_lines_per_service": 6501.4838709677415,
          "average_files_per_service": 30.06451612903226,
          "constitutional_compliance_rate": 0.9354838709677419
        }
      },
      "infrastructure": {
        "service_count": 34,
        "services": [
          {
            "name": "scaling",
            "path": "services/infrastructure/scaling",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".backup": 1
              }
            },
            "lines_of_code": 2097,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "socket",
              "asyncpg",
              "docker",
              "Enum",
              "json",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "nats",
              "prometheus_client",
              "time",
              "aiohttp",
              "hashlib"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory"
            ]
          },
          {
            "name": "messaging",
            "path": "services/infrastructure/messaging",
            "files": {
              "total": 4,
              "by_type": {
                ".py": 2,
                ".backup": 1,
                ".md": 1
              }
            },
            "lines_of_code": 1313,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/status",
              "GET /",
              "POST /api/streams/{stream_name}/restore",
              "GET /api/streams/{stream_name}",
              "POST /api/replay/start",
              "GET /api/streams",
              "GET /api/replays",
              "POST /api/replay/{replay_id}/stop",
              "POST /api/streams/{stream_name}/backup",
              "GET /health",
              "GET /api/events/publish"
            ],
            "dependencies": [
              "nats_persistence_manager",
              "uuid",
              "asyncio",
              "logging",
              "dataclasses",
              "fastapi",
              "dataclass",
              "Client",
              "HTMLResponse",
              "Path",
              "JetStreamContext",
              "ConsumerConfig",
              "datetime",
              "prometheus_client",
              "uvicorn",
              "ReplayConfiguration",
              "Jinja2Templates",
              "typing",
              "Callable",
              "json",
              "nats",
              "Any",
              "time",
              "pathlib",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "linkerd",
            "path": "services/infrastructure/linkerd",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 1,
                ".backup": 1,
                ".yaml": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "scripts",
            "path": "services/infrastructure/scripts",
            "files": {
              "total": 6,
              "by_type": {
                ".md": 2,
                ".backup": 1,
                ".cfg": 1,
                ".sql": 1,
                ".yml": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "high_availability",
            "path": "services/infrastructure/high_availability",
            "files": {
              "total": 3,
              "by_type": {
                ".backup": 1,
                ".md": 1,
                ".py": 1
              }
            },
            "lines_of_code": 531,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "socket",
              "random",
              "datetime",
              "asyncio",
              "dataclass",
              "Any",
              "logging",
              "psutil",
              "time"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "alerting",
            "path": "services/infrastructure/alerting",
            "files": {
              "total": 4,
              "by_type": {
                ".md": 2,
                ".backup": 1,
                ".json": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "phase3",
            "path": "services/infrastructure/phase3",
            "files": {
              "total": 39,
              "by_type": {
                ".backup": 5,
                ".md": 8,
                "": 1,
                ".sh": 8,
                ".yaml": 1,
                ".yml": 2,
                ".sql": 2,
                ".cfg": 2,
                ".crt": 2,
                ".key": 2,
                ".srl": 1,
                ".pem": 1,
                ".csr": 1,
                ".conf": 3
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "opa",
            "path": "services/infrastructure/opa",
            "files": {
              "total": 4,
              "by_type": {
                ".backup": 2,
                ".md": 1,
                ".yml": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "gitops",
            "path": "services/infrastructure/gitops",
            "files": {
              "total": 6,
              "by_type": {
                ".backup": 1,
                ".yaml": 3,
                ".md": 2
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "logging",
            "path": "services/infrastructure/logging",
            "files": {
              "total": 2,
              "by_type": {
                ".backup": 1,
                ".md": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "docker",
            "path": "services/infrastructure/docker",
            "files": {
              "total": 125,
              "by_type": {
                ".backup": 32,
                ".yml": 53,
                ".yaml": 1,
                ".md": 26,
                ".sh": 1,
                ".conf": 5,
                ".template": 1,
                ".local": 1,
                ".auth-service": 1,
                ".json": 4
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "haproxy",
            "path": "services/infrastructure/haproxy",
            "files": {
              "total": 3,
              "by_type": {
                ".cfg": 1,
                ".backup": 1,
                ".md": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "operational-excellence",
            "path": "services/infrastructure/operational-excellence",
            "files": {
              "total": 17,
              "by_type": {
                ".backup": 2,
                ".md": 8,
                ".py": 6,
                ".yaml": 1
              }
            },
            "lines_of_code": 3209,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "random",
              "yaml",
              "json",
              "datetime",
              "asyncio",
              "aiohttp",
              "logging",
              "prometheus_client",
              "time",
              "pathlib",
              "Path"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository"
            ]
          },
          {
            "name": "terraform",
            "path": "services/infrastructure/terraform",
            "files": {
              "total": 59,
              "by_type": {
                ".tf": 38,
                ".md": 17,
                ".backup": 1,
                ".tfvars": 3
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "security",
            "path": "services/infrastructure/security",
            "files": {
              "total": 10,
              "by_type": {
                ".py": 7,
                ".md": 1,
                ".yaml": 1,
                ".backup": 1
              }
            },
            "lines_of_code": 4684,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "secrets",
              "defaultdict",
              "nmap",
              "StandardScaler",
              "rsa",
              "hvac",
              "asyncio",
              "logging",
              "re",
              "dataclasses",
              "localhost:8200",
              "hashes",
              "DBSCAN",
              "Enum",
              "redis",
              "dataclass",
              "CollectorRegistry",
              "cryptography",
              "Path",
              "x509",
              "datetime",
              "IsolationForest",
              "aiohttp",
              "prometheus_client",
              "structlog",
              "numpy",
              "typing",
              "collections",
              "json",
              "enum",
              "Any",
              "time",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "chaos",
            "path": "services/infrastructure/chaos",
            "files": {
              "total": 5,
              "by_type": {
                ".backup": 1,
                ".yml": 2,
                ".py": 1,
                ".md": 1
              }
            },
            "lines_of_code": 879,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "uuid",
              "docker",
              "localhost:8001",
              "Enum",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "aiohttp",
              "prometheus_client",
              "time",
              "psutil"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory"
            ]
          },
          {
            "name": "load-balancer",
            "path": "services/infrastructure/load-balancer",
            "files": {
              "total": 22,
              "by_type": {
                ".backup": 4,
                ".md": 4,
                ".cfg": 2,
                "": 1,
                ".yml": 2,
                ".py": 1,
                ".http": 2,
                ".sh": 6
              }
            },
            "lines_of_code": 538,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "random",
              "Enum",
              "json",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "time",
              "hashlib"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "repository",
              "singleton",
              "factory",
              "dependency_injection"
            ]
          },
          {
            "name": "ansible",
            "path": "services/infrastructure/ansible",
            "files": {
              "total": 6,
              "by_type": {
                ".backup": 1,
                ".md": 3,
                ".yml": 2
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "testing",
            "path": "services/infrastructure/testing",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 1,
                ".md": 1,
                ".backup": 1,
                ".pyc": 2
              }
            },
            "lines_of_code": 721,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "random",
              "json",
              "datetime",
              "asyncio",
              "dataclass",
              "subprocess",
              "logging",
              "Any",
              "prometheus_client",
              "time",
              "pathlib",
              "Path"
            ],
            "communication_patterns": [
              "async_communication"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "istio",
            "path": "services/infrastructure/istio",
            "files": {
              "total": 7,
              "by_type": {
                ".md": 2,
                ".backup": 1,
                ".yaml": 4
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "monitoring",
            "path": "services/infrastructure/monitoring",
            "files": {
              "total": 305,
              "by_type": {
                ".md": 74,
                ".backup": 65,
                ".sh": 11,
                ".json": 48,
                ".py": 32,
                ".yml": 63,
                ".yaml": 3,
                ".ini": 1,
                ".rego": 1,
                ".txt": 2,
                "": 2,
                ".pyc": 3
              }
            },
            "lines_of_code": 19584,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/comparison/{baseline1_id}/{baseline2_id}",
              "POST /webhook/prometheus-alerts",
              "POST /api/baseline/establish",
              "POST /webhook/security-alerts",
              "GET /metrics",
              "GET /alerts/history",
              "GET /threats",
              "GET /api/baseline/{baseline_id}",
              "POST /webhook/critical-alerts",
              "POST /events",
              "GET /api/baselines/list",
              "GET /alerts/active",
              "POST /webhook/governance-alerts",
              "POST /alerts/{alert_id}/resolve",
              "GET /",
              "GET /api/baseline/current",
              "POST /alerts/{alert_id}/acknowledge",
              "GET /api/services/status",
              "GET /api/metrics/live",
              "GET /health",
              "GET /threat-intelligence/{ip_address}"
            ],
            "dependencies": [
              "defaultdict",
              "asyncio",
              "plotly",
              "argparse",
              "redis",
              "glob",
              "elasticsearch",
              "psycopg2",
              "BackgroundTasks",
              "localhost:8020",
              "statistics",
              "numpy",
              "baseline_collector",
              "asdict",
              "pandas",
              "asyncpg",
              "enum",
              "time",
              "matplotlib",
              "httpx",
              "localhost:8000",
              "uuid",
              "baseline_metrics_collector",
              "localhost:8004",
              "Path",
              "random",
              "Counter",
              "datetime",
              "aiohttp",
              "localhost:3000",
              "prometheus_client",
              "uvicorn",
              "localhost:8097",
              "localhost:9115",
              "localhost:9090",
              "Any",
              "AsyncElasticsearch",
              "sys",
              "pydantic",
              "ComplianceReporter",
              "localhost:9091",
              "threading",
              "psutil",
              "csv",
              "localhost:8001",
              "SOC2ReportTemplate",
              "Enum",
              "dataclass",
              "HTMLResponse",
              "prometheus:9090",
              "Optional",
              "ISO27001ReportTemplate",
              "BaseHTTPRequestHandler",
              "typing",
              "collections",
              "intelligent_alerting",
              "push_to_gateway",
              "ComplianceStandard",
              "FastAPI",
              "AlertSeverity",
              "localhost:9201",
              "BaseModel",
              "logging",
              "hashlib",
              "requests",
              "dataclasses",
              "yaml",
              "fastapi",
              "CollectorRegistry",
              "subprocess",
              "localhost:9101",
              "Dict",
              "make_subplots",
              "seaborn",
              "Jinja2Templates",
              "structlog",
              "localhost:8005",
              "GDPRReportTemplate",
              "localhost:9093",
              "HTTPAuthorizationCredentials",
              "localhost:8002",
              "json",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc",
              "facade"
            ]
          },
          {
            "name": "compositions",
            "path": "services/infrastructure/compositions",
            "files": {
              "total": 3,
              "by_type": {
                ".backup": 1,
                ".md": 1,
                ".yaml": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "definitions",
            "path": "services/infrastructure/definitions",
            "files": {
              "total": 4,
              "by_type": {
                ".yaml": 1,
                ".md": 1,
                ".backup": 2
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "quantumagi-validation",
            "path": "services/infrastructure/quantumagi-validation",
            "files": {
              "total": 5,
              "by_type": {
                ".md": 2,
                ".backup": 2,
                ".json": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "helm",
            "path": "services/infrastructure/helm",
            "files": {
              "total": 5,
              "by_type": {
                ".backup": 2,
                ".md": 2,
                ".yaml": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "observability",
            "path": "services/infrastructure/observability",
            "files": {
              "total": 6,
              "by_type": {
                ".backup": 2,
                ".yml": 2,
                ".py": 1,
                ".md": 1
              }
            },
            "lines_of_code": 608,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "asyncio",
              "opentelemetry",
              "logging",
              "AsyncPGInstrumentor",
              "localhost:14268",
              "BatchSpanProcessor",
              "JaegerExporter",
              "dataclasses",
              "MeterProvider",
              "TracerProvider",
              "Enum",
              "dataclass",
              "datetime",
              "FastAPIInstrumentor",
              "prometheus_client",
              "AioHttpClientInstrumentor",
              "time",
              "PrometheusMetricReader",
              "Resource",
              "typing",
              "enum",
              "Any",
              "metrics"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory"
            ]
          },
          {
            "name": "providers",
            "path": "services/infrastructure/providers",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 1,
                ".yaml": 1,
                ".backup": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "k8s",
            "path": "services/infrastructure/k8s",
            "files": {
              "total": 23,
              "by_type": {
                ".md": 4,
                ".backup": 10,
                ".yaml": 9
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "redis",
            "path": "services/infrastructure/redis",
            "files": {
              "total": 8,
              "by_type": {
                ".conf": 2,
                ".yml": 1,
                ".sh": 3,
                ".md": 1,
                ".backup": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "database",
            "path": "services/infrastructure/database",
            "files": {
              "total": 14,
              "by_type": {
                ".ini": 2,
                ".py": 2,
                ".yml": 1,
                ".conf": 1,
                ".backup": 3,
                ".txt": 1,
                ".md": 1,
                ".sql": 1,
                ".sh": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 634,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "dataclasses",
              "random",
              "asyncpg",
              "Enum",
              "enum",
              "dataclass",
              "logging",
              "time",
              "os",
              "if"
            ],
            "communication_patterns": [
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory"
            ]
          },
          {
            "name": "ssl",
            "path": "services/infrastructure/ssl",
            "files": {
              "total": 4,
              "by_type": {
                ".backup": 1,
                ".md": 2,
                ".pem": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "validation",
            "path": "services/infrastructure/validation",
            "files": {
              "total": 3,
              "by_type": {
                ".backup": 1,
                ".md": 1,
                ".py": 1
              }
            },
            "lines_of_code": 842,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "localhost:8005",
              "dataclasses",
              "localhost:8003",
              "localhost:8001",
              "localhost:8002",
              "Enum",
              "json",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "time",
              "pathlib",
              "localhost:8006",
              "Path",
              "localhost:8004",
              "localhost:8000"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection"
            ]
          },
          {
            "name": "kubernetes",
            "path": "services/infrastructure/kubernetes",
            "files": {
              "total": 187,
              "by_type": {
                ".md": 35,
                ".yaml": 91,
                ".backup": 31,
                ".sh": 29,
                ".json": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "performance",
            "path": "services/infrastructure/performance",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 1,
                ".backup": 1,
                ".md": 1
              }
            },
            "lines_of_code": 587,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "Enum",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "time",
              "statistics"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 34,
          "total_lines": 36227,
          "total_files": 908,
          "average_lines_per_service": 1065.5,
          "average_files_per_service": 26.705882352941178,
          "constitutional_compliance_rate": 0.38235294117647056
        }
      },
      "mcp": {
        "service_count": 4,
        "services": [
          {
            "name": "github",
            "path": "services/mcp/github",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 2,
                ".md": 1
              }
            },
            "lines_of_code": 1293,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/security-policy",
              "POST /mcp/tools_list",
              "POST /mcp/resources_list",
              "GET /api/v1/metrics",
              "POST /mcp/resources_read",
              "POST /mcp/tools_call",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "fnmatch",
              "dataclasses",
              "fastapi",
              "Enum",
              "dataclass",
              "base64",
              "Dict",
              "datetime",
              "aiohttp",
              "UUID",
              "uvicorn",
              "typing",
              "json",
              "enum",
              "CORSMiddleware",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "graphql"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "browser",
            "path": "services/mcp/browser",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 2,
                ".md": 1
              }
            },
            "lines_of_code": 1194,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/security-policy",
              "POST /mcp/tools_list",
              "POST /mcp/resources_list",
              "GET /api/v1/metrics",
              "POST /mcp/resources_read",
              "POST /mcp/tools_call",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "re",
              "dataclasses",
              "bs4",
              "Enum",
              "fastapi",
              "dataclass",
              "Dict",
              "datetime",
              "aiohttp",
              "UUID",
              "BeautifulSoup",
              "uvicorn",
              "typing",
              "json",
              "enum",
              "urlparse",
              "CORSMiddleware",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "filesystem",
            "path": "services/mcp/filesystem",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 2,
                ".md": 1
              }
            },
            "lines_of_code": 1138,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/security-policy",
              "POST /mcp/tools_list",
              "POST /mcp/resources_list",
              "GET /api/v1/metrics",
              "POST /mcp/resources_read",
              "POST /mcp/tools_call",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "dataclasses",
              "fastapi",
              "Enum",
              "dataclass",
              "base64",
              "Path",
              "mimetypes",
              "Dict",
              "datetime",
              "UUID",
              "uvicorn",
              "typing",
              "stat",
              "json",
              "enum",
              "shutil",
              "CORSMiddleware",
              "pathlib",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "aggregator",
            "path": "services/mcp/aggregator",
            "files": {
              "total": 4,
              "by_type": {
                ".py": 2,
                ".md": 2
              }
            },
            "lines_of_code": 1256,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /mcp/v1/tools/list",
              "POST /api/v1/services",
              "POST /mcp/v1/resources/read",
              "GET /api/v1/services/{service_id}/health",
              "POST /mcp/v1/tools/call",
              "POST /mcp/v1/resources/list",
              "POST /mcp/v1/initialize",
              "GET /api/v1/services",
              "GET /health"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "constitutional_core:8001",
              "dataclasses",
              "Enum",
              "fastapi",
              "dataclass",
              "Dict",
              "datetime",
              "aiohttp",
              "UUID",
              "uvicorn",
              "typing",
              "json",
              "enum",
              "CORSMiddleware",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 4,
          "total_lines": 4881,
          "total_files": 13,
          "average_lines_per_service": 1220.25,
          "average_files_per_service": 3.25,
          "constitutional_compliance_rate": 1.0
        }
      },
      "blockchain": {
        "service_count": 14,
        "services": [
          {
            "name": "programs",
            "path": "services/blockchain/programs",
            "files": {
              "total": 21,
              "by_type": {
                ".md": 7,
                ".toml": 3,
                ".rs": 11
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "tests",
            "path": "services/blockchain/tests",
            "files": {
              "total": 60,
              "by_type": {
                ".ts": 16,
                ".js": 22,
                ".md": 3,
                ".py": 7,
                ".pyc": 12
              }
            },
            "lines_of_code": 2927,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "random",
              "asyncpg",
              "yaml",
              "Dict",
              "json",
              "asyncio",
              "dataclass",
              "Any",
              "logging",
              "time",
              "statistics",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "client",
            "path": "services/blockchain/client",
            "files": {
              "total": 19,
              "by_type": {
                ".md": 6,
                ".py": 1,
                ".toml": 1,
                ".rs": 11
              }
            },
            "lines_of_code": 392,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "Confirmed",
              "ConstitutionalPrinciple",
              "dataclasses",
              "Pubkey",
              "json",
              "asyncio",
              "dataclass",
              "Any",
              "logging",
              "Keypair",
              "AsyncClient",
              "Transaction"
            ],
            "communication_patterns": [
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "target",
            "path": "services/blockchain/target",
            "files": {
              "total": 5582,
              "by_type": {
                ".tag": 1,
                ".json": 866,
                "": 2062,
                ".rlib": 111,
                ".d": 782,
                ".rmeta": 630,
                ".so": 75,
                ".timestamp": 866,
                ".c": 2,
                ".o": 98,
                ".a": 7,
                ".h": 3,
                ".rs": 10,
                ".expr": 1,
                ".map": 6,
                ".js": 6,
                ".html": 2,
                ".png": 2,
                ".css": 2,
                ".lock": 13,
                ".bin": 37
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": ".anchor",
            "path": "services/blockchain/.anchor",
            "files": {
              "total": 27,
              "by_type": {
                ".md": 4,
                ".log": 3,
                ".json": 4,
                ".txt": 1,
                ".bin": 1,
                ".bz2": 1,
                "": 7,
                ".sst": 6
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "keys",
            "path": "services/blockchain/keys",
            "files": {
              "total": 2,
              "by_type": {
                ".json": 1,
                ".md": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "docs",
            "path": "services/blockchain/docs",
            "files": {
              "total": 22,
              "by_type": {
                ".md": 21,
                ".backup": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "scripts",
            "path": "services/blockchain/scripts",
            "files": {
              "total": 29,
              "by_type": {
                ".py": 7,
                ".sh": 7,
                ".json": 1,
                ".md": 1,
                ".rs": 5,
                ".js": 3,
                ".ts": 3,
                ".toml": 1,
                ".backup": 1
              }
            },
            "lines_of_code": 2427,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "QuantumagiGSEngine",
              "base58",
              "QuantumagiSolanaClient",
              "asyncio",
              "logging",
              "hashlib",
              "argparse",
              "dataclasses",
              "dataclass",
              "subprocess",
              "Path",
              "PolicyCategory",
              "datetime",
              "aiohttp",
              "typing",
              "json",
              "localhost:8000",
              "Any",
              "Keypair",
              "time",
              "pathlib",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "shared",
            "path": "services/blockchain/shared",
            "files": {
              "total": 13,
              "by_type": {
                ".md": 7,
                ".toml": 3,
                ".rs": 3
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "tools",
            "path": "services/blockchain/tools",
            "files": {
              "total": 11,
              "by_type": {
                ".md": 4,
                ".sh": 1,
                ".js": 2,
                ".py": 4
              }
            },
            "lines_of_code": 462,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "dataclasses",
              "numpy",
              "matplotlib",
              "json",
              "dataclass",
              "subprocess",
              "re",
              "time",
              "statistics",
              "os"
            ],
            "communication_patterns": [],
            "architectural_patterns": [
              "repository",
              "dependency_injection"
            ]
          },
          {
            "name": "artifacts",
            "path": "services/blockchain/artifacts",
            "files": {
              "total": 16,
              "by_type": {
                ".md": 2,
                ".json": 14
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "infrastructure",
            "path": "services/blockchain/infrastructure",
            "files": {
              "total": 30,
              "by_type": {
                ".md": 9,
                ".rs": 15,
                ".toml": 4,
                ".py": 1,
                ".json": 1
              }
            },
            "lines_of_code": 665,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "asdict",
              "dataclasses",
              "json",
              "time",
              "matplotlib"
            ],
            "communication_patterns": [
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "expert-service",
            "path": "services/blockchain/expert-service",
            "files": {
              "total": 42,
              "by_type": {
                ".md": 16,
                ".sh": 5,
                ".backup": 2,
                "": 2,
                ".yml": 2,
                ".yaml": 1,
                ".toml": 4,
                ".rs": 10
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "config",
            "path": "services/blockchain/config",
            "files": {
              "total": 6,
              "by_type": {
                ".md": 3,
                ".yml": 1,
                ".backup": 1,
                ".sh": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          }
        ],
        "category_complexity": {
          "total_services": 14,
          "total_lines": 6873,
          "total_files": 5880,
          "average_lines_per_service": 490.92857142857144,
          "average_files_per_service": 420.0,
          "constitutional_compliance_rate": 0.35714285714285715
        }
      },
      "shared": {
        "service_count": 50,
        "services": [
          {
            "name": "multi_tenant",
            "path": "services/shared/multi_tenant",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 1,
                ".py": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 761,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "uuid",
              "Enum",
              "json",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "time",
              "pathlib",
              "numpy",
              "Path"
            ],
            "communication_patterns": [
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection"
            ]
          },
          {
            "name": "alembic",
            "path": "services/shared/alembic",
            "files": {
              "total": 47,
              "by_type": {
                ".py": 21,
                ".md": 4,
                ".mako": 1,
                ".pyc": 21
              }
            },
            "lines_of_code": 5360,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "op",
              "typing",
              "Sequence",
              "contextlib",
              "fileConfig",
              "pathlib",
              "context",
              "postgresql",
              "engine_from_config",
              "sys",
              "Base",
              "alembic",
              "sqlalchemy",
              "os",
              "database"
            ],
            "communication_patterns": [
              "event_driven",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "events",
            "path": "services/shared/events",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 2,
                ".md": 1,
                ".pyc": 2
              }
            },
            "lines_of_code": 255,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "uuid4",
              "uuid",
              "pydantic",
              "datetime",
              "asyncio",
              "BaseModel",
              "Any",
              "logging",
              "Event"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "facade",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "audit",
            "path": "services/shared/audit",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 1,
                ".py": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 1019,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "asdict",
              "typing",
              "dataclasses",
              "hashes",
              "uuid",
              "Enum",
              "json",
              "datetime",
              "enum",
              "asyncio",
              "Any",
              "logging",
              "padding",
              "InvalidSignature",
              "pathlib",
              "os",
              "hashlib"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "streaming",
            "path": "services/shared/streaming",
            "files": {
              "total": 16,
              "by_type": {
                ".sh": 1,
                ".py": 5,
                ".yml": 2,
                ".backup": 2,
                ".md": 2,
                ".pyc": 4
              }
            },
            "lines_of_code": 3820,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "uuid",
              "kafka",
              "asyncio",
              "logging",
              "KafkaConfigManager",
              "TopicPartition",
              "EnhancedAuditLogger",
              "KafkaError",
              "AsyncGenerator",
              "dataclasses",
              "KafkaProducer",
              "KafkaConsumer",
              "yaml",
              "Enum",
              "Client",
              "event_streaming_manager",
              "Path",
              "datetime",
              "pickle",
              "asdict",
              "typing",
              "Callable",
              "EventStreamingManager",
              "kafka_config_manager",
              "json",
              "nats",
              "enum",
              "Any",
              "EnvironmentType",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "grpc",
              "websocket",
              "message_queue",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "validation",
            "path": "services/shared/validation",
            "files": {
              "total": 6,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".pyc": 2
              }
            },
            "lines_of_code": 980,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "Callable",
              "jsonschema",
              "ABC",
              "pydantic",
              "abc",
              "Enum",
              "datetime",
              "enum",
              "dataclass",
              "Any",
              "logging",
              "re",
              "BaseModel"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "wina",
            "path": "services/shared/wina",
            "files": {
              "total": 34,
              "by_type": {
                ".py": 18,
                ".md": 2,
                ".pyc": 14
              }
            },
            "lines_of_code": 12219,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /config",
              "POST /monitoring/stop",
              "POST /metrics/learning-feedback",
              "GET /config",
              "POST /metrics/dynamic-gating",
              "POST /metrics/svd-transformation",
              "POST /metrics/integration",
              "POST /monitoring/start",
              "GET /metrics/realtime",
              "GET /metrics/summary",
              "POST /report/generate",
              "POST /metrics/constitutional-compliance",
              "GET /alerts",
              "POST /metrics/neuron-activation",
              "GET /health",
              "POST /metrics/system-health",
              "GET /prometheus"
            ],
            "dependencies": [
              "WINAError",
              "ABC",
              "pydantic",
              "defaultdict",
              "asyncio",
              "WINAMetricsError",
              "SparsityStrategy",
              "logging",
              "WINATransformationError",
              "BaseModel",
              "deque",
              "OrthogonalityProtocol",
              "load_wina_config_from_env",
              "dataclasses",
              "Enum",
              "fastapi",
              "dataclass",
              "sys",
              "CollectorRegistry",
              "math",
              "Path",
              "torch",
              "WINAConfigurationError",
              "random",
              "ConstitutionalWINASupport",
              "PlainTextResponse",
              "WINAOptimizationError",
              "Dict",
              "abc",
              "datetime",
              "wina",
              "GFLOPsTracker",
              "prometheus_client",
              "numpy",
              "statistics",
              "asdict",
              "typing",
              "collections",
              "WINACore",
              "WINAConstitutionalError",
              "APIRouter",
              "json",
              "enum",
              "Any",
              "WINAGatingError",
              "time",
              "pathlib",
              "os",
              "WINAConfig"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "requirements",
            "path": "services/shared/requirements",
            "files": {
              "total": 11,
              "by_type": {
                ".txt": 9,
                ".md": 1,
                ".backup": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "acgs_types",
            "path": "services/shared/acgs_types",
            "files": {
              "total": 2,
              "by_type": {
                ".py": 1,
                ".md": 1
              }
            },
            "lines_of_code": 9,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "configuration",
            "path": "services/shared/configuration",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 4,
                ".md": 1
              }
            },
            "lines_of_code": 1942,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "ABC",
              "tomli",
              "tomli_w",
              "asyncio",
              "get_config_manager",
              "Observer",
              "logging",
              "threading",
              "flag",
              "localhost:14268",
              "hashlib",
              "FileSystemEventHandler",
              "dataclasses",
              "yaml",
              "Enum",
              "dataclass",
              "SchemaValidator",
              "Path",
              "ConfigurationError",
              "abc",
              "datetime",
              "typing",
              "ValidationResult",
              "Callable",
              "data",
              "json",
              "enum",
              "Any",
              "time",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "observer"
            ]
          },
          {
            "name": "training",
            "path": "services/shared/training",
            "files": {
              "total": 17,
              "by_type": {
                ".py": 10,
                ".md": 1,
                ".pyc": 6
              }
            },
            "lines_of_code": 5967,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "PolicyGovernanceTrainer",
              "Dataset",
              "asyncio",
              "logging",
              "re",
              "psutil",
              "ConstitutionalAITrainer",
              "dataclasses",
              "DataLoader",
              "MultiAgentTrainer",
              "statement",
              "dataclass",
              "math",
              "Path",
              "torch",
              "GradScaler",
              "DistributedDataParallel",
              "numpy",
              "transformers",
              "typing",
              "json",
              "Any",
              "time",
              "pathlib"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "domain",
            "path": "services/shared/domain",
            "files": {
              "total": 9,
              "by_type": {
                ".md": 1,
                ".py": 4,
                ".pyc": 4
              }
            },
            "lines_of_code": 788,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "DomainEvent",
              "dataclasses",
              "Callable",
              "CONSTITUTIONAL_HASH",
              "ABC",
              "uuid",
              "Generic",
              "abc",
              "json",
              "datetime",
              "asyncio",
              "dataclass",
              "Any",
              "logging",
              "UUID",
              "hashlib"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "singleton",
              "mvc"
            ]
          },
          {
            "name": "blackboard",
            "path": "services/shared/blackboard",
            "files": {
              "total": 21,
              "by_type": {
                ".md": 2,
                ".py": 10,
                ".pyc": 9
              }
            },
            "lines_of_code": 3946,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /api/v1/knowledge/{entry_id}/validate",
              "POST /api/v1/knowledge",
              "GET /metrics",
              "PUT /api/v1/knowledge/{entry_id}",
              "GET /api/v1/knowledge/{entry_id}",
              "GET /api/v1/knowledge",
              "GET /api/v1/coordination/{context_id}/knowledge",
              "GET /health",
              "POST /api/v1/coordination",
              "POST /api/v1/coordination/{context_id}/knowledge"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "defaultdict",
              "asyncio",
              "BaseModel",
              "logging",
              "KnowledgeItem",
              "ConflictManager",
              "EventPublisher",
              "JSONResponse",
              "PerformanceMonitor",
              "dataclasses",
              "fastapi",
              "Enum",
              "redis",
              "dataclass",
              "ConflictItem",
              "aioredis",
              "get_current_user",
              "TaskDefinition",
              "uuid4",
              "contextlib",
              "datetime",
              "BlackboardService",
              "TaskManager",
              "uvicorn",
              "setup_error_handlers",
              "asynccontextmanager",
              "collections",
              "typing",
              "KnowledgeManager",
              "asyncpg",
              "json",
              "EnhancedSecurityMiddleware",
              "enum",
              "Any",
              "CORSMiddleware",
              "time",
              "FastAPI",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "message_queue",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "routing",
            "path": "services/shared/routing",
            "files": {
              "total": 6,
              "by_type": {
                ".txt": 1,
                "": 1,
                ".py": 2,
                ".md": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 822,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /models",
              "GET /metrics",
              "POST /execute",
              "POST /route",
              "GET /health"
            ],
            "dependencies": [
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "deque",
              "dataclasses",
              "fastapi",
              "Enum",
              "redis",
              "dataclass",
              "contextlib",
              "datetime",
              "uvicorn",
              "numpy",
              "asynccontextmanager",
              "typing",
              "hybrid_inference_router",
              "collections",
              "json",
              "enum",
              "Any",
              "CORSMiddleware",
              "time",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "rest_api",
              "async_communication",
              "event_driven"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "testing",
            "path": "services/shared/testing",
            "files": {
              "total": 9,
              "by_type": {
                ".py": 4,
                ".md": 1,
                ".pyc": 4
              }
            },
            "lines_of_code": 2071,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "uuid",
              "asyncio",
              "logging",
              "jwt",
              "sqlalchemy",
              "get_settings",
              "dataclasses",
              "AsyncSession",
              "redis",
              "dataclass",
              "text",
              "MagicMock",
              "SimpleTenantContext",
              "datetime",
              "get_database_url",
              "statistics",
              "typing",
              "pytest",
              "Redis",
              "Callable",
              "urljoin",
              "sessionmaker",
              "json",
              "Any",
              "time",
              "httpx",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "monitoring",
            "path": "services/shared/monitoring",
            "files": {
              "total": 28,
              "by_type": {
                ".py": 19,
                ".md": 1,
                ".pyc": 8
              }
            },
            "lines_of_code": 13938,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "defaultdict",
              "get_cache_manager",
              "asyncio",
              "opentelemetry",
              "AsyncGenerator",
              "redis",
              "abc",
              "get_connection_pool_registry",
              "IsolationForest",
              "numpy",
              "statistics",
              "get_health_registry",
              "asdict",
              "contextmanager",
              "jaeger:14268",
              "enum",
              "time",
              "contextvars",
              "uuid",
              "functools",
              "required",
              "operator",
              "JaegerExporter",
              "MeterProvider",
              "mean_absolute_error",
              "ACGSRedisClient",
              "SqlalchemyIntegration",
              "Path",
              "datetime",
              "aiohttp",
              "prometheus_client",
              "Any",
              "TYPE_CHECKING",
              "wraps",
              "pydantic",
              "StandardScaler",
              "trace",
              "threading",
              "psutil",
              "deque",
              "AsyncioIntegration",
              "TracerProvider",
              "LinearRegression",
              "Enum",
              "dataclass",
              "MIMEText",
              "math",
              "contextlib",
              "get_circuit_breaker_registry",
              "smtplib",
              "predictive-analytics:8090",
              "asynccontextmanager",
              "collections",
              "typing",
              "MIMEMultipart",
              "sentry_sdk",
              "AlertSeverity",
              "retry_with_exponential_backoff",
              "ABC",
              "ContextVar",
              "BaseModel",
              "RedisIntegration",
              "logging",
              "localhost:14268",
              "AlertingSystem",
              "AuditLogger",
              "BatchSpanProcessor",
              "requests",
              "dataclasses",
              "FastApiIntegration",
              "subprocess",
              "CollectorRegistry",
              "ML",
              "Dict",
              "structlog",
              "PrometheusMetricReader",
              "LoggingIntegration",
              "get_metrics_collector",
              "Callable",
              "json",
              "prometheus",
              "grafana:3000",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "facade",
              "decorator"
            ]
          },
          {
            "name": "fairness",
            "path": "services/shared/fairness",
            "files": {
              "total": 7,
              "by_type": {
                ".py": 6,
                ".md": 1
              }
            },
            "lines_of_code": 6793,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "uuid",
              "defaultdict",
              "asyncio",
              "logging",
              "operator",
              "AlertingSystem",
              "FairlearnBiasDetector",
              "AuditLogger",
              "dataclasses",
              "Enum",
              "dataclass",
              "math",
              "ThresholdOptimizer",
              "datetime",
              "statistics",
              "numpy",
              "collections",
              "typing",
              "pandas",
              "BiasAnalysisResult",
              "json",
              "enum",
              "Any",
              "WhatIfToolAnalyzer",
              "EnhancedFairnessFramework"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "clients",
            "path": "services/shared/clients",
            "files": {
              "total": 2,
              "by_type": {
                ".md": 1,
                ".py": 1
              }
            },
            "lines_of_code": 438,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "initialize_default_services",
              "asyncio",
              "logging",
              "localhost:8004",
              "dataclasses",
              "localhost:8001",
              "fastapi",
              "Request",
              "dataclass",
              "localhost:8006",
              "TenantContext",
              "typing",
              "localhost:8005",
              "localhost:8002",
              "Any",
              "time",
              "httpx",
              "os",
              "localhost:8000"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection"
            ]
          },
          {
            "name": "config",
            "path": "services/shared/config",
            "files": {
              "total": 16,
              "by_type": {
                ".json": 9,
                ".py": 4,
                ".md": 1,
                ".pyc": 2
              }
            },
            "lines_of_code": 500,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "localhost:8005",
              "dataclasses",
              "BaseSettings",
              "asyncpg",
              "localhost:8001",
              "pydantic",
              "localhost:8002",
              "redis",
              "dataclass",
              "urlparse",
              "logging",
              "localhost:8006",
              "localhost:8004",
              "os",
              "localhost:8003"
            ],
            "communication_patterns": [
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "data_flywheel",
            "path": "services/shared/data_flywheel",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 1,
                ".md": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 769,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "asyncio",
              "logging",
              "dataclasses",
              "localhost:9200",
              "AsyncMongoClient",
              "Enum",
              "redis",
              "dataclass",
              "Path",
              "elasticsearch",
              "pymongo",
              "datetime",
              "localhost:8080",
              "typing",
              "json",
              "enum",
              "Any",
              "time",
              "pathlib",
              "httpx",
              "AsyncElasticsearch",
              "localhost:8000"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "performance",
            "path": "services/shared/performance",
            "files": {
              "total": 15,
              "by_type": {
                ".py": 8,
                ".md": 1,
                ".pyc": 6
              }
            },
            "lines_of_code": 3986,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "retry_with_exponential_backoff",
              "ABC",
              "functools",
              "asyncio",
              "logging",
              "psutil",
              "hashlib",
              "dataclasses",
              "CircuitBreakerConfig",
              "gc",
              "redis",
              "Enum",
              "dataclass",
              "aioredis",
              "IndexAnalyzer",
              "Path",
              "contextlib",
              "Counter",
              "abc",
              "datetime",
              "prometheus_client",
              "pickle",
              "asynccontextmanager",
              "typing",
              "Redis",
              "Callable",
              "asyncpg",
              "json",
              "enum",
              "Any",
              "time",
              "pathlib",
              "weakref",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc",
              "facade"
            ]
          },
          {
            "name": "training_data",
            "path": "services/shared/training_data",
            "files": {
              "total": 4,
              "by_type": {
                ".py": 2,
                ".md": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 1383,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "Dataset",
              "uuid",
              "asyncio",
              "logging",
              "dataclasses",
              "Enum",
              "dataclass",
              "Path",
              "datasets",
              "random",
              "zipfile",
              "aiohttp",
              "datetime",
              "numpy",
              "typing",
              "pandas",
              "rego",
              "json",
              "enum",
              "Any",
              "urlparse",
              "time",
              "pathlib",
              "os"
            ],
            "communication_patterns": [
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "services",
            "path": "services/shared/services",
            "files": {
              "total": 2,
              "by_type": {
                ".py": 1,
                ".md": 1
              }
            },
            "lines_of_code": 755,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "TenantRepository",
              "typing",
              "string",
              "secrets",
              "dataclasses",
              "and_",
              "AsyncSession",
              "pydantic",
              "uuid",
              "datetime",
              "BaseModel",
              "dataclass",
              "Any",
              "logging",
              "sqlalchemy"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "compliance",
            "path": "services/shared/compliance",
            "files": {
              "total": 6,
              "by_type": {
                ".py": 5,
                ".md": 1
              }
            },
            "lines_of_code": 4717,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "EUAIActCompliance",
              "uuid",
              "asyncio",
              "logging",
              "AlertingSystem",
              "hashlib",
              "AuditLogger",
              "markdown",
              "dataclasses",
              "Enum",
              "dataclass",
              "Path",
              "datetime",
              "asdict",
              "typing",
              "Callable",
              "json",
              "enum",
              "Any",
              "pathlib"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "security",
            "path": "services/shared/security",
            "files": {
              "total": 25,
              "by_type": {
                ".py": 12,
                ".backup": 1,
                ".md": 1,
                ".pyc": 11
              }
            },
            "lines_of_code": 7162,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /security/metrics",
              "GET /security/health"
            ],
            "dependencies": [
              "secrets",
              "ipaddress",
              "Cipher",
              "hmac",
              "ABC",
              "uuid",
              "defaultdict",
              "gzip",
              "pydantic",
              "BaseHTTPMiddleware",
              "asyncio",
              "BaseModel",
              "PBKDF2HMAC",
              "re",
              "logging",
              "jwt",
              "HTTPException",
              "localhost:8004",
              "hashlib",
              "html",
              "sqlite3",
              "dataclasses",
              "hashes",
              "default_backend",
              "localhost:8001",
              "__all__",
              "fastapi",
              "Enum",
              "dataclass",
              "base64",
              "CSRFConfig",
              "localhost:8006",
              "Path",
              "Fernet",
              "urllib",
              "Scrypt",
              "sanitize_dict",
              "abc",
              "SecurityConfig",
              "datetime",
              "localhost:3000",
              "structlog",
              "asdict",
              "typing",
              "ChaCha20Poly1305",
              "string",
              "localhost:8005",
              "collections",
              "localhost:8003",
              "bcrypt",
              "localhost:8002",
              "json",
              "enum",
              "padding",
              "Any",
              "unquote",
              "time",
              "pathlib",
              "FastAPI",
              "os",
              "localhost:8000"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "facade"
            ]
          },
          {
            "name": "common",
            "path": "services/shared/common",
            "files": {
              "total": 9,
              "by_type": {
                ".py": 4,
                ".md": 1,
                ".pyc": 4
              }
            },
            "lines_of_code": 104,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "Any",
              "logging"
            ],
            "communication_patterns": [
              "event_driven"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "utils",
            "path": "services/shared/utils",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 1,
                ".md": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 9,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "deployment",
            "path": "services/shared/deployment",
            "files": {
              "total": 6,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".pyc": 2
              }
            },
            "lines_of_code": 1891,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "policy-governance-{environment}:8002",
              "constitutional-ai-{environment}:8001",
              "dataclasses",
              "Enum",
              "fastapi",
              "redis",
              "dataclass",
              "Path",
              "code-analysis-{environment}:8007",
              "torch",
              "auth-service-{environment}:8016",
              "datetime",
              "uvicorn",
              "typing",
              "rego",
              "context-engine-{environment}:8006",
              "json",
              "enum",
              "Any",
              "CORSMiddleware",
              "time",
              "pathlib",
              "FastAPI"
            ],
            "communication_patterns": [
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "resilience",
            "path": "services/shared/resilience",
            "files": {
              "total": 13,
              "by_type": {
                ".py": 6,
                ".md": 1,
                ".pyc": 6
              }
            },
            "lines_of_code": 1991,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "ABC",
              "asyncio",
              "ExponentialBackoff",
              "logging",
              "threading",
              "dataclasses",
              "Enum",
              "dataclass",
              "TimeoutError",
              "contextlib",
              "random",
              "InfrastructureError",
              "abc",
              "datetime",
              "contextmanager",
              "typing",
              "Callable",
              "TypeVar",
              "enum",
              "CircuitBreaker",
              "Any",
              "signal",
              "time"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "facade",
              "service_layer"
            ]
          },
          {
            "name": "data_generation",
            "path": "services/shared/data_generation",
            "files": {
              "total": 2,
              "by_type": {
                ".py": 1,
                ".md": 1
              }
            },
            "lines_of_code": 685,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "collections",
              "dataclasses",
              "future",
              "Enum",
              "json",
              "datetime",
              "enum",
              "asyncio",
              "dataclass",
              "logging",
              "Any",
              "redis",
              "deque",
              "time",
              "numpy"
            ],
            "communication_patterns": [
              "async_communication",
              "websocket"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "cache",
            "path": "services/shared/cache",
            "files": {
              "total": 5,
              "by_type": {
                ".md": 1,
                ".py": 4
              }
            },
            "lines_of_code": 1977,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "ConnectionError",
              "defaultdict",
              "functools",
              "asyncio",
              "logging",
              "threading",
              "TTLCache",
              "hashlib",
              "cachetools",
              "dataclasses",
              "redis",
              "dataclass",
              "Counter",
              "Lock",
              "prometheus_client",
              "structlog",
              "collections",
              "typing",
              "Callable",
              "OrderedDict",
              "json",
              "Any",
              "time",
              "weakref",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "facade",
              "factory"
            ]
          },
          {
            "name": "middleware",
            "path": "services/shared/middleware",
            "files": {
              "total": 25,
              "by_type": {
                ".py": 14,
                ".md": 2,
                ".pyc": 9
              }
            },
            "lines_of_code": 5633,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /service/discovery/info",
              "GET /health/ready",
              "GET /cache/metrics",
              "GET /service/discovery/all",
              "GET /health/live",
              "GET /health/comprehensive",
              "GET /protected",
              "GET /metrics",
              "GET /high-security",
              "GET /health",
              "GET /service/discovery/peers",
              "POST /cache/warm",
              "GET /health/detailed",
              "DELETE /cache/clear"
            ],
            "dependencies": [
              "traceback",
              "wraps",
              "HTTPBearer",
              "uuid",
              "defaultdict",
              "SecurityHeadersMiddleware",
              "RequestValidationError",
              "BaseHTTPMiddleware",
              "functools",
              "asyncio",
              "logging",
              "threading",
              "psutil",
              "re",
              "deque",
              "jwt",
              "ConstitutionalValidationMiddleware",
              "HTTPException",
              "sqlalchemy",
              "JSONResponse",
              "hashlib",
              "dataclasses",
              "ACGSServiceRegistry",
              "socket",
              "AsyncSession",
              "Awaitable",
              "fastapi",
              "Enum",
              "redis",
              "gc",
              "dataclass",
              "Request",
              "text",
              "PrometheusMiddleware",
              "base64",
              "Optional",
              "contextlib",
              "Counter",
              "datetime",
              "AsyncSessionLocal",
              "prometheus_client",
              "asynccontextmanager",
              "typing",
              "collections",
              "Callable",
              "OrderedDict",
              "OptimizedCacheManager",
              "asyncpg",
              "json",
              "enum",
              "localhost:8016",
              "Any",
              "service",
              "CORSMiddleware",
              "TrustedHostMiddleware",
              "time",
              "httpx",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "facade",
              "decorator"
            ]
          },
          {
            "name": "tests",
            "path": "services/shared/tests",
            "files": {
              "total": 10,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".pyc": 6
              }
            },
            "lines_of_code": 1601,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "pytest",
              "AsyncSession",
              "uuid",
              "MagicMock",
              "TestClient",
              "IntegrityError",
              "datetime",
              "text",
              "app",
              "AsyncMock",
              "TenantIsolatedRedisClient",
              "time",
              "sqlalchemy"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "repositories",
            "path": "services/shared/repositories",
            "files": {
              "total": 3,
              "by_type": {
                ".md": 1,
                ".py": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 534,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "Tenant",
              "typing",
              "contextlib",
              "dataclasses",
              "and_",
              "AsyncSession",
              "uuid",
              "datetime",
              "Select",
              "dataclass",
              "Any",
              "Base",
              "text",
              "sqlalchemy",
              "TenantUser",
              "contextmanager"
            ],
            "communication_patterns": [
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "factory",
              "dependency_injection",
              "mvc"
            ]
          },
          {
            "name": "interfaces",
            "path": "services/shared/interfaces",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 1,
                ".md": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 9,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": [
              "dependency_injection"
            ]
          },
          {
            "name": "models",
            "path": "services/shared/models",
            "files": {
              "total": 7,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".pyc": 3
              }
            },
            "lines_of_code": 1335,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "uuid",
              "asyncio",
              "logging",
              "declared_attr",
              "sqlalchemy",
              "declarative_mixin",
              "dataclasses",
              "Enum",
              "redis",
              "dataclass",
              "datetime",
              "UUID",
              "numpy",
              "typing",
              "json",
              "enum",
              "Base",
              "Any",
              "time"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "__pycache__",
            "path": "services/shared/__pycache__",
            "files": {
              "total": 17,
              "by_type": {
                ".pyc": 17
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "auth",
            "path": "services/shared/auth",
            "files": {
              "total": 8,
              "by_type": {
                ".py": 4,
                ".md": 1,
                ".pyc": 3
              }
            },
            "lines_of_code": 1280,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "wraps",
              "HTTPBearer",
              "hmac",
              "pydantic",
              "uuid",
              "functools",
              "asyncio",
              "BaseModel",
              "logging",
              "auth-service:8000",
              "jwt",
              "HTTPException",
              "Session",
              "hashlib",
              "TenantAuthenticationService",
              "dataclasses",
              "AsyncSession",
              "CryptContext",
              "fastapi",
              "Enum",
              "redis",
              "dataclass",
              "it",
              "base64",
              "MultiTenantJWTHandler",
              "Dict",
              "datetime",
              "or",
              "TenantContext",
              "typing",
              "json",
              "enum",
              "Any",
              "pathlib",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "facade",
              "decorator"
            ]
          },
          {
            "name": "database",
            "path": "services/shared/database",
            "files": {
              "total": 7,
              "by_type": {
                ".md": 1,
                ".py": 5,
                ".pyc": 1
              }
            },
            "lines_of_code": 2259,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "uuid",
              "asyncio",
              "logging",
              "threading",
              "deque",
              "sqlalchemy",
              "declarative_mixin",
              "hashlib",
              "AsyncGenerator",
              "dataclasses",
              "AsyncSession",
              "redis",
              "dataclass",
              "Column",
              "contextlib",
              "PoolConnectionProxy",
              "os",
              "random",
              "datetime",
              "UUID",
              "asynccontextmanager",
              "typing",
              "collections",
              "asyncpg",
              "Any",
              "time",
              "Connection"
            ],
            "communication_patterns": [
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "infrastructure",
            "path": "services/shared/infrastructure",
            "files": {
              "total": 12,
              "by_type": {
                ".py": 6,
                ".md": 1,
                ".pyc": 5
              }
            },
            "lines_of_code": 3063,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "ABC",
              "uuid",
              "asyncio",
              "logging",
              "OutboxEntry",
              "EventPublisher",
              "DomainEvent",
              "dataclasses",
              "Enum",
              "dataclass",
              "PostgreSQLUnitOfWork",
              "Specification",
              "contextlib",
              "EntityId",
              "abc",
              "datetime",
              "UUID",
              "EventStore",
              "asynccontextmanager",
              "typing",
              "CONSTITUTIONAL_HASH",
              "asyncpg",
              "AsyncIterator",
              "OutboxPattern",
              "json",
              "enum",
              "Any",
              "AsyncContextManager"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "facade",
              "factory",
              "dependency_injection"
            ]
          },
          {
            "name": "architecture",
            "path": "services/shared/architecture",
            "files": {
              "total": 0,
              "by_type": {}
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "explainability",
            "path": "services/shared/explainability",
            "files": {
              "total": 5,
              "by_type": {
                ".py": 4,
                ".md": 1
              }
            },
            "lines_of_code": 2440,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "HybridExplainabilityEngine",
              "shap",
              "asyncio",
              "logging",
              "lime",
              "LIMEExplainer",
              "AlertingSystem",
              "hashlib",
              "AuditLogger",
              "dataclasses",
              "Enum",
              "dataclass",
              "SHAPExplainer",
              "datetime",
              "numpy",
              "typing",
              "Callable",
              "enum",
              "Any",
              "ExplainerType"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "mvc",
              "singleton"
            ]
          },
          {
            "name": "agents",
            "path": "services/shared/agents",
            "files": {
              "total": 17,
              "by_type": {
                ".py": 8,
                ".md": 1,
                ".pyc": 8
              }
            },
            "lines_of_code": 6613,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "ABC",
              "uuid",
              "defaultdict",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "EnhancedAuditLogger",
              "AgentConfig",
              "operator",
              "AgentCommunication",
              "dataclasses",
              "Enum",
              "dataclass",
              "APGFEventPublisher",
              "APGFOrchestrator",
              "AgentCapability",
              "abc",
              "datetime",
              "aiohttp",
              "SafeToolExecutor",
              "typing",
              "collections",
              "Callable",
              "A2AProtocolAdapter",
              "ToolExecutionRequest",
              "ToolRouter",
              "json",
              "enum",
              "Any",
              "time",
              "EnhancedInputValidator"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc",
              "observer"
            ]
          },
          {
            "name": "exceptions",
            "path": "services/shared/exceptions",
            "files": {
              "total": 3,
              "by_type": {
                ".py": 1,
                ".md": 1,
                ".pyc": 1
              }
            },
            "lines_of_code": 9,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "templates",
            "path": "services/shared/templates",
            "files": {
              "total": 12,
              "by_type": {
                ".md": 5,
                ".py": 6,
                ".backup": 1
              }
            },
            "lines_of_code": 2985,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /metrics",
              "GET /health",
              "GET /"
            ],
            "dependencies": [
              "uuid",
              "pydantic",
              "services",
              "RequestValidationError",
              "functools",
              "BaseModel",
              "asyncio",
              "app",
              "declared_attr",
              "logging",
              "BaseACGSModel",
              "sqlalchemy",
              "get_settings",
              "declarative_mixin",
              "JSONResponse",
              "SimpleTenantMixin",
              "AsyncSession",
              "BaseSettings",
              "Enum",
              "fastapi",
              "Column",
              "contextlib",
              "validator",
              "event",
              "datetime",
              "UUID",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "lru_cache",
              "APIRouter",
              "TestClient",
              "enum",
              "Base",
              "Any",
              "JSON",
              "declarative_base",
              "CORSMiddleware",
              "TrustedHostMiddleware",
              "time",
              "FastAPI",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "repository",
              "dependency_injection",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade"
            ]
          },
          {
            "name": "async_processing",
            "path": "services/shared/async_processing",
            "files": {
              "total": 4,
              "by_type": {
                ".md": 1,
                ".py": 3
              }
            },
            "lines_of_code": 1377,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "uuid",
              "defaultdict",
              "asyncio",
              "psutil",
              "deque",
              "dataclasses",
              "ACGSRedisClient",
              "Enum",
              "dataclass",
              "contextlib",
              "random",
              "heapq",
              "datetime",
              "structlog",
              "asynccontextmanager",
              "collections",
              "typing",
              "Callable",
              "enum",
              "Any",
              "time"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "facade",
              "factory"
            ]
          },
          {
            "name": "service_mesh",
            "path": "services/shared/service_mesh",
            "files": {
              "total": 27,
              "by_type": {
                ".py": 13,
                ".md": 1,
                ".pyc": 13
              }
            },
            "lines_of_code": 6243,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "localhost:8007",
              "localhost:8009",
              "localhost:8011",
              "asyncio",
              "retry",
              "logging",
              "GovernanceSessionManager",
              "operator",
              "localhost:8004",
              "LoadBalancer",
              "hashlib",
              "PerformanceMonitor",
              "dataclasses",
              "ACGSServiceClient",
              "localhost:8001",
              "ServiceUnavailableError",
              "Enum",
              "dataclass",
              "ServiceDiscovery",
              "localhost:8006",
              "contextlib",
              "random",
              "ServiceConfig",
              "datetime",
              "validate_response",
              "LoadBalancingStrategy",
              "AdvancedRedisClient",
              "get_performance_monitor",
              "localhost:8012",
              "statistics",
              "asdict",
              "typing",
              "asynccontextmanager",
              "localhost:8005",
              "format_response",
              "Callable",
              "localhost:8003",
              "get_service_registry",
              "asyncpg",
              "json",
              "localhost:8010",
              "enum",
              "CircuitBreaker",
              "Any",
              "ServiceType",
              "localhost:8008",
              "ServiceInstance",
              "FailoverConfig",
              "time",
              "tenacity",
              "httpx",
              "FailoverManager",
              "os",
              "localhost:8000"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "mvc",
              "singleton",
              "service_layer"
            ]
          },
          {
            "name": "resource_management",
            "path": "services/shared/resource_management",
            "files": {
              "total": 6,
              "by_type": {
                ".py": 3,
                ".md": 1,
                ".pyc": 2
              }
            },
            "lines_of_code": 1559,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "QueuePool",
              "defaultdict",
              "uuid",
              "asyncio",
              "logging",
              "threading",
              "psutil",
              "sqlalchemy",
              "tracemalloc",
              "dataclasses",
              "ACGSRedisClient",
              "Enum",
              "gc",
              "resource",
              "dataclass",
              "create_engine",
              "contextlib",
              "datetime",
              "UUID",
              "structlog",
              "collections",
              "typing",
              "Callable",
              "enum",
              "Any",
              "time"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory"
            ]
          },
          {
            "name": "service_clients",
            "path": "services/shared/service_clients",
            "files": {
              "total": 4,
              "by_type": {
                ".py": 3,
                ".md": 1
              }
            },
            "lines_of_code": 293,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "localhost:8080",
              "typing",
              "ABC",
              "each",
              "pydantic",
              "BaseServiceClient",
              "localhost:8001",
              "localhost:8002",
              "abc",
              "asyncio",
              "BaseModel",
              "Any",
              "logging",
              "localhost:8016",
              "httpx",
              "localhost:8004",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "rollback",
            "path": "services/shared/rollback",
            "files": {
              "total": 2,
              "by_type": {
                ".md": 1,
                ".py": 1
              }
            },
            "lines_of_code": 332,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "typing",
              "dataclasses",
              "Callable",
              "uuid",
              "Enum",
              "datetime",
              "enum",
              "dataclass",
              "logging",
              "TYPE_CHECKING"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 50,
          "total_lines": 124622,
          "total_files": 512,
          "average_lines_per_service": 2492.44,
          "average_files_per_service": 10.24,
          "constitutional_compliance_rate": 0.94
        }
      },
      "__pycache__": {
        "service_count": 0,
        "services": [],
        "category_complexity": {
          "total_services": 0,
          "total_lines": 0,
          "total_files": 0,
          "average_lines_per_service": 0.0,
          "average_files_per_service": 0.0,
          "constitutional_compliance_rate": 0.0
        }
      },
      "ai-governance": {
        "service_count": 1,
        "services": [
          {
            "name": "pocketflow-rust",
            "path": "services/ai-governance/pocketflow-rust",
            "files": {
              "total": 13,
              "by_type": {
                ".md": 5,
                ".backup": 1,
                ".toml": 1,
                ".rs": 6
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          }
        ],
        "category_complexity": {
          "total_services": 1,
          "total_lines": 0,
          "total_files": 13,
          "average_lines_per_service": 0.0,
          "average_files_per_service": 13.0,
          "constitutional_compliance_rate": 0.0
        }
      },
      "platform_services": {
        "service_count": 15,
        "services": [
          {
            "name": "blackboard",
            "path": "services/platform_services/blackboard",
            "files": {
              "total": 2,
              "by_type": {
                ".md": 1,
                ".py": 1
              }
            },
            "lines_of_code": 294,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/conflicts",
              "GET /api/v1/status",
              "GET /",
              "GET /api/v1/tasks",
              "GET /api/v1/agents",
              "POST /api/v1/knowledge",
              "POST /api/v1/agents",
              "POST /api/v1/tasks",
              "GET /constitutional/validate",
              "GET /api/v1/knowledge",
              "GET /health"
            ],
            "dependencies": [
              "typing",
              "pydantic",
              "fastapi",
              "datetime",
              "BaseModel",
              "Any",
              "logging",
              "CORSMiddleware",
              "time",
              "uvicorn",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "api_gateway",
            "path": "services/platform_services/api_gateway",
            "files": {
              "total": 38,
              "by_type": {
                ".backup": 3,
                ".md": 12,
                ".txt": 1,
                ".py": 20,
                ".pyc": 2
              }
            },
            "lines_of_code": 7179,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /auth/logout",
              "POST /gateway/admin/reload-policies",
              "GET /auth/health",
              "GET /gateway/health/detailed",
              "GET /",
              "POST /auth/admin/users",
              "GET /metrics",
              "POST /auth/login",
              "POST /gateway/admin/refresh-services",
              "GET /gateway/health",
              "GET /gateway/config",
              "POST /auth/validate",
              "GET /health",
              "GET /auth/me",
              "GET /gateway/metrics"
            ],
            "dependencies": [
              "GatewayService",
              "ServiceRouter",
              "SecurityPolicyEngine",
              "RequestValidationError",
              "BaseHTTPMiddleware",
              "asyncio",
              "jwt",
              "JSONResponse",
              "declarative_mixin",
              "AsyncSession",
              "ConstitutionalComplianceMiddleware",
              "redis",
              "LoadBalancerService",
              "UUID",
              "if",
              "MetricsCollector",
              "bcrypt",
              "enum",
              "TrustedHostMiddleware",
              "time",
              "httpx",
              "HTTPBearer",
              "uuid",
              "SecurityHeadersMiddleware",
              "functools",
              "auth-service:8000",
              "HTTPException",
              "BaseSettings",
              "Request",
              "random",
              "validator",
              "Counter",
              "datetime",
              "policy-governance-service:8005",
              "aiohttp",
              "localhost:3000",
              "prometheus_client",
              "uvicorn",
              "Any",
              "JSON",
              "AuthenticationMiddleware",
              "List",
              "ServiceDiscoveryService",
              "sys",
              "secrets",
              "patch",
              "pydantic",
              "app",
              "RateLimitingMiddleware",
              "BaseACGSModel",
              "sqlalchemy",
              "get_settings",
              "SimpleTenantMixin",
              "constitutional-ai-service:8001",
              "Enum",
              "dataclass",
              "Optional",
              "contextlib",
              "asynccontextmanager",
              "typing",
              "GatewayConfig",
              "lru_cache",
              "APIRouter",
              "errors",
              "Base",
              "CORSMiddleware",
              "FastAPI",
              "integrity-service:8002",
              "BaseModel",
              "RoutingService",
              "logging",
              "declared_attr",
              "dataclasses",
              "governance-synthesis-service:8004",
              "fastapi",
              "ForeignKey",
              "Column",
              "RoutingDecision",
              "event",
              "Depends",
              "pytest",
              "Callable",
              "formal-verification-service:8006",
              "TestClient",
              "RequestLoggingMiddleware",
              "json",
              "declarative_base",
              "pathlib",
              "shared",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade",
              "service_layer"
            ]
          },
          {
            "name": "integrity",
            "path": "services/platform_services/integrity",
            "files": {
              "total": 106,
              "by_type": {
                ".backup": 3,
                ".md": 19,
                ".py": 63,
                ".txt": 1,
                ".example": 1,
                "": 4,
                ".prod": 1,
                ".ini": 1,
                ".json": 1,
                ".tag": 1,
                ".pyc": 9,
                ".sql": 2
              }
            },
            "lines_of_code": 19744,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/integrity/constitutional-hash",
              "GET /api/v1/integrity/status",
              "POST /auto-sign-new-entries",
              "POST /",
              "POST /merkle/verify",
              "GET /{rule_id}",
              "GET /merkle-tree/{tree_id}/root",
              "GET /metrics",
              "GET /policy-rules/{rule_id}/verify",
              "GET /exports/{export_id}/data",
              "POST /emergency-seal",
              "POST /exports/{export_id}/verify",
              "PUT /{rule_id}/status",
              "DELETE /exports/{export_id}",
              "DELETE /{rule_id}",
              "POST /events",
              "GET /exports/{export_id}",
              "POST /verify-signature",
              "GET /api/v1/constitutional/validate",
              "POST /audit-logs/batch-verify",
              "GET /keys/{key_id}",
              "POST /merkle/build",
              "GET /chain-integrity/audit-logs",
              "GET /api/v1/status",
              "POST /timestamp/verify",
              "GET /system-integrity-report",
              "GET /verify-integrity",
              "DELETE /keys/{key_id}",
              "POST /verify",
              "GET /performance-metrics",
              "GET /audit-logs/{log_id}/verify",
              "POST /merkle/proof",
              "POST /sign",
              "POST /verify-timestamp",
              "POST /keys",
              "POST /api/v1/integrity/validate",
              "GET /{log_id}",
              "POST /timestamp",
              "GET /",
              "GET /api/v1/integrity/info",
              "POST /policy-rules/{rule_id}/sign",
              "GET /exports",
              "POST /hash",
              "POST /audit-logs/{log_id}/sign",
              "GET /exports/{export_id}/summary",
              "GET /keys",
              "GET /health/constitutional",
              "POST /keys/{key_id}/rotate",
              "PUT /{rule_id}",
              "GET /health"
            ],
            "dependencies": [
              "acge-model-service.acgs-shared.svc.cluster.local:8080",
              "error_handling",
              "io",
              "SignatureVerification",
              "RequestValidationError",
              "asyncio",
              "HealthCheckResponse",
              "JSONResponse",
              "AsyncGenerator",
              "info",
              "AsyncSession",
              "default_backend",
              "redis",
              "psycopg2",
              "func",
              "UUID",
              "statistics",
              "and_",
              "AuditLog",
              "CONSTITUTIONAL_HASH",
              "asyncpg",
              "sessionmaker",
              "enum",
              "TrustedHostMiddleware",
              "time",
              "httpx",
              "uuid",
              "api_models",
              "functools",
              "TimestampToken",
              "ResearchDataExport",
              "InvalidSignature",
              "operator",
              "BaseSettings",
              "from",
              "IntegrityReport",
              "Path",
              "os",
              "JSONB",
              "random",
              "validator",
              "Counter",
              "datetime",
              "localhost:3000",
              "prometheus_client",
              "uvicorn",
              "main",
              "validation_helpers",
              "require_internal_service",
              "padding",
              "Any",
              "explainability_engine",
              "List",
              "sys",
              "traceback",
              "secrets",
              "pydantic",
              "ThreadedConnectionPool",
              "app",
              "get_current_user_placeholder",
              "issues",
              "BaseACGSModel",
              "sqlalchemy",
              "get_async_db",
              "get_settings",
              "csv",
              "in",
              "crud",
              "Enum",
              "dataclass",
              "router",
              "models",
              "set_audit_chain",
              "Optional",
              "contextlib",
              "middleware",
              "persistent_audit_logger",
              "key_manager",
              "asynccontextmanager",
              "typing",
              "lru_cache",
              "APIRouter",
              "Base",
              "CORSMiddleware",
              "CryptoKey",
              "FastAPI",
              "hmac",
              "ec",
              "github_router",
              "BaseModel",
              "logging",
              "PolicyRule",
              "hashlib",
              "requests",
              "dataclasses",
              "hashes",
              "handle_validation_errors",
              "fastapi",
              "require_integrity_admin",
              "ThreadPoolExecutor",
              "Column",
              "validation_models",
              "TenantServiceClient",
              "base64",
              "cryptography",
              "CryptographicIntegrityService",
              "middleware_integration",
              "integrity_verifier",
              "PersistentAuditLogger",
              "AsyncMock",
              "timestamp_manager",
              "crypto_service",
              "structlog",
              "localhost:8080",
              "PGPAssuranceService",
              "pytest",
              "ErrorCode",
              "TestClient",
              "json",
              "add_production_middleware",
              "declarative_base",
              "SignatureRequest",
              "pathlib",
              "select"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "facade"
            ]
          },
          {
            "name": "adaptive-learning",
            "path": "services/platform_services/adaptive-learning",
            "files": {
              "total": 9,
              "by_type": {
                ".txt": 1,
                ".md": 4,
                ".py": 4
              }
            },
            "lines_of_code": 1873,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [
              "LogisticRegression",
              "ADWIN",
              "joblib",
              "pydantic",
              "uuid",
              "kafka",
              "defaultdict",
              "StandardScaler",
              "opacus",
              "make_vec_env",
              "accuracy_score",
              "BaseModel",
              "asyncio",
              "logging",
              "KafkaError",
              "sqlalchemy",
              "hashlib",
              "dataclasses",
              "DataLoader",
              "KafkaProducer",
              "AsyncSession",
              "stable_baselines3",
              "Enum",
              "redis",
              "dataclass",
              "DummyVecEnv",
              "RandomForestClassifier",
              "mlflow",
              "apache_beam",
              "AdaptiveRandomForestClassifier",
              "Path",
              "torch",
              "Optional",
              "PPO",
              "Dict",
              "datetime",
              "base",
              "river",
              "FixedWindows",
              "pickle",
              "numpy",
              "typing",
              "pandas",
              "BatchMemoryManager",
              "PipelineOptions",
              "AfterWatermark",
              "collections",
              "json",
              "gym",
              "enum",
              "PrivacyEngine",
              "Accuracy",
              "pathlib",
              "select"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "message_queue",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "__pycache__",
            "path": "services/platform_services/__pycache__",
            "files": {
              "total": 1,
              "by_type": {
                ".pyc": 1
              }
            },
            "lines_of_code": 0,
            "has_constitutional_hash": false,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": []
          },
          {
            "name": "image-compliance",
            "path": "services/platform_services/image-compliance",
            "files": {
              "total": 18,
              "by_type": {
                "": 1,
                ".md": 6,
                ".txt": 1,
                ".py": 10
              }
            },
            "lines_of_code": 2379,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /generate",
              "GET /",
              "POST /audit",
              "POST /index",
              "GET /health"
            ],
            "dependencies": [
              "URL",
              "io",
              "diffusers",
              "pydantic",
              "uuid",
              "sentence_transformers",
              "opacus",
              "PIL",
              "BaseModel",
              "asyncio",
              "logging",
              "JSONResponse",
              "hashlib",
              "Image",
              "fastapi",
              "Enum",
              "celery",
              "BetterTransformer",
              "router",
              "base64",
              "Fernet",
              "torch",
              "get_tenant_context",
              "ImageGeneratorAgent",
              "StableDiffusionPipeline",
              "Optional",
              "random",
              "Dict",
              "cv2",
              "SentenceTransformer",
              "datetime",
              "open_clip",
              "AutoTokenizer",
              "uvicorn",
              "setup_error_handlers",
              "numpy",
              "transformers",
              "Celery",
              "typing",
              "CONSTITUTIONAL_HASH",
              "TenantContextMiddleware",
              "APIRouter",
              "ImageAuditRequest",
              "ORTModelForImageClassification",
              "EnhancedSecurityMiddleware",
              "json",
              "ImageAuditAgent",
              "enum",
              "CORSMiddleware",
              "time",
              "pipeline",
              "shared",
              "httpx",
              "FastAPI",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "coordinator",
            "path": "services/platform_services/coordinator",
            "files": {
              "total": 2,
              "by_type": {
                ".md": 1,
                ".py": 1
              }
            },
            "lines_of_code": 322,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/requests",
              "POST /api/v1/coordinate",
              "POST /api/v1/requests",
              "GET /api/v1/status",
              "GET /",
              "GET /api/v1/assignments",
              "GET /constitutional/validate",
              "POST /api/v1/assignments",
              "GET /api/v1/performance",
              "GET /health"
            ],
            "dependencies": [
              "typing",
              "pydantic",
              "fastapi",
              "datetime",
              "BaseModel",
              "Any",
              "logging",
              "CORSMiddleware",
              "time",
              "uvicorn",
              "FastAPI"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "mvc"
            ]
          },
          {
            "name": "authentication",
            "path": "services/platform_services/authentication",
            "files": {
              "total": 137,
              "by_type": {
                ".md": 21,
                ".py": 73,
                ".txt": 1,
                ".backup": 3,
                ".yaml": 2,
                ".acge": 1,
                ".prod": 1,
                ".example": 1,
                "": 1,
                ".pyc": 31,
                ".sql": 2
              }
            },
            "lines_of_code": 16977,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /callback",
              "GET /auth/enterprise/status",
              "GET /status",
              "POST /",
              "POST /api/v1/auth/login",
              "POST /backup-codes/regenerate",
              "GET /metrics",
              "GET /auth/sessions/status",
              "POST /enable",
              "POST /validate",
              "POST /api/v1/tenants",
              "PATCH /{agent_id}/status",
              "PUT /{key_id}",
              "POST /token/refresh",
              "GET /{agent_id}",
              "POST /authorize",
              "GET /auth/mfa/status",
              "GET /providers",
              "GET /users/me",
              "POST /link",
              "GET /api/v1/auth/status",
              "POST /setup",
              "GET /api/v1/auth/info",
              "DELETE /unlink/{provider}",
              "GET /csrf-cookie",
              "GET /usage/statistics",
              "POST /verify",
              "POST /token",
              "GET /{agent_id}/audit-logs",
              "GET /me",
              "POST /api/v1/auth/switch-tenant",
              "POST /api/v1/auth/token",
              "POST /callback",
              "GET /api/v1/auth/user-tenants",
              "GET /auth/security/intrusion/status",
              "POST /api/v1/auth/tenant-login",
              "POST /register",
              "POST /api/v1/auth/tenant-refresh",
              "POST /auth/mfa/setup",
              "GET /auth/oauth/providers",
              "GET /",
              "GET /auth/security/audit/summary",
              "PUT /{agent_id}",
              "POST /login",
              "DELETE /{key_id}",
              "POST /api/v1/auth/validate",
              "POST /{key_id}/revoke",
              "GET /{key_id}",
              "POST /logout",
              "POST /disable",
              "GET /health/constitutional",
              "GET /health",
              "GET /auth/api-keys/"
            ],
            "dependencies": [
              "acge-model-service.acgs-shared.svc.cluster.local:8080",
              "initialize_oauth_providers",
              "Agent",
              "defaultdict",
              "RequestValidationError",
              "io",
              "BaseHTTPMiddleware",
              "asyncio",
              "security_audit",
              "re",
              "pydantic_settings",
              "ModuleType",
              "jwt",
              "limiter",
              "JSONResponse",
              "html",
              "status",
              "AsyncGenerator",
              "AsyncSession",
              "JWTError",
              "redis",
              "cache_jwt_validation",
              "CONTENT_TYPE_LATEST",
              "prometheus_metrics",
              "InvalidTokenError",
              "UUID",
              "relationship",
              "selectinload",
              "TenantRepository",
              "and_",
              "bcrypt",
              "sessionmaker",
              "api",
              "enum",
              "localhost:8008",
              "TrustedHostMiddleware",
              "time",
              "InputValidator",
              "httpx",
              "SecurityEvent",
              "HTTPBearer",
              "RefreshToken",
              "uuid",
              "create_access_token",
              "functools",
              "parse_qs",
              "PBKDF2HMAC",
              "timedelta",
              "security_middleware",
              "auth-service:8000",
              "operator",
              "HTTPException",
              "fastapi_csrf_protect",
              "TenantAuthenticationService",
              "TenantCreateRequest",
              "BaseSettings",
              "from",
              "Request",
              "AgentCreate",
              "AgentService",
              "crud_refresh_token",
              "uuid4",
              "validator",
              "Counter",
              "TokenPayload",
              "datetime",
              "localhost:3000",
              "slowapi",
              "OAuth2PasswordRequestForm",
              "prometheus_client",
              "uvicorn",
              "api_key_manager",
              "pyotp",
              "works",
              "Any",
              "JSON",
              "settings",
              "List",
              "load_dotenv",
              "sys",
              "secrets",
              "pydantic",
              "app",
              "dotenv",
              "authorize_permissions",
              "verify_password",
              "Boolean",
              "BaseACGSModel",
              "sqlalchemy",
              "get_async_db",
              "get_settings",
              "get_password_hash",
              "get_user_id_from_request_optional",
              "deps",
              "crud",
              "AgentStatus",
              "jose",
              "Enum",
              "dataclass",
              "router",
              "models",
              "Optional",
              "contextlib",
              "UserService",
              "OAuth2PasswordBearer",
              "asynccontextmanager",
              "typing",
              "ApiKey",
              "acge_integration",
              "collections",
              "multi_tier_cache",
              "lru_cache",
              "APIRouter",
              "UserCreate",
              "crud_user",
              "types",
              "Base",
              "v1",
              "CORSMiddleware",
              "AsyncClient",
              "FastAPI",
              "update",
              "ipaddress",
              "mfa_service",
              "select",
              "your",
              "get_current_active_user",
              "CsrfProtect",
              "BaseModel",
              "ConfigDict",
              "urlencode",
              "logging",
              "hashlib",
              "dataclasses",
              "freezegun",
              "hashes",
              "get_db",
              "fastapi",
              "User",
              "Column",
              "base64",
              "localhost:8006",
              "freeze_time",
              "PlainTextResponse",
              "Dict",
              "TenantManagementService",
              "api_router",
              "config",
              "structlog",
              "Organization",
              "qrcode",
              "Depends",
              "localhost:8080",
              "pytest",
              "Limiter",
              "get_remote_address",
              "HTTPAuthorizationCredentials",
              "TestClient",
              "json",
              "declarative_base",
              "security",
              "pathlib",
              "shared",
              "runpy",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "facade",
              "service_layer"
            ]
          },
          {
            "name": "formal_verification",
            "path": "services/platform_services/formal_verification",
            "files": {
              "total": 5422,
              "by_type": {
                ".ini": 4,
                ".py": 3273,
                ".md": 16,
                ".txt": 67,
                ".pyc": 919,
                ".backup": 27,
                ".cfg": 2,
                ".tag": 1,
                "": 146,
                ".test": 1,
                ".csh": 1,
                ".fish": 1,
                ".ps1": 1,
                ".pyi": 280,
                ".typed": 25,
                ".so": 136,
                ".pxd": 20,
                ".0": 4,
                ".apache2": 1,
                ".mit": 1,
                ".pem": 2,
                ".apache": 1,
                ".bsd": 1,
                ".gz": 4,
                ".png": 7,
                ".bz2": 4,
                ".a99": 2,
                ".b99": 2,
                ".15": 1,
                ".h": 58,
                ".rst": 1,
                ".a": 2,
                ".csv": 30,
                ".build": 6,
                ".pyx": 11,
                ".npy": 11,
                ".npz": 22,
                ".c": 6,
                ".template": 1,
                ".f": 24,
                ".f90": 61,
                ".pyf": 7,
                ".f95": 1,
                ".inc": 1,
                ".fits": 1,
                ".pkl": 1,
                ".cpp": 1,
                ".pc": 1,
                ".json": 1,
                ".dat": 26,
                ".sav": 47,
                ".wav": 22,
                ".nc": 3,
                ".ani": 1,
                ".arff": 16,
                ".mat": 110
              }
            },
            "lines_of_code": 1487508,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /items/{item_id}",
              "GET /users/me/items/",
              "GET /users/",
              "POST /login",
              "GET /constitutional-compliance/{policy_hash}",
              "POST /verify",
              "POST /items/",
              "POST /files/",
              "POST /send-notification/{email}",
              "POST /robustness-test",
              "GET /metrics",
              "POST /uploadfile/",
              "DELETE /items/{item_id}",
              "PATCH /items/",
              "GET /users/me",
              "GET /items/",
              "GET /health",
              "PUT /items/{item_id}"
            ],
            "dependencies": [
              "PytestUnraisableExceptionWarning",
              "ProxyHeadersMiddleware",
              "Output",
              "squeeze_element",
              "get_handler_name",
              "chebfit",
              "exact_1d_array",
              "SkipTest",
              "cached_property",
              "ECLexer",
              "ColorError",
              "absolutepath",
              "winsorize",
              "freqs",
              "wait_none",
              "FormData",
              "filesystem",
              "gdtrc",
              "info",
              "http_client",
              "_dtype",
              "_data_matrix",
              "TestReport",
              "proj3d",
              "UnionFind",
              "test",
              "variation",
              "ROUNDED",
              "EXTENSION_SUFFIXES",
              "BGLU",
              "binomtest",
              "dot",
              "_ppoly",
              "extending",
              "_status_message",
              "BasePath",
              "irfft",
              "BDF",
              "IS_MUSL",
              "count",
              "degree_sequence_tree",
              "_as_pairs",
              "prepare_class",
              "DiGraph",
              "elliprc",
              "ifilter",
              "get_cancelled_exc_class",
              "get_info_string",
              "_calc_score",
              "hermint",
              "get_fpu_mode",
              "pexpect",
              "linecache",
              "CensoredData",
              "_ArrayLike",
              "VectorFunction",
              "RegexHighlighter",
              "Legendre",
              "contents",
              "ssl_",
              "create_schema_validator",
              "fmin",
              "_distribution_names",
              "GaussKronrodQuadrature",
              "LUAU_BUILTINS",
              "HTTPAdapter",
              "contextvars",
              "_find_binary_writer",
              "pava",
              "each",
              "TrioBackend",
              "curio_running",
              "WINDOWS_1255_HEBREW_MODEL",
              "Cython",
              "_kolmogorov_smirnov",
              "all",
              "timedelta",
              "decimal",
              "safe_isclass",
              "_VoidDTypeLike",
              "_typeshed",
              "branchings",
              "HIGH_SCOPES",
              "kron",
              "PyPI",
              "BaseSettings",
              "__future__",
              "ConfigParser",
              "wrap_file",
              "present",
              "Request",
              "_FloatingCodes",
              "h2",
              "issubsctype",
              "FixtureFunctionDefinition",
              "Choice",
              "PydanticForbiddenQualifier",
              "Condition",
              "limited_api2",
              "RK23",
              "Region",
              "right_d_threshold_sequence",
              "GB2312DistributionAnalysis",
              "islice",
              "AnalyzeTypeContext",
              "_hierarchy",
              "_linprog_rs",
              "current_time",
              "pty",
              "_get_nan",
              "_DTypeLikeObject",
              "Arrayterator",
              "_survival",
              "OAuth2PasswordRequestForm",
              "sqrt",
              "EMPTY_PARAMETERSET_OPTION",
              "spence",
              "inv",
              "HessianUpdateStrategy",
              "_MultiCommand",
              "APIKey",
              "situation",
              "_output_len",
              "write",
              "NumPyLexer",
              "is_k_edge_connected",
              "just",
              "calendar",
              "convert_node_labels_to_integers",
              "pyparsing",
              "cache_from_source",
              "solve_continuous_lyapunov",
              "_vode",
              "FileType",
              "registry",
              "RawConfigParser",
              "stoer_wagner",
              "connected_components",
              "wraps",
              "isclose",
              "constants",
              "minimum_edge_cut",
              "_iter_chunked",
              "_copy_cookie_jar",
              "NetworkXException",
              "_basic",
              "is_generic_alias",
              "np_random_state",
              "dotenv",
              "confirmation_option",
              "_sum_finite",
              "TASK_STATUS_IGNORED",
              "maximum_spanning_arborescence",
              "admin",
              "_data",
              "helmert",
              "_filters",
              "line_search",
              "node_disjoint_paths",
              "build_wheel_pep517",
              "overload",
              "recfromcsv",
              "retry_any",
              "PydanticCustomError",
              "levy",
              "_hausdorff",
              "complete_bipartite_graph",
              "PythonLexer",
              "EndOfStream",
              "ceil",
              "stdlib_pkgs",
              "csgraph_from_dense",
              "PydanticExperimentalWarning",
              "savemat",
              "centroid",
              "PluggyTeardownRaisedWarning",
              "ClientDisconnect",
              "_BoolCodes",
              "_UFunc_Nin2_Nout2",
              "kaiser_atten",
              "_pocketfft",
              "ExceptionMiddleware",
              "get_all_type_hints",
              "open_process",
              "_minimize_trustregion_exact",
              "sctypeDict",
              "hermfit",
              "schur",
              "UsageError",
              "data",
              "AsyncIterator",
              "fullapi_hash",
              "new_class",
              "MatrixRankWarning",
              "codecs",
              "BaseGraphTester",
              "inc2_cfloat_struct",
              "isfile",
              "_linprog_highs",
              "Pipe",
              "Group",
              "MBCSGroupProber",
              "one",
              "getuseblocks",
              "Headers",
              "ByteReceiveStream",
              "TypedAttributeLookupError",
              "GetJsonSchemaFunction",
              "Hashable",
              "TaskGroup",
              "CharSetGroupProber",
              "minkowski_distance",
              "random_internet_as_graph",
              "routing",
              "IncEx",
              "choice",
              "NsResolver",
              "CacheEntry",
              "getuid",
              "combinations_with_replacement",
              "MODULES",
              "_ELIMITS",
              "Token",
              "method",
              "_hits_scipy",
              "num_jac",
              "mathieu_odd_coef",
              "InstallRequirement",
              "requests",
              "FoundCandidates",
              "ModelField",
              "StringBuilder",
              "TestDiGraph",
              "LazyLoader",
              "mmwrite",
              "uts46data",
              "base64",
              "TextIOWrapper",
              "sparray",
              "ImageGrid",
              "Function",
              "Source",
              "TestMultiDiGraph",
              "pydantic_encoder",
              "is",
              "filescompleter",
              "modularitymatrix",
              "_morphology",
              "DEFAULT_MAX_INCOMPLETE_EVENT_SIZE",
              "Color",
              "difflib",
              "zipfile",
              "_voronoi",
              "LinearOperator",
              "token_hex",
              "ParamSpec",
              "box",
              "get_bool_opt",
              "_PluggyPlugin",
              "Socks5Connection",
              "prod",
              "AttrDict",
              "IS_WASM",
              "ExceptionInfo",
              "FileCache",
              "ConfigError",
              "ConversionWarning",
              "CookieJar",
              "Code",
              "log_ndtr",
              "savehist",
              "json",
              "slowdown",
              "RaisesGroup",
              "LineCollection",
              "fft",
              "direct_url_as_pep440_direct_reference",
              "c_char",
              "JSONHighlighter",
              "pascal",
              "CacheController",
              "is_body_allowed_for_status_code",
              "hermgauss",
              "_UnionGenericAlias",
              "describe",
              "to",
              "kruskal",
              "_validate_int",
              "add_docstring",
              "__doc__",
              "kurtosistest",
              "ZoomFFT",
              "complete",
              "default_ssl_context",
              "SparseABC",
              "make_interp_spline",
              "UNIXDatagramPacketType",
              "laggrid3d",
              "lanczos",
              "_distributor_init",
              "APIKeyCookie",
              "ConnectionType",
              "status",
              "assert_allclose",
              "python_implementation",
              "add_newdocs",
              "ansicolors",
              "dict_to_numpy_array",
              "checkpoint",
              "root",
              "win32",
              "ReprExceptionInfo",
              "Lexer",
              "chi2_contingency",
              "LogmExactlySingularWarning",
              "_multicall",
              "BuiltinFunctionType",
              "limited_api_latest",
              "IPv4Address",
              "AutoBackend",
              "isclass",
              "LiteralString",
              "NetworkXNoPath",
              "uvloop_setup",
              "odeint",
              "DelimitedList",
              "unicode_set",
              "CuPy",
              "FileLock",
              "InvalidSpecifier",
              "CONVERTOR_TYPES",
              "sctypes",
              "differential_evolution",
              "maximum_flow",
              "UUID8",
              "JsonWrapper",
              "stdtr",
              "Base64Str",
              "is_valid_dm",
              "make_xp_test_case",
              "NullHighlighter",
              "STDOUT",
              "Parameter",
              "isotonic_regression",
              "safeformat",
              "RankWarning",
              "ifft",
              "GenericBeforeBaseModelWarning",
              "cos",
              "ConnectionInterface",
              "iqr",
              "URLError",
              "abstractmethod",
              "ExtraValues",
              "_ccallback_c",
              "lombscargle",
              "getstatementrange_ast",
              "_indentation",
              "validate_str_is_valid_iana_tz",
              "NDArray",
              "lagroots",
              "svdvals",
              "BOM_UTF8",
              "CythonLexer",
              "regex",
              "GetterDict",
              "importlib_resources",
              "metrics",
              "X509",
              "agm",
              "show_config",
              "hermmulx",
              "_LongLongCodes",
              "TypedAttributeSet",
              "getlocation",
              "HTTPBasicCredentials",
              "minimize_scalar",
              "CodingStateMachine",
              "Option",
              "_Plugin",
              "partial",
              "suppress_warnings",
              "MonkeyPatch",
              "tostring",
              "_dop",
              "pypocketfft",
              "UninstallPathSet",
              "create_model_field",
              "_funm_loops",
              "__all__",
              "hermeadd",
              "rmbadname",
              "itsdangerous",
              "sklearn",
              "ISO_8859_7_GREEK_MODEL",
              "BaseMultiGraphTester",
              "ImportPathMismatchError",
              "mechanism",
              "ConstitutionalValidator",
              "_superlu",
              "Data",
              "brunnermunzel",
              "_diff_text",
              "StreamingResponse",
              "not_implemented_for",
              "AsyncResource",
              "ast",
              "_DTypeLikeBytes",
              "isdtype",
              "modified_dogleg",
              "IntEnum",
              "TypeIs",
              "bool_",
              "optparse",
              "parse_wheel",
              "TOMLDecodeError",
              "as_array",
              "toml",
              "ABCPolyBase",
              "jsonable_encoder",
              "raw_terminal",
              "complete_graph",
              "_kmeans",
              "GaussLegendreQuadrature",
              "_raise_warning",
              "scikits",
              "get_running_tasks",
              "AdjacentTempDirectory",
              "HIDDEN_PARAM",
              "rewrite",
              "nsum",
              "Inspect",
              "kolmogi",
              "PytestAssertRewriteWarning",
              "minimum_branching",
              "builtins",
              "outcomes",
              "_FunctionWrapper",
              "SerializationInfo",
              "_sputils",
              "matrix_rank",
              "edit",
              "get_close_matches",
              "bool",
              "ElementTree",
              "_DTypeLikeBool",
              "StandardDataclass",
              "bz2",
              "EUCKRProber",
              "_core",
              "IoLexer",
              "catch_warnings",
              "make_str",
              "UUID3",
              "is_cupy_namespace",
              "eye_array",
              "Morsel",
              "OpenIdConnect",
              "write_edgelist",
              "z3num",
              "socks",
              "Default",
              "clarkson_woodruff_transform",
              "rosen_hess_prod",
              "ndindex",
              "_mstats_basic",
              "_UInt32Codes",
              "Graph",
              "running_on_ci",
              "ObjectSendStream",
              "linalg",
              "SocketType",
              "Infinity",
              "MatReadError",
              "STYLES",
              "loop_first",
              "AbstractProvider",
              "myfunc",
              "urllib",
              "make_command",
              "windll",
              "IPv6Address",
              "get_subprocess",
              "LuaLexer",
              "MockCoreSchema",
              "_special_funcs",
              "Decimal",
              "MissingModule",
              "autoclass",
              "validate_call",
              "annotated_types",
              "chain",
              "DummyArray",
              "FrameSummary",
              "assert_no_overwrite",
              "raise_from",
              "invalidate_caches",
              "_funcs",
              "USER_CACHE_DIR",
              "BaseMetadata",
              "site_packages",
              "berp_zeros",
              "MatlabOpaque",
              "regex_opt",
              "UUID6",
              "HistoricalTests",
              "urlfetch",
              "__builtin__",
              "binascii",
              "types",
              "approx",
              "dummy_highlighter",
              "_UInt64Codes",
              "DTypePromotionError",
              "FileReader",
              "zoneinfo",
              "direct_url_from_link",
              "RenderableType",
              "bsr_array",
              "_ArrayLikeAnyString_co",
              "importlib_metadata",
              "gettext",
              "BUILTINS",
              "_lazyselect",
              "GZipMiddleware",
              "Formatter",
              "_lbfgsb",
              "selectors",
              "next_fast_len",
              "HTTP2Connection",
              "lpn",
              "inspect",
              "poly2herm",
              "numba",
              "isoc_kindmap",
              "normalize",
              "_ArrayLikeNumber_co",
              "hmean",
              "ctypes",
              "siegelslopes",
              "distcont",
              "tanm",
              "Word",
              "subprocess",
              "pairwise",
              "Future",
              "temppath",
              "Cookie",
              "parse_dict_header",
              "ode",
              "array_api_compat",
              "_NonClosingTextIOWrapper",
              "TRACE_LOG_LEVEL",
              "getpreferredencoding",
              "LINPROG_METHODS",
              "_HiddenParam",
              "trapezoid",
              "NUMERIC_VALIDATOR_LOOKUP",
              "_highs_options",
              "retry_if_not_result",
              "polynomial",
              "atleast_3d",
              "_NBitIntP",
              "StrOrBytesPath",
              "PriorityQueue",
              "root_validator",
              "create_udp_socket",
              "CLOSE_HEADER",
              "scheme_keywords",
              "pycharm",
              "interpolate",
              "SpawnProcess",
              "basinhopping",
              "AsyncByteStream",
              "DataSource",
              "_ndimage_api",
              "final",
              "Distribution",
              "_chandrupatla_minimize",
              "typecodes",
              "LanguageFilter",
              "TestQR",
              "modularity",
              "hermepow",
              "UUID5",
              "nullcontext",
              "TerminalTheme",
              "INSTALL_SCHEMES",
              "TypeVarDef",
              "_axis_nan_policy_factory",
              "multivariate_normal",
              "exceptiongroup",
              "ModuleType",
              "YIELD_FIXTURE",
              "dgtsv",
              "starmap",
              "NULL_FILE",
              "f",
              "ExtType",
              "recursive_repr",
              "_run_until_complete_cb",
              "TemporaryFile",
              "histogramdd",
              "Marker",
              "invwishart",
              "JOHABDistributionAnalysis",
              "round",
              "detect_encoding",
              "loop_last",
              "_a_ij_Aij_Dij2",
              "DWORD",
              "redis",
              "parse_requirement",
              "min_weighted_vertex_cover",
              "hamming",
              "mem_policy",
              "tarfile",
              "PermutationMethod",
              "Mock",
              "TracebackEntry",
              "lil_array",
              "eigvals_banded",
              "MatFile4Reader",
              "TempDirectory",
              "_moduleTNC",
              "ScalaLexer",
              "create_connected_udp_socket",
              "TargetPython",
              "deque_validator",
              "function",
              "_BaseCommand",
              "length_hint",
              "termios",
              "ExceptionRepr",
              "use_solver",
              "Hermite",
              "check_path_owner",
              "BroydenFirst",
              "ward",
              "is_valid_y",
              "EPS",
              "IS_EDITABLE",
              "_parse_size",
              "validate_core_schema",
              "graph_atlas",
              "equitable_color",
              "qr_multiply",
              "PyTorch",
              "Incomplete",
              "InvalidSchemeCombination",
              "freeze_includes",
              "sets",
              "nhypergeom",
              "get_platform",
              "matrix_transpose",
              "_DTypeLikeComplex_co",
              "hilbert",
              "UNIXSocketStream",
              "msg_to_json",
              "pydoc",
              "_16Bit",
              "issctype",
              "array_api_extra",
              "_cumulative_simpson_unequal_intervals",
              "hermsub",
              "socksio",
              "_docstrings",
              "Segment",
              "lstsq",
              "Big5DistributionAnalysis",
              "RotationSpline",
              "get_download_progress_renderer",
              "chirp",
              "CommandContextMixIn",
              "retry_always",
              "distributions",
              "Mapping",
              "float16",
              "process_bounds",
              "arrayprint",
              "install_req_extend_extras",
              "pmean",
              "_64Bit",
              "PluginManager",
              "__file__",
              "_HookImplFunction",
              "isminor",
              "NAN",
              "RigidTransform",
              "InvalidHeader",
              "AttemptManager",
              "utime",
              "_SupportsArray",
              "Representation",
              "build_wheel_legacy",
              "assert_outcomes",
              "matrix_power",
              "coloring",
              "_strtobool",
              "CrocLexer",
              "mmread",
              "_monotonicity",
              "www.edu.tw:81",
              "fixtures",
              "asyn_fluidc",
              "claim_worker_thread",
              "MaxNLocator",
              "SectionWrapper",
              "chordal",
              "and",
              "ndiff",
              "Cache",
              "GraphMLWriter",
              "_LongDoubleCodes",
              "Config",
              "collect_model_fields",
              "_GeneratorContextManager",
              "_fblas_64",
              "_norm_pdf",
              "simpson",
              "softplus",
              "root_scalar",
              "threadpool_limits",
              "magic_square",
              "qmr",
              "AdversarialRobustnessFramework",
              "socket",
              "_NestedSequence",
              "_TestPythranFunc",
              "Tree",
              "odr",
              "pade",
              "guess_lexer",
              "to_thread",
              "build_netloc",
              "cheby1",
              "AsyncBackend",
              "HelpFormatter",
              "log",
              "install_given_reqs",
              "CharDistributionAnalysis",
              "PydanticErrorCodes",
              "APIKeyQuery",
              "wait_incrementing",
              "getimfunc",
              "iterate_exceptions",
              "_all_partitions",
              "core_schema",
              "Back",
              "milp",
              "request",
              "Collection",
              "asmatrix",
              "module_from_spec",
              "asbytes",
              "sici",
              "rec_append_fields",
              "_spropack",
              "EmailStr",
              "WebSocketDisconnect",
              "CodeType",
              "IsPythonScalar",
              "ivp",
              "bestrelpath",
              "Lock",
              "_get_multicapture",
              "BaseValidateHandlerProtocol",
              "ISeedSequence",
              "formatargspec",
              "brentq_example",
              "hermeint",
              "_test_find_index",
              "WINDOWS",
              "where",
              "PyPIRCCommand",
              "ParseResults",
              "pkg_resources",
              "bethehessianmatrix",
              "attribute_ac",
              "in1d",
              "fit",
              "csr_count_blocks",
              "setdrop_tr",
              "POINTER",
              "stft_compare",
              "check_version",
              "build_wheel_editable",
              "ConnectError",
              "Strict",
              "OptimizeResult",
              "Poly",
              "Extra",
              "get_comma_header",
              "create_unix_listener",
              "_ellipsoid",
              "LifoQueue",
              "weakref",
              "DictStrAny",
              "PathAwareHookProxy",
              "jnius",
              "euler",
              "my_cos",
              "approx_derivative",
              "_get_legacy_print_mode",
              "spec_from_loader",
              "DEBUGGING",
              "validate_tol",
              "HttpToolsProtocol",
              "bygroups",
              "FFT_MODE_TYPE",
              "cmdline",
              "hashlib",
              "UnreliableObjectReceiveStream",
              "formatters",
              "_select_function",
              "autocomplete",
              "_ObjectCodes",
              "poly2lag",
              "DecimalNumber",
              "_MAX_HEADER_SIZE",
              "SUPPORTED_DECODERS",
              "_remove_redundancy_id",
              "_umath_linalg",
              "User",
              "SchemaValidator",
              "total_ordering",
              "_get_argv_encoding",
              "watchfiles",
              "cmdoptions",
              "sleep_forever",
              "fix",
              "EUCTWDistributionAnalysis",
              "PYDANTIC_V2",
              "equality_constrained_sqp",
              "State",
              "_Int16Codes",
              "preflow_push",
              "Renderables",
              "LilyPondLexer",
              "arrays",
              "ECDFResult",
              "_kendall_dis",
              "AsyncHTTP11Connection",
              "_identify_ridge_lines",
              "_lambertw",
              "_compute_lwork",
              "find_plugin_lexers",
              "binary_streams",
              "PROTOCOL_TLS_CLIENT",
              "sobol_indices",
              "Jinja2Templates",
              "SpecifierSet",
              "MapWrapper",
              "X",
              "import_string",
              "IS_PYOPENSSL",
              "get_bin_prefix",
              "JuliaLexer",
              "StreamClosed",
              "compat",
              "is_tournament",
              "HtmlLexer",
              "h2vp",
              "CapacityLimiter",
              "PurePath",
              "GLShaderLexer",
              "ckdtree",
              "label",
              "dateutil",
              "pathlib",
              "SphericalVoronoi",
              "fsolve",
              "IokeLexer",
              "elementwise",
              "stop_when_event_set",
              "before_sleep_nothing",
              "UnformattedWarning",
              "is_sptriangular",
              "_gen_harmonic_gt1",
              "JavaLexer",
              "pip_self_version_check",
              "get_binary_stream",
              "HTTPSHandler",
              "escape",
              "random_correlation",
              "Iterator",
              "_basic_auth_str",
              "hermeline",
              "_flag_needs_value",
              "_test_deprecation_call",
              "_distributor_init_local",
              "re",
              "_Float64Codes",
              "_TypingBase",
              "ConnectionState",
              "RubyLexer",
              "sepfir2d",
              "to_railroad",
              "ProbingState",
              "correlation",
              "pass_obj",
              "TracebackType",
              "sosfiltfilt",
              "_minimize_lbfgsb",
              "connection_requires_http_tunnel",
              "EUCTW_SM_MODEL",
              "_nan_mask",
              "spherical_in",
              "lagrange_inversion",
              "qr_tangential_byrd_omojokun",
              "PydanticDeprecatedSince20",
              "dtypes",
              "pop_context",
              "glob",
              "WarningsRecorder",
              "assert_raises",
              "_spbase",
              "all_node_cuts",
              "ansiformat",
              "local",
              "_sosfilt",
              "ordqz",
              "example.com:80",
              "BaseRoute",
              "Whitespace",
              "SecurityScopes",
              "is_async_callable",
              "cond",
              "PROTOCOL_TLS",
              "dft",
              "_ShortCodes",
              "gscale",
              "generate_editable_metadata",
              "RootModelRootType",
              "spilu",
              "text_streams",
              "BRACELESS_IPV6_ADDRZ_RE",
              "PyPyLogLexer",
              "tempfile",
              "xfail",
              "mock",
              "hann",
              "DisjointSet",
              "wintypes",
              "BaseDiGraphTester",
              "can_be_positional",
              "ThreadPool",
              "OAuthFlows",
              "interpolation",
              "get_indentation",
              "RequestField",
              "wait_chain",
              "compatibility_tags",
              "extract_cookies_to_jar",
              "allclose",
              "ConfigOptionParser",
              "readwrite",
              "SBCSGroupProber",
              "resolve_from_str",
              "brotlicffi",
              "_get_castingimpl",
              "_discovered_machar",
              "isawaitable",
              "Error",
              "PytestFDWarning",
              "tabulate",
              "k_edge_subgraphs",
              "hermesub",
              "readsav",
              "cpuinfo",
              "_OptionParser",
              "get_major_minor_version",
              "_idl",
              "check_named_results",
              "TestRunner",
              "is_strongly_regular",
              "PytestWarning",
              "ConfidenceInterval",
              "SSLContext",
              "CommandArgs",
              "convert",
              "shortest_augmenting_path",
              "someattr",
              "FactorLexer",
              "_nd_image",
              "ParserElement",
              "CoreSchemaOrField",
              "MesonBackend",
              "Address",
              "SmalltalkLexer",
              "perm",
              "cffi",
              "cython_special",
              "ROOT_METHODS",
              "DOUBLE",
              "AnyClassMethod",
              "splitext",
              "redrat",
              "UTF8_SM_MODEL",
              "copy_if_needed",
              "function_base",
              "defchararray",
              "trim",
              "dual_annealing",
              "_dict_to_numpy_array1",
              "TaskInfo",
              "NetworkStream",
              "triad_graph",
              "Comment",
              "stats",
              "circmean",
              "anothersubmodule",
              "mpf2float",
              "futures",
              "mpmath",
              "BadArgumentUsage",
              "isomorphvf2",
              "curve_fit",
              "approximation",
              "FileDescriptorLike",
              "CubicSpline",
              "AbstractSetIntStr",
              "_dierckx",
              "general_k_edge_subgraphs",
              "PytestTester",
              "_xp_mean",
              "InvalidState",
              "normalize_axis_index",
              "jax",
              "xp_device",
              "tracemalloc",
              "open_stream",
              "stringify_exception",
              "ASGIReceiveCallable",
              "in",
              "before_log",
              "win32pdh",
              "Awaitable",
              "_GUFunc_Nin2_Nout1",
              "Version",
              "graph_atlas_g",
              "BufferedByteReceiveStream",
              "DEFAULT_REPR_MAX_SIZE",
              "tukey_hsd",
              "being",
              "fnmatch_ex",
              "ClosedResourceError",
              "ClassNotFound",
              "isnan",
              "moral_graph",
              "max_len_seq",
              "G",
              "math",
              "cleandoc",
              "but",
              "S_ISLNK",
              "QUADRATIC_ASSIGNMENT_METHODS",
              "ELOOP",
              "chebyt",
              "null_space",
              "_polyder",
              "_lloyd_centroidal_voronoi_tessellation",
              "plugins",
              "gmean",
              "_covariance",
              "make_setuptools_bdist_wheel_args",
              "quantile",
              "bytesify",
              "readline",
              "exceptions",
              "_not_a_knot",
              "convert_pydata_sparse_to_scipy",
              "collections",
              "MissingError",
              "bisect_right",
              "FixedRule",
              "_compute_outer_prob_inside_method",
              "in_tempdir",
              "hermline",
              "_DTypeLikeFloat",
              "EUCJPContextAnalysis",
              "CP949Prober",
              "Tuple",
              "IDNAError",
              "BytesBuilder",
              "maximum_branching",
              "LockStatistics",
              "_multi_dot_matrix_chain_order",
              "cdotu",
              "arff",
              "LinAlgError",
              "envelope",
              "legacy_path",
              "BlitzBasicLexer",
              "CallbackSuccess",
              "version_option",
              "Semaphore",
              "console_main",
              "AsyncContentStream",
              "wait_socket_readable",
              "_default_text_stderr",
              "freeze",
              "strtobool",
              "einsumfunc",
              "anything",
              "ParameterSet",
              "elliprj",
              "under",
              "UninstallationError",
              "_cpropack",
              "EIGHT_BIT_PALETTE",
              "iterkeys",
              "is_archive_file",
              "yaml",
              "StrPath",
              "ClassDoc",
              "find_distributions",
              "k_components",
              "_cwt",
              "ldl",
              "DelimiterNotFound",
              "_DTypeLikeTD64",
              "Laguerre",
              "deep_update",
              "is_array_api_obj",
              "runner_with_spinner_message",
              "isscalar",
              "fmin_cobyla",
              "_comb_int",
              "power_divergence",
              "build_url_from_netloc",
              "mul",
              "load_ipython_extension",
              "heapq",
              "_dpropack",
              "minimum_st_edge_cut",
              "SecretBytes",
              "NameEmail",
              "direct",
              "CLexer",
              "apply_warning_filters",
              "edge_dfs",
              "_log",
              "colorize",
              "KeyBasedCompareMixin",
              "Union",
              "contracted_nodes",
              "ResultDict",
              "airye",
              "min_cost_flow_cost",
              "register_assert_rewrite",
              "wait_random",
              "get_empty_parameterset_mark",
              "wsproto",
              "a2wsgi",
              "_Int8Codes",
              "ArchiveInfo",
              "maximum_filter1d",
              "retry_if_exception_message",
              "in_venv",
              "importlib",
              "MuPADLexer",
              "RewriteHook",
              "cKDTree",
              "sctype2char",
              "WinColor",
              "WINFUNCTYPE",
              "gzip",
              "clique",
              "lagrange",
              "getnameinfo",
              "module",
              "_UIntLike_co",
              "TimeoutStateError",
              "Node",
              "saferepr",
              "_check_path",
              "sin",
              "all_identical",
              "BFGS",
              "LSQUnivariateSpline",
              "MarkerAtom",
              "welch",
              "FrozenSet",
              "Status",
              "ImportFromStringError",
              "pluggy",
              "np_compat",
              "codes",
              "Akima1DInterpolator",
              "TIS_620_THAI_MODEL",
              "PytestUnhandledThreadExceptionWarning",
              "broadcast_to",
              "guess_type",
              "projected_graph",
              "AsyncHTTPConnection",
              "torch",
              "fftpack",
              "ndonnx",
              "getfullargspec_no_self",
              "distance_transform_cdt",
              "data_to_n",
              "RequestError",
              "LineSearchWarning",
              "SCHEME_KEYS",
              "_zpropack",
              "ServerState",
              "_vec_string",
              "kstwo",
              "FitDataError",
              "BuildEnvironment",
              "b64decode",
              "eigvals",
              "fails",
              "REF_PREFIX",
              "_winreg",
              "echo",
              "Self",
              "bicgstab",
              "BaseFormatter",
              "crackfortran",
              "laggauss",
              "AAA",
              "_NumberLike_co",
              "open",
              "SetupState",
              "array_indexing",
              "f_oneway",
              "RedirectResponse",
              "hermefromroots",
              "iso_c2py_map",
              "checkpoint_if_cancelled",
              "cholesky",
              "parse_mypy_version",
              "Context",
              "functools",
              "isolve",
              "127.0.0.1:8080",
              "interface",
              "float_factorial",
              "FixtureRequest",
              "KroghInterpolator",
              "make_setuptools_clean_args",
              "_highs_to_scipy_status_message",
              "BaseTestAttributeMixing",
              "make_distribution_for_install_requirement",
              "is_valid_field",
              "ZoneInfo",
              "_minimize_slsqp",
              "mminfo",
              "pkgutil",
              "due",
              "basestring",
              "_128Bit",
              "firwin",
              "ConditionStatistics",
              "hermemulx",
              "DCSRCH",
              "Markdown",
              "FILTERS",
              "LocalSearchWrapper",
              "msvcrt",
              "after_nothing",
              "literal_eval",
              "Packer",
              "NUM_GRAPHS",
              "csc_array",
              "_Function",
              "expectile",
              "any",
              "ndtri",
              "current_async_library",
              "c_ssize_t",
              "nx_pydot",
              "subgraph_view",
              "dogbox",
              "maximum_sctype",
              "datetime",
              "lagpow",
              "TimerHandle",
              "asarray",
              "lagline",
              "dendrogram",
              "is_model_class",
              "linprog",
              "minimum_node_cut",
              "rosen_der",
              "Timeout",
              "lfilter",
              "webbrowser",
              "undo_rmbadname",
              "spec",
              "OrderedDict",
              "lebedev_rule",
              "rmtree",
              "ArborescenceIterator",
              "F",
              "communicability",
              "py_random_state",
              "commands_dict",
              "ReprLocals",
              "square",
              "get_all_filters",
              "format_filename",
              "fdtri",
              "Live",
              "JSON",
              "Event",
              "pretty",
              "List",
              "byref",
              "wait_exponential_jitter",
              "TypeAlias",
              "ksone",
              "_typing_extra",
              "nrdtrimn",
              "_configure_context",
              "RetryError",
              "MemoryObjectSendStream",
              "PrettyPrinter",
              "kernighan_lin_bisection",
              "_get_funcs",
              "gettempdir",
              "_sinpi",
              "deeper",
              "junction_tree",
              "z3printer",
              "WarningMessage",
              "SOCKET_OPTION",
              "OpenBinaryMode",
              "Line2D",
              "location",
              "Resolver",
              "Rule",
              "display",
              "StyleType",
              "check_COLA",
              "solve_ivp",
              "unistring",
              "VisibleDeprecationWarning",
              "UnsupportedWheel",
              "retry_if_exception_cause_type",
              "install",
              "make_numbered_dir_with_cleanup",
              "centrality",
              "dgesv",
              "stop_any",
              "eval_legendre",
              "safe_exists",
              "Sakurai",
              "HookspecMarker",
              "OAuth2PasswordBearer",
              "__odrpack",
              "b",
              "AppleScriptLexer",
              "AdaLexer",
              "LazyClassAttribute",
              "retry_if_result",
              "PytestUnknownMarkWarning",
              "heapify",
              "_UInt8Codes",
              "AsyncHTTPTransport",
              "genlaguerre",
              "tanhm",
              "retry_if_exception",
              "parsedate_tz",
              "getfixturemarker",
              "all_pairs_node_connectivity",
              "solve_circulant",
              "PUBLIC_MODULES",
              "progressbar",
              "ReceiveBuffer",
              "DEFAULT_RULES",
              "FUNCTIONS",
              "yield_fixture",
              "compiled",
              "LegacyVersion",
              "TypeVarTuple",
              "xp_copy",
              "hierarchy",
              "_dtype_from_pep3118",
              "FixtureManager",
              "ABC",
              "contextlib2",
              "copyreg",
              "RunVar",
              "_deprecate_positional_args",
              "append_fields",
              "fnmatch",
              "BadCoefficients",
              "BaseHeuristic",
              "InstallationCandidate",
              "KconfigLexer",
              "OrderStatisticDistribution",
              "_binary_search_for_binom_tst",
              "S_ISDIR",
              "dragon4_positional",
              "_split_subregion",
              "InvalidVersion",
              "open_signal_receiver",
              "Field",
              "ellip_harm",
              "convolution_matrix",
              "grp",
              "almost_equal_floats",
              "Thread",
              "MissingDefinitionError",
              "_make_tuple_bunch",
              "old_api",
              "fast_could_be_isomorphic",
              "CertificateError",
              "ThreadPoolExecutor",
              "InstallationSubprocessError",
              "gaussian_filter1d",
              "wrap_text",
              "StashKey",
              "norm",
              "assert_equal",
              "fractional_matrix_power",
              "get_unpacked_marks",
              "OptionGroup",
              "_asarray_validated",
              "qradd_Rdiag",
              "posixpath",
              "push_context",
              "__array_namespace_info__",
              "Proxy",
              "InputState",
              "horner",
              "TextLexer",
              "_GenericCodes",
              "recarray",
              "CaseInsensitiveDict",
              "JupyterMixin",
              "py_object",
              "Message",
              "_Int64Codes",
              "Dataclass",
              "get_window",
              "install_req_drop_extras",
              "pytest",
              "Screen",
              "warnings",
              "builtins_base",
              "ModuleSpec",
              "istft_compare",
              "EUCKRDistributionAnalysis",
              "_root_df_sane",
              "_glibc_older_than",
              "filterfalse",
              "qr_delete",
              "licenses",
              "ContextManager",
              "Response",
              "upfirdn",
              "lagder",
              "DEPRECATION_MSG_PREFIX",
              "isreal",
              "PIL",
              "_minimize_tnc",
              "Hashes",
              "collections_abc",
              "assert_array_max_ulp",
              "ConsoleOptions",
              "matrixlib",
              "EncodedBytes",
              "FFI",
              "DefaultDict",
              "c_ulong",
              "_csparsetools",
              "normalize_axis_tuple",
              "_hits_numpy",
              "generate_unique_id",
              "_cs_matrix",
              "gmres",
              "get_importer",
              "VERBOSE",
              "PytestExperimentalApiWarning",
              "integrate",
              "min",
              "ascii_letters",
              "isomorphism",
              "MIMELexer",
              "_IntCodes",
              "_ArrayLikeInt",
              "without",
              "PythonRandomInterface",
              "Base64UrlStr",
              "httpcore",
              "comb",
              "dict_append",
              "_thread",
              "incref_elide_l",
              "PluggableSchemaValidator",
              "cytoscape_data",
              "_compat",
              "click",
              "DecodeError",
              "obj2sctype",
              "sampled_from",
              "patch_lazy_xp_functions",
              "iskeyword",
              "everything",
              "charset_normalizer",
              "f2py_build_generator",
              "multigammaln",
              "get_annotation_from_field_info",
              "is_union_origin",
              "_zeros_py",
              "ArrayLike",
              "set_workers",
              "OpenSSL",
              "isintlike",
              "dt_config",
              "expm",
              "IReporter",
              "vonmises",
              "max_flow_min_cost",
              "SupportsIndex",
              "SeedSequence",
              "y1_zeros",
              "NamedTemporaryFile",
              "Environment",
              "edmonds_karp",
              "get_c_wrapping_array",
              "basename",
              "fsdecode",
              "Cookies",
              "_default_text_stdout",
              "Panel",
              "exit",
              "detrend",
              "SecurityBase",
              "assert_approx_equal",
              "diff",
              "normalize_path",
              "OPENEDGEKEYWORDS",
              "raises",
              "Template",
              "slots_true",
              "arcsinh",
              "invert",
              "chunk_header",
              "a",
              "ObjectiveCLexer",
              "_load_pypirc",
              "relative_risk",
              "_bracket_root",
              "read_p2g",
              "device",
              "geometric_transform",
              "left_d_threshold_sequence",
              "_var",
              "HookspecOpts",
              "tight_layout",
              "combinations",
              "sweep_poly",
              "chisquare",
              "group_dense",
              "_Complex128Codes",
              "HEADERS",
              "lambertw",
              "atleast_1d",
              "JustInt",
              "MaskedArrayFutureWarning",
              "bisplrep",
              "StopBaseT",
              "_cblas",
              "IrcLogsLexer",
              "_32Bit",
              "cubature",
              "retry_unless_exception_type",
              "upcast",
              "_IMPORT_CWD",
              "importorskip",
              "is_bipartite",
              "hessian",
              "LinearConstraint",
              "HTTPHeaderDict",
              "_android_folder",
              "block_diag",
              "retry_all",
              "extract_docstrings_from_cls",
              "FitError",
              "warning_record_to_str",
              "dlartg",
              "cycle",
              "DuelLexer",
              "plistlib",
              "AsyncConnectionInterface",
              "evaluate_linear_2d",
              "UUID4",
              "_get_output",
              "cookiejar",
              "_rng_spawn",
              "WatchFilesReload",
              "assertstate_key",
              "IntegrationWarning",
              "assortativity",
              "random_spanning_tree",
              "pytest_timeout",
              "dok_matrix",
              "czt",
              "ma",
              "Pattern",
              "hermroots",
              "NetworkXAlgorithmError",
              "wavfile",
              "bdb",
              "betaprime",
              "factorialk",
              "_byteordercodes",
              "brentq",
              "fileinput",
              "get_default_environment",
              "sympy",
              "split_arg_string",
              "shapiro",
              "RectBivariateSpline",
              "tr_interior_point",
              "_config",
              "TunnelHTTPConnection",
              "bsr_matrix",
              "association",
              "ConstantDenseOutput",
              "copy_internals",
              "dependency",
              "BackendPriorities",
              "fmin_tnc",
              "unquote_plus",
              "ColorTriplet",
              "DependencyWarning",
              "freqs_zpk",
              "show_versions",
              "WSGIApplication",
              "errors",
              "ErrorList",
              "_NBitSingle",
              "VimLexer",
              "validate_arguments",
              "get_standard_typevars_map",
              "_helper",
              "BarycentricInterpolator",
              "_check_device",
              "Lines",
              "distance",
              "RegexLexer",
              "hdquantiles",
              "gammaln",
              "WheelDistribution",
              "NoSuchOption",
              "problems",
              "stirling2",
              "NetworkConnectionError",
              "open_file",
              "TracebackStyle",
              "Pool",
              "BagObj",
              "edge_current_flow_betweenness_centrality",
              "AnyCallable",
              "find_lexer_class",
              "annotationlib",
              "command",
              "_osx_support",
              "within",
              "TRLIBQuadraticSubproblem",
              "GenerateSchema",
              "ConnectionNotAvailable",
              "loadarff",
              "cluster",
              "SemaphoreStatistics",
              "import_module",
              "SeparateBodyFileCache",
              "AfterValidator",
              "disp",
              "bicg",
              "Radau",
              "MatlabFunction",
              "Client",
              "UniversalDetector",
              "polar",
              "ProtoBufLexer",
              "lagweight",
              "mysubmodule",
              "RebolLexer",
              "datasets",
              "TempDirectoryTypeRegistry",
              "hermvander2d",
              "FileProxy",
              "_fields",
              "jn_zeros",
              "HookImpl",
              "_find_binary_reader",
              "tokenize_attribute",
              "splrep",
              "PipXmlrpcTransport",
              "ReadableBuffer",
              "_VoidLike_co",
              "ortho_group",
              "_SignedIntegerCodes",
              "pygments",
              "twisted",
              "_socket",
              "Callable",
              "diameter",
              "_ArrayLikeFloat64_co",
              "full_api",
              "CoqLexer",
              "cache",
              "_load_from_filelike",
              "hermpow",
              "weighted",
              "pylab",
              "xp_assert_equal",
              "gomory_hu_tree",
              "is_renderable",
              "kstwobign",
              "HookimplMarker",
              "compare_chararrays",
              "rational",
              "DelegatingLexer",
              "DirectUrl",
              "process_f2cmap_dict",
              "Wheel",
              "cookiejar_from_dict",
              "_abcoll",
              "get_config",
              "ABCMeta",
              "_lazy_import",
              "rgb_to_hls",
              "_mysql_builtins",
              "parse_requirements",
              "_multiarray_umath",
              "_Hash",
              "get_environment",
              "cspline1d",
              "SocketAttribute",
              "procrustes",
              "utils",
              "UDPPacketType",
              "ParamType",
              "grid_graph",
              "hookimpl",
              "get_lexer_for_mimetype",
              "is_cupy",
              "csr_tocsc",
              "MacRomanProber",
              "InvalidWheelFilename",
              "golden",
              "ASYFUNCNAME",
              "cast",
              "_eventloop",
              "_apply_over_batch",
              "_ctest",
              "distutils",
              "TestMultiGraph",
              "legacy_windows_render",
              "RobotFrameworkLexer",
              "_rational_tests",
              "AwkLexer",
              "ZipFile",
              "DecodingError",
              "get_choice_opt",
              "param",
              "urllib2",
              "ClassAttribute",
              "unescape",
              "TaskStatus",
              "deprecated",
              "BadParameter",
              "DateTime",
              "_datacopied",
              "minkowski_distance_p",
              "JsonSchemaMode",
              "_chandrupatla",
              "rotation",
              "set_callable_name",
              "_local_correlations",
              "EVENT_READ",
              "SeparateBodyBaseCache",
              "markoutercomma",
              "umfpack",
              "BaseReport",
              "AuthBase",
              "ArgumentParser",
              "LU",
              "_BoolLike_co",
              "getrawcode",
              "CallbackFileWrapper",
              "getproxies",
              "to_pascal",
              "certifi",
              "tiecorrect",
              "fht",
              "api",
              "MutableMapping",
              "enum",
              "_ArrayLikeVoid_co",
              "rosen_hess",
              "errno",
              "TestEdgeSubgraph",
              "CommaDecimalPointLocale",
              "_NumberCodes",
              "get_all_lexers",
              "PluginValidationError",
              "CobolLexer",
              "ScalarType",
              "ztrsyl",
              "running_under_virtualenv",
              "pickle",
              "cleanup_dead_symlinks",
              "check_free_memory",
              "z3consts",
              "hook",
              "_test_ccallback",
              "NoneType",
              "arange",
              "gammainc",
              "_TD64Codes",
              "FixtureLookupError",
              "ramsey",
              "spdiags",
              "_clean_inputs",
              "lagint",
              "_minimize_trustregion_constr",
              "_lib",
              "romb",
              "smirnov",
              "pydantic_core",
              "loads",
              "TexLexer",
              "Container",
              "rfft",
              "PackageNotFoundError",
              "convert_ipv6_sockaddr",
              "password_option",
              "process_str",
              "pause",
              "getfullargspec",
              "Android",
              "find",
              "accumulate",
              "ELFFile",
              "xlogy",
              "atexit",
              "value",
              "line",
              "checks",
              "_DTypeLikeComplex",
              "import",
              "NewType",
              "DenseOutput",
              "cKDTreeNode",
              "hermeroots",
              "custom_pydantic_encoder",
              "get_python_lib",
              "OptimizeWarning",
              "AmbiguousSolution",
              "power",
              "print_dist_installation_info",
              "lagmulx",
              "TypedAttributeProvider",
              "Text",
              "_DoubleCodes",
              "Dir",
              "Style",
              "_core_utils",
              "absolute_import",
              "get_async_backend",
              "ProtocolError",
              "fhtoffset",
              "_aliases",
              "varmats_from_mat",
              "chebyshev",
              "PRI_MED",
              "ComplexWarning",
              "util",
              "strip_control_codes",
              "make_smoothing_spline",
              "path_to_url",
              "directional_stats",
              "inset_axes",
              "AnyByteReceiveStream",
              "BaseCache",
              "shutil",
              "eigs",
              "margins",
              "ALL",
              "colorsys",
              "ServerExtensionFactory",
              "ENABLE_VIRTUAL_TERMINAL_PROCESSING",
              "BPoly",
              "kv",
              "tt_solve_power",
              "iglob",
              "Bounds",
              "k_edge_components",
              "trf",
              "fromstring_null_term_c_api",
              "tukeylambda",
              "ExceptionMapping",
              "threading",
              "binom",
              "CoreConfig",
              "issues",
              "_UByteCodes",
              "_signal_api",
              "NestedFixedRule",
              "tfqmr",
              "spatial",
              "decode",
              "HTTPBasic",
              "funm",
              "_linprog_ip",
              "BUILTIN_FUNCTIONS",
              "csv",
              "_internal_dataclass",
              "LSQSphereBivariateSpline",
              "flow_matrix_row",
              "xp_promote",
              "max",
              "VisitingDistribution",
              "interp1d",
              "Serializer",
              "Sized",
              "is_valid_identifier",
              "IncompleteRead",
              "NamespaceLoader",
              "dia_array",
              "SingleByteCharSetProber",
              "SourceDistribution",
              "format_datetime",
              "_sub_module_deprecation",
              "expand_grouped_metadata",
              "of",
              "edge_disjoint_paths",
              "_private",
              "MutableHeaders",
              "AxisError",
              "as_file",
              "vonmises_fisher",
              "_fmm_core",
              "MAPPING_ORIGIN_MAP",
              "APIRouter",
              "concatenate",
              "GenerateJsonSchema",
              "shgo",
              "expected_freq",
              "ValidationError",
              "CORSMiddleware",
              "ShortTimeFFT",
              "_fixed_default_rng",
              "cont2discrete",
              "_git",
              "ogrid",
              "NormalizedName",
              "Interface",
              "ReprArgs",
              "make_lsq_spline",
              "CertTypes",
              "RatioUniforms",
              "NetworkBackend",
              "ErrorWrapper",
              "UNKNOWN_ERROR",
              "frombuffer",
              "_IntPCodes",
              "pformat",
              "logger",
              "nx_agraph",
              "FastGeneratorInversion",
              "_assert_valid_refcount",
              "get_include",
              "some",
              "_cplxreal",
              "PreparedConstraint",
              "DocInfo",
              "AsyncEvent",
              "IO",
              "_ArrayLikeComplex_co",
              "collect_dataclass_fields",
              "cobyla",
              "deprecation",
              "_fitpack_impl",
              "uarray",
              "minimum_filter1d",
              "RunResult",
              "AxisConcatenator",
              "f2py",
              "Url",
              "_CopyMode",
              "_RichResult",
              "poly1d",
              "kaiserord",
              "matmul",
              "BasicReport",
              "after_log",
              "RetryBaseT",
              "ZipExtFile",
              "RaisesExc",
              "DoSleep",
              "filled",
              "connect_tcp",
              "SJISContextAnalysis",
              "init",
              "Sequence",
              "_fileobject",
              "correlate1d",
              "zoom",
              "checkbreak_con",
              "is_partition",
              "SUPPRESS_HELP",
              "dummy_threading",
              "AuthInfo",
              "Array",
              "match_hostname",
              "CommandError",
              "solve_toeplitz",
              "hermval2d",
              "blake2b",
              "Worker",
              "diags_array",
              "HTTPAuthorizationCredentials",
              "_dtype_ctypes",
              "DunnettResult",
              "OptExcInfo",
              "_boolrelextrema",
              "projections",
              "EdgeComponentAuxGraph",
              "laguerre",
              "copy",
              "_arrays_for_stack_dispatcher",
              "assert_never",
              "Discriminator",
              "_cytest",
              "CrystalLexer",
              "asarray_chkfinite",
              "global_tempdir_manager",
              "SciPy",
              "get_host",
              "RichRenderable",
              "PathFinder",
              "GetCoreSchemaHandler",
              "EmojiVariant",
              "convert_type",
              "Never",
              "complex128",
              "dop",
              "display_path",
              "get_origin",
              "ClickException",
              "get_multipart_boundary_from_content_type",
              "ranksums",
              "GenericAlias",
              "find_minimum",
              "yv",
              "directory",
              "CallSpec2",
              "Item",
              "local_node_connectivity",
              "make_splrep",
              "ChainMap",
              "determine_setup",
              "run_in_threadpool",
              "OdeSolution",
              "BaseExceptionGroup",
              "blackman",
              "launch",
              "Fraction",
              "Expression",
              "CONFIG",
              "Value",
              "InitVar",
              "orjson",
              "REALMAX",
              "wiener",
              "SmoothSphereBivariateSpline",
              "ravel_multi_index",
              "MaskedArray",
              "cert_reqs",
              "DefaultPlaceholder",
              "PchipInterpolator",
              "log_softmax",
              "ttest_ind_from_stats",
              "RecordedHookCall",
              "x509",
              "abc",
              "get_selector",
              "_tracing",
              "appdirs",
              "typed_attribute",
              "ApacheConfLexer",
              "FelixLexer",
              "normal",
              "ifilterfalse",
              "dct",
              "Halton",
              "arctan",
              "_frozen_importlib",
              "IndexGroupCommand",
              "get_filter_by_name",
              "PlatformDirsABC",
              "density",
              "HermiteE",
              "winreg",
              "rfftfreq",
              "UnreliableObjectStream",
              "NSISLexer",
              "logm",
              "minres",
              "bandwidth",
              "idna",
              "ones",
              "is_pydantic_dataclass",
              "solve_bvp",
              "PacifyFlushWrapper",
              "ROOT_KEY",
              "Voronoi",
              "ExitCode",
              "cython_lapack",
              "LinAlgWarning",
              "_function_base_impl",
              "DoctestItem",
              "jacobi",
              "_remove_redundancy_pivot_sparse",
              "check_ispytest",
              "_CHANDRUPATLA_TESTS",
              "product",
              "cholesky_AAt",
              "render",
              "METHODS_WITH_BODY",
              "Server",
              "levy_l",
              "_qmvt",
              "flags",
              "Security",
              "quadratic_assignment",
              "flatten",
              "companion",
              "escape_control_codes",
              "BufferedReader",
              "lil_matrix",
              "lagval2d",
              "NormalizedVersion",
              "_discrete_distns",
              "AsyncForwardHTTPConnection",
              "_extrema_bounding",
              "threadpool_info",
              "change_root",
              "CandidatesFromPage",
              "AsyncBaseTransport",
              "chordal_graph_cliques",
              "unpack_file",
              "shell_complete",
              "matdims",
              "BootstrapResult",
              "Windows",
              "uvicorn",
              "CoreFoundation",
              "ValidatorListDict",
              "loadmat",
              "average",
              "csr_array",
              "HashMismatch",
              "_rename_parameter",
              "faster_could_be_isomorphic",
              "ASGIApplication",
              "MethodType",
              "_InexactCodes",
              "attrgetter",
              "savgol_coeffs",
              "numeric",
              "isdir",
              "fclusterdata",
              "sep",
              "HTMLParser",
              "www.cs.kuleuven.ac.be:80",
              "orthogonal_procrustes",
              "float32",
              "ConnectedUDPSocket",
              "WeakKeyDictionary",
              "TYPE_CHECKING",
              "load_dotenv",
              "PydanticDeprecatedSince26",
              "lazy_xp_function",
              "interp",
              "PERMANENT_REDIRECT_STATUSES",
              "RootModel",
              "DirectedGraph",
              "_dd_exp",
              "DistributionVersion",
              "hermefit",
              "NO_MATCHES_FOUND",
              "_CDoubleCodes",
              "create_model",
              "QueryParamTypes",
              "_spfuncs",
              "relabel",
              "regrid_smth",
              "BrokenStdoutLoggingError",
              "polyadd",
              "_trim_arity",
              "deque",
              "isneginf",
              "_continuous_distns",
              "_stan_builtins",
              "_poisson_binom",
              "_find_repeats",
              "csgraph",
              "tempdir",
              "MacOS",
              "parse_http_list",
              "SOCKSProxy",
              "correlate",
              "SqrtmError",
              "assert_array_almost_equal",
              "MarkupError",
              "www.example.com:80",
              "typing_objects",
              "BBCodeLexer",
              "WRITERS",
              "models",
              "CompletionItem",
              "compatibility",
              "reduce",
              "CO_VARARGS",
              "BOOL",
              "Link",
              "_DTypeLikeInt",
              "_asarray",
              "energy_distance",
              "_NBitLongDouble",
              "qr",
              "resample",
              "network_simplex",
              "rebuild_dataclass",
              "diagsvd",
              "ParseException",
              "PrintHelp",
              "linsolve",
              "cobyqa",
              "Validator",
              "get_client_addr",
              "MultipartStream",
              "AnyUrl",
              "MissingParameter",
              "trf_linear",
              "encode_multipart_formdata",
              "UnexpectedException",
              "_vq",
              "CanonicalConstraint",
              "ntpath",
              "splu",
              "_NBitLongLong",
              "print",
              "LSODA",
              "ProxyError",
              "_delegators",
              "DictCache",
              "_npyio_impl",
              "decorator",
              "DEFAULT_LIMITS",
              "ynp_zeros",
              "retry_never",
              "NormalizedLicenseExpression",
              "trstlp",
              "TypeVarType",
              "get_current_active_user",
              "chardet",
              "FancyURLopener",
              "OutcomeException",
              "ProgressBar",
              "FileResponse",
              "BaseReload",
              "ScalarFunction",
              "lagcompanion",
              "SocketStream",
              "AssertionRewritingHook",
              "ncfdtr",
              "with",
              "dataclasses",
              "sqrtm",
              "lagadd",
              "term_len",
              "_XMAX",
              "get_scheme",
              "_spectral_helper",
              "traversal",
              "make_numbered_dir",
              "them",
              "_bsplines",
              "ratio_distribute",
              "axis_slice",
              "_typelessdata",
              "TypeAliasType",
              "jv",
              "np_long",
              "dbpubs.stanford.edu:8090",
              "OAuth2PasswordRequestFormStrict",
              "EllipsisType",
              "_IntCCodes",
              "z3types",
              "BinomTestResult",
              "vectorized_filter",
              "ascii_escaped",
              "IntRange",
              "permutation_test",
              "secho",
              "TypeTranslator",
              "BuildBackendHookCaller",
              "isscalarlike",
              "_split_opt",
              "pick_pade_structure",
              "NotRequired",
              "bws_test",
              "is_simple_path",
              "convolve1d",
              "arccos",
              "Table",
              "interp_decomp",
              "_nonneg_int_or_fail",
              "vq",
              "lapack",
              "ErrorCode",
              "zeta",
              "_UnsignedIntegerCodes",
              "NetworkXError",
              "eval_type_lenient",
              "collect_known_metadata",
              "inconsistent",
              "_ellip_harm",
              "_Complex64Codes",
              "solve_continuous_are",
              "Philox",
              "DEFAULT_STYLES",
              "PhpLexer",
              "DebianControlLexer",
              "fmin_slsqp",
              "MatFile5Reader",
              "reprlib",
              "TrustRegion",
              "LegacyWindowsTerm",
              "ISO_8859_5_BULGARIAN_MODEL",
              "asyncio",
              "format_lines",
              "argcomplete",
              "laggrid2d",
              "version_short",
              "url_to_path",
              "dctn",
              "capacity_scaling",
              "is_connected",
              "FLOAT",
              "minimum_spanning_arborescence",
              "SSLError",
              "fields",
              "HTTPError",
              "minimum_spanning_tree",
              "_broadcast_concatenate",
              "find_threshold_graph",
              "field_name",
              "UnsupportedOperation",
              "check_grad",
              "wait_random_exponential",
              "band_stop_obj",
              "get_supported",
              "StandardNormal",
              "ipywidgets",
              "RequirementCommand",
              "attrmatrix",
              "hermfromroots",
              "COMMENTCHARS",
              "formatdate",
              "rv_continuous",
              "_pair_cache",
              "IPvAnyAddress",
              "_matfuncs_inv_ssq",
              "timing",
              "SelectionPreferences",
              "CELL_WIDTHS",
              "extract_by_key",
              "Metafunc",
              "make_wildcard_trigger",
              "fixture",
              "c2capi_map",
              "warn_explicit_for",
              "solve_triangular",
              "Options",
              "_realtransforms_backend",
              "isshape",
              "reverse_cuthill_mckee",
              "DEFAULT_POOLBLOCK",
              "File",
              "y",
              "_BaseGenericAlias",
              "unittest",
              "average_clustering",
              "BadCommand",
              "cartesian_product",
              "LEGACY_PATH",
              "sleep_using_event",
              "isinv",
              "http",
              "groupby",
              "Frame",
              "time",
              "email",
              "Traceback",
              "c_int",
              "weibull_min",
              "airy",
              "eig",
              "six",
              "argmap",
              "DEFAULT_REF_TEMPLATE",
              "HTTPBearer",
              "num_obs_dm",
              "NodeKeywords",
              "array_api_strict",
              "internal_overlap",
              "canonicalize_version",
              "NumpyVersion",
              "MatlabLexer",
              "Handler",
              "diagnose",
              "_add_newdocs",
              "poly2herme",
              "ASGI2Middleware",
              "occurs",
              "HTTP_422_UNPROCESSABLE_ENTITY",
              "BuildTracker",
              "nodes_equal",
              "get_current_context",
              "tree_data",
              "Session",
              "_wrapper",
              "_dataclasses",
              "_8Bit",
              "_extobj_contextvar",
              "z3",
              "get_requirement",
              "NestedSequence",
              "suppress",
              "evaluate",
              "_dummy_thread",
              "monotonic",
              "Filter",
              "CZT",
              "lazy_apply",
              "timer",
              "AnyByteStream",
              "gen",
              "RConsoleLexer",
              "dummy_thread",
              "get_pip_version",
              "sleep",
              "HANDLE",
              "_AnyShape",
              "_validators",
              "create_main_parser",
              "xml",
              "random",
              "getctype",
              "_ndim_coords_from_arrays",
              "ascent",
              "SocketIO",
              "pinvh",
              "_decorators",
              "hadamard",
              "CONSOLE_HTML_FORMAT",
              "AbstractContextManager",
              "safecall",
              "LineMatcher",
              "htmlentitydefs",
              "hls_to_rgb",
              "pytest_run_parallel",
              "UmfpackWarning",
              "urllib3",
              "graphs_equal",
              "cho_factor",
              "walk_tb",
              "check_random_state_property",
              "inherit_docstring_from",
              "krogh_interpolate",
              "get_all_formatters",
              "__version_tuple__",
              "get_lexer_by_name",
              "message_from_file",
              "AwaitableOrContextManager",
              "ASGIApp",
              "FunctionType",
              "BackgroundTask",
              "TerminalReporter",
              "_LongCodes",
              "__cpu_features__",
              "traceback",
              "cycles",
              "Complex",
              "cuthill_mckee_ordering",
              "spectral_bipartivity",
              "masked_array",
              "wait_fixed",
              "tomli",
              "NodeDataView",
              "_minimize_trust_krylov",
              "raise_for_status",
              "asyncio_setup",
              "_vbscript_builtins",
              "_store_pypirc",
              "InvalidWheel",
              "lagvander",
              "pow",
              "BadOptionUsage",
              "dumps",
              "backend_info",
              "_StringCodes",
              "signature",
              "_Shape",
              "solve_banded",
              "make_setuptools_egg_info_args",
              "distro",
              "gaussian_filter",
              "AliasGenerator",
              "NonUniformImage",
              "nodes_or_number",
              "build_residual_network",
              "ApproxBase",
              "return",
              "dataclass_transform",
              "HTTPSConnectionPool",
              "ExceptionGroup",
              "y1p_zeros",
              "z3core",
              "finalize_array_function_like",
              "resolve_package_path",
              "AsyncTunnelHTTPConnection",
              "isasyncgenfunction",
              "wrappers",
              "pytestPDB",
              "partialmethod",
              "get_list_opt",
              "tornado",
              "auto",
              "is_arborescence",
              "cauchy_geometry",
              "MultiDegreeView",
              "BSpline",
              "loop_first_last",
              "CallbackGetCoreSchemaHandler",
              "leastsq",
              "_TD64Like_co",
              "Directive",
              "BaseTransport",
              "x",
              "users_router",
              "EUCJPProber",
              "asanyarray",
              "PipProvider",
              "LowLevelCallable",
              "SourcePawnLexer",
              "gcd",
              "timeit",
              "MARKER_EXPR",
              "maybe_wrap_pytest_function_for_tracing",
              "URL",
              "estimate_blocksize",
              "sessions",
              "matrix",
              "get_style_by_name",
              "normalize_hookimpl_opts",
              "_AntiGraph",
              "before",
              "iter_entry_points",
              "UnivariateSpline",
              "face",
              "FD_METHODS",
              "mp_assert_allclose",
              "NetrcParseError",
              "GB2312_SM_MODEL",
              "ByteStream",
              "DylanLexer",
              "lp2hp_zpk",
              "specifiers",
              "_prune_array",
              "NOT_SET",
              "DiGraphMatcher",
              "PydanticKnownError",
              "create_urllib3_context",
              "_length_nonmasked",
              "GenzMalikCubature",
              "get_stringdtype_dtype",
              "c_names_dict",
              "zeros_full_output",
              "get_path_uid",
              "SqlLexer",
              "numerictypes",
              "JOHAB_TO_EUCKR_ORDER_TABLE",
              "nested_parse_with_titles",
              "AnyUnreliableByteReceiveStream",
              "osname",
              "outcome",
              "issubdtype",
              "tomllib",
              "_ComplexFloatingCodes",
              "finfo",
              "is_socket_readable",
              "numbers",
              "get_token_header",
              "_UFunc_Nin2_Nout1",
              "set_printoptions",
              "words",
              "WebSocketException",
              "AsyncConnectionPool",
              "Dict",
              "expand_type",
              "spectral_graph_forge",
              "exp2",
              "FixtureDef",
              "Nolan",
              "_UIntPCodes",
              "approximate_current_flow_betweenness_centrality",
              "zpk2tf",
              "print_header_linear",
              "_parse",
              "ComputedFieldInfo",
              "qz",
              "TextIO",
              "lsqr",
              "backport_makefile",
              "deprecate_cython_api",
              "Latin1Prober",
              "spline_filter",
              "Terminal256Formatter",
              "exp",
              "MessageLoggerMiddleware",
              "solveh_banded",
              "anyio",
              "PydanticUndefinedAnnotation",
              "_isscalar",
              "APIKeyHeader",
              "AsyncHTTPProxy",
              "interpn",
              "PydanticUndefined",
              "TestShortLogReport",
              "roots_legendre",
              "eigh_tridiagonal",
              "_NBitLong",
              "cholesky_banded",
              "select",
              "starlette",
              "weakref_finalize",
              "clear",
              "abspath",
              "ValidatorGroup",
              "OdeSolver",
              "factorized",
              "WithJsonSchema",
              "_get_matfile_version",
              "_multivariate",
              "textwrap",
              "tree",
              "UDPSocket",
              "whiten",
              "ellipe",
              "cwt_matrix",
              "_svdp",
              "mmap",
              "DAMAGING_ROUNDING",
              "ReadTimeoutError",
              "AsyncSOCKSProxy",
              "GlobalsNamespace",
              "lsq_linear",
              "CharacterCategory",
              "leiden_communities",
              "abs",
              "Header",
              "Number",
              "TestGraph",
              "whatever",
              "ModelOrDc",
              "SUPPORTED_EXTENSIONS",
              "lambda2nu",
              "PydanticUserError",
              "_pad_test",
              "hermvander",
              "AssertionState",
              "download_all",
              "PydanticPluginProtocol",
              "GoLexer",
              "get_text_stderr",
              "link_analysis",
              "ConstrainedDecimal",
              "field_validator",
              "nbdtrc",
              "truststore",
              "Models",
              "Styled",
              "_ssl",
              "ndtr",
              "myexample",
              "TerminalWriter",
              "quad_vec",
              "laplacian",
              "load_pyproject_toml",
              "_GLOBAL_DEFAULT_TIMEOUT",
              "pandas",
              "imp",
              "wilcoxon",
              "Random",
              "urljoin",
              "_rankdata",
              "jax_autojit",
              "initxfc",
              "make_strictly_feasible",
              "_rbfinterp_pythran",
              "Align",
              "perf_counter",
              "LookupDict",
              "build",
              "assert_array_equal",
              "gather_all_validators",
              "backend",
              "fitpack",
              "_ULongLongCodes",
              "yn_zeros",
              "apply_filters",
              "ORJSONResponse",
              "yvp",
              "new_constraint_to_old",
              "find_plugin_filters",
              "OAuth2AuthorizationCodeBearer",
              "process",
              "uuid",
              "issparse",
              "RBFInterpolator",
              "sniffio",
              "ConnectTimeoutError",
              "hide",
              "_block_diag",
              "cb_rules",
              "bvls",
              "_bessel_poly",
              "get_xp",
              "SimpleNamespace",
              "Base64UrlBytes",
              "get_tests",
              "supported_dtypes",
              "Pager",
              "TraversableResources",
              "DiscreteDistribution",
              "mat_reader_factory",
              "_pep440",
              "loggamma",
              "PatchCollection",
              "set_model_mocks",
              "SchemeLexer",
              "FitResult",
              "asarrays",
              "Span",
              "fmsg",
              "HTTPProxy",
              "_ArrayLikeBool_co",
              "make_default_short_help",
              "mechanisms",
              "FunctionDoc",
              "colorama",
              "default_rng",
              "_flapack",
              "Collector",
              "_workers_wrapper",
              "Control",
              "import_path",
              "PytestCollectionWarning",
              "_StrCodes",
              "BlockingPortal",
              "Candidate",
              "arpack",
              "circulant",
              "mquantiles",
              "directory_arg",
              "ErlangLexer",
              "hessenberg",
              "echo_via_pager",
              "bipartite",
              "main",
              "fromarrays",
              "allTypes",
              "help_option",
              "wrightomega",
              "fail_after",
              "warns",
              "FILE_OR_DIR",
              "mypy",
              "_get_atol_rtol",
              "is_connection_dropped",
              "sliding_window_view",
              "ControlCode",
              "TextType",
              "SmartGameFormatLexer",
              "_pvalue_dunnett",
              "CancelScope",
              "TypeAnalyser",
              "add_newdoc",
              "_ProbabilityDistribution",
              "to_camel",
              "_CLongDoubleCodes",
              "dask",
              "locale",
              "times",
              "pydot",
              "HOOK_LEGACY_PATH_ARG",
              "pager",
              "_NBitIntC",
              "Process",
              "netrc",
              "beta",
              "strategies",
              "pd_NA",
              "NOGIL_BUILD",
              "assert_warns",
              "PydanticRecursiveRef",
              "join",
              "ansari",
              "WSGIMiddleware",
              "DIRECT_URL_METADATA_NAME",
              "_ArrayLikeBytes_co",
              "read_header",
              "locations",
              "hierarchy_test_data",
              "reverse_cuthill_mckee_ordering",
              "min_cost_flow",
              "get_type_ref",
              "DecoratorInfos",
              "before_sleep_log",
              "vf2pp_is_isomorphic",
              "STRING",
              "AsyncLock",
              "termui",
              "array",
              "_tsql_builtins",
              "_minimize_cobyla",
              "NominalAttribute",
              "AsyncRetrying",
              "__expired_attributes__",
              "_DTypeLikeUInt",
              "LinkCollector",
              "LibraryLoader",
              "signm",
              "czt_points",
              "iterate_in_threadpool",
              "_good_shape",
              "LoopbackBackendInterface",
              "_testbuffer",
              "xp_ravel",
              "CacheControl",
              "OPERATORS_LIST",
              "goodness_of_fit",
              "_triage_segments",
              "_argcomplete",
              "kaiser_beta",
              "markinnerspaces",
              "mymodule",
              "getcwd",
              "get_netrc_auth",
              "here",
              "HebrewProber",
              "biadjacency_matrix",
              "dispatch_interface",
              "_detect_program_name",
              "pchip_interpolate",
              "interpret",
              "PostScriptLexer",
              "OPCODES",
              "get_openapi",
              "_linalg",
              "commonprefix",
              "BufferedRandom",
              "COMMENT_RE",
              "open_url",
              "pyparsing_test",
              "fail",
              "Requirement",
              "CppLexer",
              "BaseResolver",
              "BaseModel",
              "ConfigDict",
              "Runner",
              "SubRequest",
              "SKIP_HEADER",
              "get_current_task",
              "generate_metadata",
              "CallableGenerator",
              "dlsim",
              "CommandCollection",
              "date",
              "fastapi",
              "_ufuncs",
              "create_tcp_listener",
              "ChangeReload",
              "gc_collect_iterations_key",
              "platformdirs",
              "NonlinearConstraint",
              "nquad",
              "eq",
              "libm",
              "get_function_type_hints",
              "IMPLEMENTED_LOSSES",
              "LiveRender",
              "lagmul",
              "OP_NO_COMPRESSION",
              "shichi",
              "PydanticDataclass",
              "_sysconfig",
              "circstd",
              "standardize_constraints",
              "enable_vt_processing",
              "node_link_data",
              "test_writable_dir",
              "jacobian",
              "is_dask_namespace",
              "BusyResourceError",
              "yn",
              "arffread",
              "k_edge_augmentation",
              "Gt",
              "INFO_DEFAULT",
              "wrap_app_handling_exceptions",
              "Values",
              "adds",
              "LegacySpecifier",
              "EUCKR_SM_MODEL",
              "thread",
              "ndimage",
              "wishart",
              "caches",
              "check_create_using",
              "spsolve_triangular",
              "EIClass",
              "_support_alternative_backends",
              "AnyArgTCallable",
              "Factory",
              "StringConstraints",
              "EnergyState",
              "Element",
              "HxmlLexer",
              "OP_NO_TICKET",
              "nodes",
              "nbdtri",
              "_fgmres",
              "convert_matrix",
              "lobpcg",
              "cookies",
              "cost_of_flow",
              "pearsonr",
              "Router",
              "hermadd",
              "SnobolLexer",
              "z3rcf",
              "argparse",
              "MultiByteCharSetProber",
              "BrokenResourceError",
              "OcamlLexer",
              "hb_read",
              "ellip_normal",
              "get_ident",
              "AppType",
              "groups",
              "RemoteNotFoundError",
              "CollectReport",
              "MultipartCallbacks",
              "ABAPLexer",
              "qspline1d",
              "JOHAB_SM_MODEL",
              "AllowInfNan",
              "order",
              "chatterjeexi",
              "MemoryObjectReceiveStream",
              "Preference",
              "Body",
              "_ureduce",
              "average_node_connectivity",
              "_run_concurrent_barrier",
              "UUID",
              "python_multipart",
              "h11",
              "FileError",
              "is_pydata_spmatrix",
              "numpy",
              "itemgetter",
              "contextmanager",
              "eye",
              "asdict",
              "analyze",
              "Operator",
              "STRONG_HASHES",
              "Constrain",
              "CacheControlAdapter",
              "UploadFile",
              "karate_club_graph",
              "_ident_like",
              "DEFAULT_TERMINAL_THEME",
              "_methods",
              "egg_link_path_from_sys_path",
              "_get_windows_console_stream",
              "gdtr",
              "odd_ext",
              "mkstemp",
              "AsyncExitStack",
              "lag2poly",
              "replace_types",
              "_HalfCodes",
              "MonteCarloMethod",
              "ImportMode",
              "generate_A",
              "watch",
              "poch",
              "submodules",
              "mstats",
              "StapledObjectStream",
              "GeneratorType",
              "HTTPStatus",
              "SmallSampleWarning",
              "build_auxiliary_edge_connectivity",
              "jn",
              "TemporaryDirectory",
              "stop_after_delay",
              "PCG64",
              "_odepack",
              "Fore",
              "LazyFile",
              "ref",
              "Package",
              "fixup_namespace_packages",
              "machinery",
              "old_bound_to_new",
              "TypeAdapter",
              "approximate_taylor_polynomial",
              "RectSphereBivariateSpline",
              "H11Protocol",
              "hermdiv",
              "rvs_rcont1",
              "HAS_REFCOUNT",
              "_get_pvalue",
              "Modula2Lexer",
              "WSProtocol",
              "_abw_state",
              "_builtin_exprs",
              "set_module",
              "Normalize",
              "ConvexHull",
              "get_best_encoding",
              "graphviews",
              "AnyByteSendStream",
              "RustLexer",
              "prompt",
              "LFR_benchmark_graph",
              "fisher_exact",
              "_nonmonotone_line_search_cruz",
              "msgpack",
              "fraction_validator",
              "atlas",
              "hermeder",
              "single",
              "sosfilt",
              "setup",
              "Console",
              "array_namespace",
              "_lqn",
              "ByteSendStream",
              "within_block_loop",
              "format_explanation",
              "powm1",
              "nnls",
              "retry_if_not_exception_message",
              "AsyncHTTP2Connection",
              "UnsupportedExtension",
              "get_index_dtype",
              "factorial2",
              "_ArrayLikeInt_co",
              "BadZipFile",
              "JAX",
              "VERSION",
              "distance_matrix",
              "assert_func_equal",
              "Queue",
              "parse_date",
              "WouldBlock",
              "pad",
              "t",
              "ScriptMaker",
              "HTTPBase",
              "unicode_literals",
              "generic_node_match",
              "spsolve",
              "gamma",
              "netcdf_file",
              "PreparedRequest",
              "harmonic_centrality",
              "json_graph",
              "Spinner",
              "OuterDict",
              "option",
              "BadSignature",
              "_measurements",
              "TornadoRetrying",
              "_broadcast_array_shapes_remove_axis",
              "retry",
              "strip_ansi",
              "pi",
              "polyvalfromroots",
              "psutil",
              "index",
              "givens_elimination",
              "AnyUnreliableByteSendStream",
              "hermval3d",
              "getdoc",
              "ExitStack",
              "InvalidURL",
              "ndarray",
              "is_python_scalar",
              "ObjectReceiveStream",
              "show",
              "_manylinux",
              "parsedate",
              "Enum",
              "skip_xp_invalid_arg",
              "unicodedata",
              "get_info",
              "toeplitz",
              "eigvalsh_tridiagonal",
              "assert_almost_equal",
              "unitary_group",
              "RLock",
              "ProxySchemeUnsupported",
              "dotenv_values",
              "HTMLResponse",
              "InsecureRequestWarning",
              "_check_unknown_options",
              "Optional",
              "lsmr",
              "HookCaller",
              "_decomp",
              "median_test",
              "is_typeddict",
              "version_info",
              "ngettext",
              "retry_if_not_exception_type",
              "get_scope_node",
              "KeysView",
              "BaseConfig",
              "JavascriptLexer",
              "LogtalkLexer",
              "_ctypes",
              "IP_VALIDATOR_LOOKUP",
              "bootstrap",
              "RequestErrorModel",
              "mpsig",
              "render_scope",
              "getargspec",
              "logsumexp",
              "onenormest",
              "file",
              "InstallRequirementProvider",
              "wrap_session",
              "sysconfig",
              "function_name",
              "affine_transform",
              "divide_line",
              "wait_for_read",
              "LogRecord",
              "_UIntCCodes",
              "_contains_nan",
              "FortranFormatParser",
              "Rotation",
              "distance_transform_bf",
              "AdjacencyView",
              "asunicode",
              "tanhsinh",
              "argrelmin",
              "swapaxes",
              "Base64Decoder",
              "arctanh",
              "WeakValueDictionary",
              "bernoulli",
              "_ScalarLike_co",
              "assert_raises_regex",
              "assert_header_parsing",
              "scalar_search_wolfe1",
              "_minimize_dogleg",
              "solve_sylvester",
              "FormatControl",
              "BufferFull",
              "logging",
              "_NBitShort",
              "constitutional_compliance",
              "relabel_nodes",
              "MemoizeJac",
              "meta_namespace",
              "boxcox",
              "AsyncSocks5Connection",
              "lu_dispatcher",
              "wasserstein_distance",
              "tokenize",
              "CO_VARKEYWORDS",
              "_Interpolator1D",
              "DistlibException",
              "lagfromroots",
              "_generate_weighted_edges",
              "multivariate_t",
              "_ni_label",
              "Generator",
              "dtype",
              "y0_zeros",
              "compile",
              "MappingNamespace",
              "display_as_type",
              "_wrap_radians",
              "TempdirFactory",
              "COMMON_ATTRIBUTES",
              "CholmodTypeConversionWarning",
              "AnsiToWin32",
              "Structure",
              "MT19937",
              "make_ndbspl",
              "derivative",
              "_sym_ortho",
              "SparseEfficiencyWarning",
              "URLPattern",
              "EventStatistics",
              "S_ISREG",
              "edge_betweenness_centrality",
              "_NBitDouble",
              "Starlette",
              "uniform",
              "_continued_fraction",
              "CoreMetadata",
              "minimum_st_node_cut",
              "hypergeom",
              "inter_community_edges",
              "ObjectiveFunWrapper",
              "RedisCache",
              "overrides",
              "_UInt16Codes",
              "ENOTDIR",
              "namedtuple",
              "_InfiniteLimitsTransform",
              "_fix_promotion",
              "_ComplexLike_co",
              "ConnectionClosed",
              "Punctuation",
              "PydanticOmit",
              "spmatrix",
              "RequestValidationError",
              "_ScopeName",
              "hermval",
              "csr_matrix",
              "blah",
              "_sf_error_test_function",
              "FormatTimeCallable",
              "zscore",
              "z3poly",
              "paths",
              "arctan2",
              "aix_platform",
              "html",
              "EUCTWProber",
              "Module",
              "zip_dir",
              "GherkinLexer",
              "SFC64",
              "_UIntCodes",
              "clear_floatstatus",
              "hypothesis",
              "TerminalRepr",
              "node_connectivity",
              "jnyn_zeros",
              "AbstractSet",
              "capi_maps",
              "generate_binary_structure",
              "NoneMetadataError",
              "default_environment",
              "getlimits",
              "FormParser",
              "wait_socket_writable",
              "qmc_quad",
              "tf2sos",
              "xmlrpc",
              "create_terminal_writer",
              "VerticalAlignMethod",
              "HookRecorder",
              "get_args",
              "svds",
              "HookimplOpts",
              "_ArrayLikeFloat_co",
              "DoAttempt",
              "multinomial",
              "_extract",
              "hexlify",
              "curio",
              "string_types",
              "urlretrieve",
              "firwin_2d",
              "bracket",
              "fill_typevars",
              "zstandard",
              "_orthogonal",
              "tty",
              "urlparse",
              "Base64Bytes",
              "SHGO",
              "trim_zeros",
              "diag",
              "ntlm",
              "ResourceGuard",
              "get_user_id",
              "truncate",
              "kurtosis",
              "alexandergovern",
              "_BaseVersion",
              "CurrentEdge",
              "PydanticGenericMetadata",
              "AsyncLibraryNotFoundError",
              "drot",
              "savefilt",
              "idnadata",
              "ConflictDetails",
              "RequestsDependencyWarning",
              "FloatRange",
              "parse_qs",
              "PearsonRResult",
              "data_fetcher",
              "ARRAY_FUNCTIONS",
              "AnsiDecoder",
              "convert_path",
              "nu2lambda",
              "HTTPException",
              "lagfit",
              "c_einsum",
              "_mql_builtins",
              "general_hamming",
              "WebSocket",
              "HiddenText",
              "get_all_backends",
              "tracemalloc_message",
              "array_function_dispatch",
              "CYGWIN",
              "constr_length_validator",
              "wait_all_tasks_blocked",
              "polyutils",
              "from",
              "iv",
              "arccosh",
              "format",
              "studentized_range",
              "LogCaptureFixture",
              "_Final",
              "Covariance",
              "cgi",
              "make_test_card",
              "qmc",
              "bisect_left",
              "num_obs_y",
              "lagvander3d",
              "format_exception_only",
              "adjacency_data",
              "ensure_dir",
              "entry_points",
              "Form",
              "_aix_support",
              "convolve",
              "_pocketfft_umath",
              "_pagerank_numpy",
              "Skipped",
              "default_hooks",
              "argsreduce",
              "_registered_algorithms",
              "electrocardiogram",
              "PathLike",
              "getattr_migration",
              "params",
              "PerlLexer",
              "_minimize_trust_ncg",
              "_remove_redundancy_svd",
              "Redis",
              "_validate_fs",
              "remez",
              "UNKNOWN",
              "_transition_to_rng",
              "BytesIO",
              "Any",
              "DEFAULT_TIMEOUT_CONFIG",
              "EBADF",
              "new",
              "_stats",
              "SplitResult",
              "indent",
              "erfinv",
              "_postsolve",
              "UuidVersion",
              "arcsin",
              "is_locally_k_edge_connected",
              "sys",
              "WebSocketState",
              "fmin_l_bfgs_b",
              "Command",
              "Rbf",
              "tzinfo",
              "PydanticImportError",
              "localhost:3128",
              "FieldInfo",
              "repack_fields",
              "fmin_bfgs",
              "rel_entr",
              "XmlLexer",
              "erf",
              "_googlesql_builtins",
              "compileall",
              "c_char_p",
              "fromrecords",
              "friedmanchisquare",
              "__cpu_targets_info__",
              "to_bytes_or_str",
              "_log1mexp",
              "WHEEL_EXTENSION",
              "get_runnable_pip",
              "py_compile",
              "COCOA_INTERFACES",
              "_NBitByte",
              "cell_len",
              "on",
              "SOCKSProxyManager",
              "spectrum",
              "_sigtools",
              "TopRequest",
              "node_classification",
              "BitGenerator",
              "DataclassTypeError",
              "canonicalize_name",
              "TLSStream",
              "resolve_color_default",
              "create_command",
              "CLIENT",
              "PPoly",
              "PIPE",
              "_DTypeLike",
              "gnm_random_graph",
              "AddressFamily",
              "_nonlin",
              "is_perfect_matching",
              "TclLexer",
              "right_shift",
              "maximum_flow_value",
              "according",
              "tee",
              "CallInfo",
              "get_lapack_funcs",
              "_ScalarFunctionWrapper",
              "StrategyChain",
              "is_installable_dir",
              "_generics",
              "PytestPluginManager",
              "_utils",
              "_CharLike_co",
              "ReprFileLocation",
              "StaticFiles",
              "TextWrapper",
              "dunnett",
              "kmeans2",
              "_ni_support",
              "radians",
              "HTTPSConnection",
              "later",
              "AsyncMockBackend",
              "FastAPI",
              "threadpoolctl",
              "randint",
              "CERT_REQUIRED",
              "SkipJsonSchema",
              "get_prog",
              "HTTPBasicAuth",
              "nx",
              "ipaddress",
              "codec_info",
              "_basic_backend",
              "cc_dot",
              "MultiDiGraph",
              "primes_from_2_to",
              "MultiAdjacencyView",
              "InstallationError",
              "zipimport",
              "get_blas_funcs",
              "is_threshold_graph",
              "xp_available_backends",
              "ResolutionImpossible",
              "Mount",
              "maximal_matching",
              "rv_generic",
              "BaseAttrGraphTester",
              "levy_stable",
              "betainc",
              "dstn",
              "kolmogorov",
              "spline_filter1d",
              "getfuncargnames",
              "rv_continuous_frozen",
              "HTTPConnectionPool",
              "shlex",
              "threshold",
              "helper",
              "Final",
              "NamedTuple",
              "literal_destringizer",
              "format_size",
              "EMOJI",
              "check_random_state",
              "get_unique_redefinition_name",
              "mr_",
              "cdist",
              "Backend",
              "_local_maxima_1d",
              "to_numpy_code",
              "_appengine_environ",
              "NullFile",
              "Directory",
              "the",
              "ParserSyntaxError",
              "__cpu_baseline__",
              "typing_inspection",
              "combine_pvalues",
              "spherical_jn",
              "local_edge_connectivity",
              "_flapack_64",
              "basic",
              "AbstractRaises",
              "c_void_p",
              "tf2ss",
              "even_ext",
              "DeferredType",
              "splev",
              "is_isomorphic",
              "IDLLexer",
              "finder",
              "CbmBasicV2Lexer",
              "filelock",
              "_init_nd_shape_and_axes",
              "_distutils",
              "getfslineno",
              "urlencode",
              "PydanticDeprecatedSince211",
              "legendre",
              "zipf",
              "_fftlog_backend",
              "ParseError",
              "jvp",
              "windows",
              "reload",
              "limited_api1",
              "_pytest",
              "_linprog_simplex",
              "dedent",
              "at",
              "operators",
              "find_plugin_styles",
              "BaseFileLock",
              "_UFunc_Nin1_Nout1",
              "TypeGuard",
              "_parse_network_text",
              "docutils",
              "packbits",
              "TempPathFactory",
              "_UShortCodes",
              "IPAddressType",
              "_fftlog",
              "AsyncGenerator",
              "safe_eval",
              "find_spec",
              "httptools",
              "pytz",
              "ModelPrivateAttr",
              "PytestReturnNotNoneWarning",
              "MultiGraph",
              "check_distribution_rvs",
              "DiffLexer",
              "_expand_args",
              "_dispatch",
              "_mstats_extras",
              "circvar",
              "dia_matmat",
              "_bounded_integers",
              "faulthandler",
              "Argument",
              "argrelextrema",
              "PydanticJsonSchemaWarning",
              "Format",
              "typing_extensions",
              "UUID7",
              "filters",
              "_SimpleNormal",
              "y1",
              "open_spinner",
              "check_derivative",
              "_clapack",
              "multiscale_graphcorr",
              "create_proxy_ssl_context",
              "LaplacianNd",
              "_cplxpair",
              "array_utils",
              "rng_integers",
              "BaseDistribution",
              "HookCallError",
              "SPINNERS",
              "TypeVar",
              "nbinom",
              "RegularGridInterpolator",
              "hopcroft_karp_matching",
              "nrdtrisd",
              "TukeyHSDResult",
              "_clear_cache",
              "short_version",
              "doccer",
              "Testdir",
              "write_output",
              "httpx",
              "iscoroutinefunction",
              "hermeval",
              "FORWARD",
              "LEXERS",
              "herme2poly",
              "morphology",
              "xp_default_dtype",
              "run",
              "Signature",
              "ServerPerMessageDeflateFactory",
              "_build_paths_from_predecessors",
              "wasserstein_distance_nd",
              "_kind_name",
              "symiirorder1",
              "ControlType",
              "MappedQueue",
              "assert_",
              "messages",
              "Keyword",
              "Scanner",
              "OpenAPI",
              "xp_assert_close",
              "broadcast_shapes",
              "encode",
              "expanduser",
              "join_options",
              "FortranFile",
              "pseudo_huber",
              "multi_dot",
              "vcs",
              "multiprocessing",
              "assertoutcome",
              "identityhash_tester",
              "RawIOBase",
              "deepcopy",
              "sos2tf",
              "_pagerank_scipy",
              "classes",
              "RichHandler",
              "_fitpack_repro",
              "AsyncNetworkStream",
              "this",
              "flow",
              "tf2zpk",
              "_DTypeLikeVoid",
              "factorial",
              "redact_auth_from_url",
              "confirm",
              "FilesystemWheel",
              "MagicMock",
              "left_shift",
              "getLogger",
              "pythonapi",
              "format_exception",
              "NamespacesTuple",
              "_builtincoeffs",
              "pip",
              "_DT64Codes",
              "_specfun",
              "AnyIOBackend",
              "invpascal",
              "parse",
              "certs",
              "Big5Prober",
              "Arbiter",
              "filesize",
              "filter_traceback",
              "clear_cache",
              "ConnectedUNIXDatagramSocket",
              "Chebyshev",
              "_repr",
              "closest_STFT_dual_window",
              "_sort_cmplx",
              "itertools",
              "intranges_contain",
              "MakefileLexer",
              "_EERRORINCREASE",
              "Result",
              "inline",
              "smirnovi",
              "ReadError",
              "UnpicklingError",
              "BIG5_SM_MODEL",
              "struct",
              "no_filter",
              "_weight_function",
              "_is_separating_set",
              "BrokenWorkerProcess",
              "interval_graph",
              "boykov_kolmogorov",
              "algorithms",
              "email_validator",
              "Class",
              "_internal",
              "mp",
              "node_attribute_xy",
              "MARKED_FIXTURE",
              "wcswidth",
              "pdist",
              "LocationParseError",
              "rv_discrete_frozen",
              "_xp_device_snippet",
              "get_array_function_like_doc",
              "pyplot",
              "run_process",
              "get_fileno",
              "Action",
              "find_peaks",
              "Multiprocess",
              "default_ref_template",
              "UNPROCESSED",
              "SafeFileCache",
              "OocLexer",
              "_Float16Codes",
              "is_fp_closed",
              "numpy_distutils",
              "run_threaded",
              "HookRelay",
              "cupyx",
              "cupy",
              "egg_link_path_from_location",
              "pyopenssl",
              "__requires__",
              "heappop",
              "Normal",
              "sigmaclip",
              "Palette",
              "_derivative",
              "AnyUnreliableByteStream",
              "WheelCache",
              "builtin_str",
              "Specifier",
              "extbuild",
              "_cospi",
              "_rank_filter_1d",
              "least_squares",
              "hyp2f1",
              "coo_array",
              "CharSetProber",
              "as_strided",
              "repeat",
              "is_numpy",
              "stop_never",
              "random_table",
              "commonpath",
              "griddata",
              "Scheme",
              "get_export_entry",
              "PrimitiveData",
              "MARK_GEN",
              "umath",
              "BugsLexer",
              "ArpackNoConvergence",
              "b64encode",
              "Highlighter",
              "ss2tf",
              "is_from_cache",
              "LABELS",
              "kvp",
              "redrho",
              "fcluster",
              "betainccinv",
              "iinfo",
              "dirichlet",
              "RequirementInformation",
              "jinja2",
              "uniform_filter1d",
              "parse_duration",
              "Name",
              "cgs",
              "_frozen_importlib_external",
              "RetryCallState",
              "sha256",
              "ExceptionChainRepr",
              "eval_type_backport",
              "Extensions",
              "NearestNDInterpolator",
              "InterpolatedUnivariateSpline",
              "SJIS_SM_MODEL",
              "nctdtr",
              "masked",
              "gaussian_kernel_estimate",
              "measurements",
              "get_plugins",
              "get_osfhandle",
              "cryptography",
              "BaseConfigurator",
              "_CharacterCodes",
              "FormattedExcinfo",
              "group_columns",
              "get_platlib",
              "updatepole",
              "ssl",
              "Device",
              "encodings",
              "Pytester",
              "AbstractResolver",
              "skip",
              "_FiniteNestedSequence",
              "hermweight",
              "lib",
              "NDArrayOperatorsMixin",
              "bessel",
              "DLexer",
              "failures",
              "elliprf",
              "SizedBuffer",
              "ZipInfo",
              "NullHandler",
              "_imp",
              "method_files_map",
              "InstallationReport",
              "_FloatLike_co",
              "ObjectStream",
              "english_lower",
              "EUCJPDistributionAnalysis",
              "JOHABProber",
              "Axes3D",
              "map_type_from_supertype",
              "pick_bool",
              "coroutines",
              "AppEngineManager",
              "IniConfig",
              "runpy",
              "looks_like_xml",
              "os",
              "HTTP_403_FORBIDDEN",
              "CodingStateMachineDict",
              "_formats",
              "io",
              "spherical_kn",
              "to_bytes",
              "which",
              "AsyncIterable",
              "_arpack",
              "PackageFinder",
              "multivariate_hypergeom",
              "Metadata",
              "lzma",
              "xmlrpclib",
              "ufunc",
              "hermmul",
              "MarkDecorator",
              "_multiufuncs",
              "contingency",
              "RandomState",
              "__main__",
              "Middleware",
              "argrelmax",
              "normalize_version_info",
              "dirname",
              "permutations",
              "KDTree",
              "_cosine_cdf",
              "primitive_value_to_str",
              "InverseJacobian",
              "elliprd",
              "with_special_errors",
              "drawing",
              "mp_hyp2f1",
              "BashLexer",
              "isatty",
              "_ArrayLikeDT64_co",
              "get_default_arg_names",
              "__description__",
              "scipy",
              "FPUModeChangeWarning",
              "pytest_fail_slow",
              "quad",
              "ERROR",
              "get_type_hints",
              "Model",
              "keyword",
              "networkx",
              "AsyncNetworkBackend",
              "cythonize",
              "version",
              "zip_longest",
              "eig_banded",
              "mgrid",
              "rm_rf",
              "requires_memory",
              "these",
              "coreviews",
              "QueryParams",
              "little_endian",
              "HasFileno",
              "java",
              "hookspec",
              "StringIO",
              "SchemaTypePath",
              "ENOENT",
              "given",
              "tklmbda",
              "Mark",
              "DTypeLike",
              "BaseSSLError",
              "AnnotationSource",
              "InstalledDistribution",
              "Query",
              "Tag",
              "orth",
              "StrBytes",
              "Receive",
              "_logspace",
              "det",
              "_fitpack",
              "Iterable",
              "lxml",
              "_IntegerCodes",
              "packaging",
              "exec_mod_from_location",
              "float64",
              "fftshift",
              "is_local",
              "rand",
              "mock_backend",
              "median",
              "_arffread",
              "UnrewindableBodyError",
              "ISO_8859_9_TURKISH_MODEL",
              "shift",
              "CONTENT_CHUNK_SIZE",
              "collect_dynamic_libs",
              "DecoratedCallable",
              "PydanticMetadata",
              "scandir",
              "absolute",
              "fft2",
              "_fft",
              "hermder",
              "Path",
              "include",
              "log_wright_bessel",
              "override",
              "multiarray",
              "english_upper",
              "dfitpack_int",
              "has_tls",
              "GeneratorContextManager",
              "show_all",
              "node_degree_xy",
              "Syntax",
              "MultiHostUrl",
              "Counter",
              "nchypergeom_fisher",
              "hermgrid2d",
              "normalize_dual_quaternion",
              "tournament",
              "container",
              "cython",
              "sequence_validator",
              "dtrsm",
              "Mixture",
              "MachineState",
              "exists",
              "diags",
              "expm_cond",
              "SearchScope",
              "Padding",
              "zlib",
              "sine_ctypes",
              "sys_tags",
              "to_native_string",
              "_NBitInt",
              "style",
              "READERS",
              "PytestRemovedIn9Warning",
              "read_chunks",
              "Pretty",
              "_sparsetools",
              "savgol_filter",
              "unstyle",
              "retry_if_exception_type",
              "graphmatrix",
              "PydanticSchemaGenerationError",
              "argument",
              "parse_distributions_h",
              "_ULongCodes",
              "gcrotmk",
              "patch",
              "expon",
              "ReentrancyLock",
              "pydantic",
              "RequirementSet",
              "_ShapeLike",
              "current_effective_deadline",
              "_weights_are_valid",
              "MaskedRecords",
              "brotli",
              "packages",
              "aclose_forcefully",
              "Parser",
              "try_argcomplete",
              "NdBSpline",
              "linear_sum_assignment",
              "gstd",
              "erfcinv",
              "realpath",
              "pooch",
              "_obsolete_constants",
              "apply_where",
              "OAuth2",
              "_normalize_host",
              "UNIXDatagramSocket",
              "lowest_common_ancestors",
              "get_real_func",
              "_lsoda",
              "SocketListener",
              "quote",
              "gc",
              "resource",
              "_uarray",
              "_get_ctx",
              "HTTP_401_UNAUTHORIZED",
              "indent_log",
              "captured_stdout",
              "create_model_from_typeddict",
              "levinson",
              "make_headers",
              "hermevander",
              "build_auxiliary_node_connectivity",
              "SpecialFunctionWarning",
              "wait_writable",
              "py",
              "bytes_",
              "Key",
              "import_cached_base_model",
              "CaptureManager",
              "page_trend_test",
              "obrientransform",
              "AnsiFore",
              "PROTOCOL_SSLv23",
              "ActionScriptLexer",
              "crosstab",
              "parse_command",
              "DistutilsBackend",
              "_highs_wrapper",
              "or",
              "zero_ext",
              "ctags",
              "__pypy__",
              "ModelicaLexer",
              "ClassVar",
              "mannwhitneyu",
              "fdtrc",
              "adjacent_tmp_file",
              "stop_all",
              "typing",
              "normpath",
              "NumericalInversePolynomial",
              "LPWSTR",
              "good_size",
              "euclidean",
              "create_py_random_state",
              "urllib3_secure_extra",
              "PytestConfigWarning",
              "WebSocketProtocol",
              "set_dataclass_mocks",
              "_array_converter",
              "entr",
              "get_all_styles",
              "Scope",
              "queue",
              "cossin",
              "_Namespace",
              "Qualifier",
              "hermgrid3d",
              "AutoItLexer",
              "takewhile",
              "FuncFixtureInfo",
              "_Int32Codes",
              "_calc_uniform_order_statistic_medians",
              "multipart",
              "ContextVar",
              "degree_mixing_dict",
              "get_overridable_numpy_array_functions",
              "_quadpack",
              "ServerProtocol",
              "_testutils",
              "polyval",
              "fftfreq",
              "FortranLexer",
              "ParsedRequirement",
              "format_options",
              "generate_knots",
              "_postgres_builtins",
              "ReprHighlighter",
              "_mmio",
              "_open_file_context",
              "UUID1",
              "get_buffer_info",
              "DegenerateDataWarning",
              "fromnumeric",
              "MaskType",
              "GB2312Prober",
              "ReprEntry",
              "edmonds_karp_core",
              "hermcompanion",
              "PrologLexer",
              "_polyutils",
              "Subprotocol",
              "reshape",
              "Column",
              "Retry",
              "railroad",
              "reportviews",
              "IPSockAddrType",
              "collapse_excgroups",
              "PyObject",
              "make_compact",
              "anderson",
              "PluggyWarning",
              "Stash",
              "_ArrayLikeStr_co",
              "lagvander2d",
              "PlainTextResponse",
              "CSharpLexer",
              "AbstractDistribution",
              "dlti",
              "pprint",
              "eigvalsh",
              "sparse",
              "eigh",
              "MissingSchema",
              "leslie",
              "_CSingleCodes",
              "boxcox1p",
              "connect_unix",
              "_deprecated",
              "SessionCommandMixin",
              "rich_cast",
              "pygraphviz",
              "_emoji_replace",
              "SuperLU",
              "TestClient",
              "_wrap_callback",
              "ECLLexer",
              "WIN",
              "MaxEvalError",
              "AsyncContextManager",
              "NetworkXNotImplemented",
              "GetJsonSchemaHandler",
              "pinv",
              "jnp_zeros",
              "_fblas",
              "assert_deallocated",
              "get_url_scheme",
              "AlignMethod",
              "Annotated",
              "get_console",
              "betaincc",
              "zoom_fft",
              "JSONDecodeError",
              "defaultdict",
              "func_dep_1",
              "chebyu",
              "_upfirdn_modes",
              "FORMATTERS",
              "new_bounds_to_old",
              "process_nl_constraints",
              "mkdir",
              "_stats_py",
              "get_array_wrap",
              "Heap",
              "codata",
              "lti",
              "JSONResponse",
              "edges_equal",
              "bridge_components",
              "OddsRatioResult",
              "nan",
              "_signaltools",
              "_remove_redundancy_pivot_dense",
              "_set_ssl_context_verify_mode",
              "parse_options_header",
              "_ni_docstrings",
              "Generic",
              "urlopen",
              "concurrent",
              "IdentityOperator",
              "CaptureFixture",
              "csr_hstack",
              "fiedler_companion",
              "move_on_after",
              "z3util",
              "Origin",
              "ASGI3Application",
              "SpooledTemporaryFile",
              "ConnectionPool",
              "shape_base",
              "ConfigWrapper",
              "spherical_yn",
              "RelativeRiskResult",
              "Example",
              "assert_array_less",
              "_css_properties",
              "_scilab_builtins",
              "hyp1f1",
              "BadMetadata",
              "fromshare",
              "mimetypes",
              "Editor",
              "spbandwidth",
              "APIRoute",
              "WebSocketServerProtocol",
              "_generate_schema",
              "uvloop",
              "ImportFrom",
              "english_capitalize",
              "Columns",
              "Delaunay",
              "geometric_slerp",
              "wait_combine",
              "finishes",
              "const_ext",
              "BaseRetrying",
              "FAVORITE_HASH",
              "group",
              "libc_ver",
              "classImplements",
              "rosen",
              "_call_callback_maybe_halt",
              "rules",
              "_root_hybr",
              "HTTPDigest",
              "histogram",
              "lattice_reference",
              "hkn_harary_graph",
              "matplotlib",
              "_NoValue",
              "_skip_if_dtype",
              "Connection",
              "edge_connectivity",
              "fcompiler",
              "UnreliableObjectSendStream",
              "trima",
              "parse_marker",
              "general_cosine",
              "IndexMixin",
              "min_weight_full_bipartite_matching",
              "auto_decode",
              "isfinite",
              "import_cached_field_info",
              "HeaderParsingError",
              "LocalProtocolError",
              "hermediv",
              "gaussian_kde",
              "incref_elide",
              "BinaryIO",
              "UserDict",
              "conda_support",
              "logit",
              "special_ortho_group",
              "_get_pypirc_command",
              "check_legacy_setup_py_options",
              "EXCEPTIONS",
              "SyncByteStream",
              "_96Bit",
              "error",
              "auto_wrap_for_ansi",
              "Measurement",
              "CFConst",
              "random_array",
              "BrainfuckLexer",
              "slsqp",
              "expandvars",
              "__version__",
              "lu",
              "cg",
              "optimize",
              "ServerErrorMiddleware",
              "Unix",
              "_DTypeLikeDT64",
              "show_options",
              "Fortran",
              "sksparse",
              "scoreatpercentile",
              "_test_internal",
              "assert_array_compare",
              "ellip_harm_2",
              "get_route_path",
              "ComputedField",
              "MikotaPair",
              "_Float32Codes",
              "errstate",
              "elliprg",
              "_in_proc_script_path",
              "AliasChoices",
              "CLIP",
              "set_file_position",
              "CollectErrorRepr",
              "dst",
              "make_system",
              "block_array",
              "is_url",
              "REQUIRES_PYTHON_IDENTIFIER",
              "LPCWSTR",
              "herm2poly",
              "could_be_isomorphic",
              "secrets",
              "_SupportsDType",
              "sample",
              "ROOT_SCALAR_METHODS",
              "MultiDomainBasicAuth",
              "BaseReporter",
              "retry_base",
              "fftn",
              "NoArgsIsHelpError",
              "Dispatchable",
              "cmath",
              "formatting",
              "_interpreters",
              "pwd",
              "_get_wilcoxon_distr",
              "linspace",
              "rankdata",
              "PipSession",
              "ColorSystem",
              "saferepr_unlimited",
              "PoolManager",
              "col",
              "_sql_builtins",
              "filename_arg",
              "dop853_coefficients",
              "create_unix_datagram_socket",
              "DegreeView",
              "_get_sfloat_dtype",
              "NoReturn",
              "it",
              "CoreSchema",
              "cumulative_distribution",
              "applyrules",
              "ExtendedRegexLexer",
              "StreamConsumedError",
              "marshal",
              "SJISDistributionAnalysis",
              "_DTypeLikeStr",
              "find_root",
              "outer",
              "_minpack",
              "getpass",
              "TestCase",
              "floor",
              "MarkGenerator",
              "targets",
              "fractions",
              "_SingleCodes",
              "is_builtin_dataclass",
              "shortest_paths",
              "find_plugin_formatters",
              "solve",
              "WaitBaseT",
              "npy_char_deprecation",
              "_NBitHalf",
              "DelphiLexer",
              "StatReload",
              "asynccontextmanager",
              "Ge",
              "should_strip_ansi",
              "_zeros",
              "find_library",
              "_morestats",
              "uniform_direction",
              "fdtridfd",
              "WinError",
              "get_windows_console_features",
              "UnionType",
              "_UFunc_Nin1_Nout2",
              "BrokenWorkerIntepreter",
              "print_json",
              "ROBLOX_BUILTINS",
              "platform",
              "recfunctions",
              "zeros",
              "get_authorization_scheme_param",
              "imag",
              "is_pure_conda",
              "parse_url",
              "hmac",
              "softmax",
              "path",
              "RequestMethods",
              "gettempdirb",
              "SingleByteCharSetModel",
              "LeanLexer",
              "PlatformDirs",
              "_ArrayLikeUInt_co",
              "generate_multimethod",
              "timezone",
              "Configuration",
              "barbell_graph",
              "coo_matrix",
              "constant_validator",
              "defmatrix",
              "common_z3",
              "inf",
              "JsonLexer",
              "update_wrapper",
              "lp2lp_zpk",
              "_minimize_cobyqa",
              "SJISProber",
              "UTF8Prober",
              "empty_graph",
              "complete_to_chordal_graph",
              "c_bool",
              "Polynomial",
              "matrix_normal",
              "arbitrary_element",
              "_registry",
              "ConftestImportFailure",
              "SEEK_SET",
              "submodule",
              "dia_matrix",
              "records",
              "_max_len_seq_inner",
              "get_build_tracker",
              "kn",
              "getaddrinfo",
              "hankel",
              "_aligned_zeros",
              "_b_orthonormalize",
              "create_custom_field_dtype",
              "IS_PYPY",
              "JsonDict",
              "MappingProxyType",
              "rich",
              "_ByteCodes",
              "isfunction",
              "_broadcast_arrays",
              "collect_one_node",
              "version_tuple",
              "IOBase",
              "minimize",
              "scimath",
              "findsource",
              "odds_ratio",
              "HTTP11Connection",
              "gauss_spline",
              "pressure_network",
              "ellipk",
              "AsyncFile",
              "svd",
              "UrbiscriptLexer",
              "generators",
              "is_async_function",
              "WeakSet",
              "ReprTraceback",
              "NimrodLexer",
              "BaseHTTPMiddleware",
              "dirichlet_multinomial",
              "ReprEntryNative",
              "NumericAttribute",
              "errmess",
              "create_model_from_namedtuple",
              "FieldValidatorModes",
              "_to_banded",
              "NotSetType",
              "TestLoader",
              "y0",
              "PydanticInvalidForJsonSchema",
              "state",
              "ParameterSource",
              "IndexContent",
              "shebang_matches",
              "double",
              "Image",
              "newlist_hint",
              "mkdtemp",
              "lenient_issubclass",
              "make_target_python",
              "make_pass_decorator",
              "__diag__",
              "JsonSchemaValue",
              "showversion",
              "doctest",
              "Popen",
              "EulerGamma",
              "lu_factor",
              "_SubsetHookCaller",
              "_ansimap",
              "INT",
              "rv_discrete",
              "BackgroundTasks",
              "_FlexibleCodes",
              "EscCharSetProber",
              "prepare_bounds",
              "Literal",
              "gaussian",
              "YamlLexer",
              "NOTSET",
              "interp_complex",
              "html_doctype_matches",
              "_HostType",
              "_project",
              "lexers",
              "SSLTransport",
              "Abort",
              "if",
              "h1vp",
              "string",
              "Signals",
              "EUCJP_SM_MODEL",
              "Required",
              "serialize_sequence_via_list",
              "configparser",
              "pdb",
              "intp",
              "lp2bs_zpk",
              "process_time",
              "httplib",
              "_BytesCodes",
              "keyring",
              "AnyStr",
              "bisect",
              "SyncBackend",
              "zmap",
              "copysign",
              "minimum_cut",
              "PRINT_OPTIONS",
              "_ArrayLikeComplex128_co",
              "Exit",
              "ediff1d",
              "iniconfig",
              "minimum_cut_value",
              "normalize_mark_list",
              "WWWScope",
              "_SupportsArrayFunc",
              "special",
              "check_requires_python",
              "attr",
              "is_dataclass",
              "SMLLexer",
              "NuSMVLexer",
              "differential_entropy",
              "Uniform",
              "timeout",
              "HTTPResponse",
              "StreamWrapper",
              "FTARGET_ACHIEVED",
              "operator",
              "toarray",
              "Buffer",
              "safe_extra",
              "_VoidCodes",
              "aslinearoperator",
              "peek_filelike_length",
              "kolmogn",
              "NumPy",
              "name",
              "HAS_ILP64",
              "components",
              "splprep",
              "TypedDict",
              "MachAr",
              "PytestCacheWarning",
              "delete",
              "barycentric_interpolate",
              "get_arrays_tol",
              "inner",
              "entropy",
              "extract_tb",
              "validator",
              "HaskellLexer",
              "number",
              "_interpqueues",
              "newton_cotes",
              "get_app_dir",
              "NoWayToWaitForSocketError",
              "ModelNameMap",
              "cycle_graph",
              "_DASK_DEVICE",
              "_no_tracing",
              "f2py2e",
              "ClosedPoolError",
              "skewtest",
              "call_subprocess",
              "LatexEmbeddedLexer",
              "TEST_OUTCOME",
              "CoreSchemaField",
              "huber",
              "_IntLike_co",
              "hermvander3d",
              "site",
              "get_text_stream",
              "generate_pydantic_signature",
              "_model_construction",
              "lagval",
              "setuptools",
              "_onenormest_core",
              "build_flow_dict",
              "find_eggs_in_zip",
              "websockets",
              "ujson",
              "HTTPConnection",
              "Auth",
              "triangulate_embedding",
              "Extension",
              "HAS_SNI",
              "Json",
              "wait_exponential",
              "min_edge_cover",
              "skew",
              "islink",
              "LOCK_TIMEOUT",
              "create_memory_object_stream",
              "InvalidRequirement",
              "IS_64BIT",
              "_AnnotatedAlias",
              "safe_getattr",
              "community",
              "KEYWORD_LIST",
              "lagsub",
              "lp2bp_zpk",
              "argstoarray",
              "dataclass",
              "make_setuptools_develop_args",
              "ConsoleRenderable",
              "BinaryHeap",
              "WinDLL",
              "moment",
              "annotations",
              "BatchDownloader",
              "ComplianceLevel",
              "ForwardHTTPConnection",
              "get_tenant_context",
              "contextlib",
              "AbstractEventLoop",
              "laplacianmatrix",
              "lagval3d",
              "FuncData",
              "_is_string_like",
              "_fitpack_py",
              "_qsimvtv",
              "drop_metadata",
              "_dfitpack",
              "RequirementPreparer",
              "Dependant",
              "StringDType",
              "WebSocketsSansIOProtocol",
              "hermemul",
              "FrameType",
              "_umath_tests",
              "directed_hausdorff",
              "isabs",
              "MultiListener",
              "_qmvn_inner",
              "run_sync",
              "DummyRewriteHook",
              "ValidatorsList",
              "fourier",
              "guess_lexer_for_filename",
              "Namespace",
              "lru_cache",
              "get_int_opt",
              "dok_array",
              "NODE_CTOR_FSPATH_ARG",
              "stat",
              "pyparsing_unicode",
              "sleep_until",
              "get_filetype_from_buffer",
              "unquote",
              "nbdtr",
              "ParseFloat",
              "_get_ndarray_c_version",
              "expm_frechet",
              "logic",
              "Trace",
              "parse_warning_filter",
              "_ArrayLikeObject_co",
              "docfiller",
              "maxcut",
              "Set",
              "SMALL_TR_RADIUS",
              "eigsh",
              "md5",
              "ask",
              "PytestDeprecationWarning",
              "deprecated_call",
              "get_literal_values",
              "RichReprResult",
              "NodeView",
              "names",
              "recursive_schur_sqrtm",
              "ViewList",
              "_ArrayLikeString_co",
              "REPL",
              "_NamespaceLoader",
              "warn",
              "in_bounds",
              "before_nothing",
              "somersd",
              "get_terminal_width",
              "create_task_group",
              "bracket_root",
              "CP949_SM_MODEL",
              "set_node_attributes",
              "FancyArrowPatch",
              "trio",
              "statement",
              "dinitz",
              "urlsafe_b64encode",
              "connectivity",
              "SUCCESS",
              "UTF1632Prober",
              "Theme",
              "String",
              "ReprFuncArgs",
              "ttest_ind",
              "get_all_cast_information",
              "wait_readable",
              "Listener",
              "csc_matrix",
              "PrivateAttr",
              "core",
              "_gaussian_kernel1d",
              "lgmres",
              "CssLexer",
              "convert_temperature",
              "install_wheel",
              "DataclassInstance",
              "fdtr",
              "WindowsConsoleFeatures",
              "PipError",
              "ratio_resolve",
              "Depends",
              "localhost:8080",
              "SpinnerInterface",
              "Protocol",
              "pass_context",
              "_ArrayLikeTD64_co",
              "distdiscrete",
              "monte_carlo_test",
              "MultipartInvariantViolationDefect",
              "TerminalFormatter",
              "MatlabObject",
              "Undefined",
              "signal",
              "invhilbert",
              "stop_after_attempt",
              "array_interface_testing",
              "lagdiv",
              "getchar",
              "RecentlyUsedContainer",
              "_GenericAlias"
            ],
            "communication_patterns": [
              "graphql",
              "event_driven",
              "message_queue",
              "grpc",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "repository",
              "factory",
              "middleware",
              "mvc",
              "observer",
              "facade",
              "singleton",
              "decorator",
              "service_layer"
            ]
          },
          {
            "name": "audit_aggregator",
            "path": "services/platform_services/audit_aggregator",
            "files": {
              "total": 4,
              "by_type": {
                ".py": 1,
                ".md": 1,
                ".txt": 1,
                "": 1
              }
            },
            "lines_of_code": 854,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /api/v1/audit/correlations/{event_id}",
              "GET /api/v1/audit/stats",
              "GET /api/v1/audit/compliance-metrics",
              "POST /api/v1/audit/events",
              "POST /api/v1/audit/query",
              "GET /health"
            ],
            "dependencies": [
              "error_handling",
              "uuid",
              "pydantic",
              "asyncio",
              "BaseModel",
              "logging",
              "sqlalchemy",
              "get_async_db",
              "AsyncSession",
              "fastapi",
              "redis",
              "text",
              "Path",
              "middleware_integration",
              "get_tenant_context",
              "BackgroundTasks",
              "datetime",
              "get_tenant_redis",
              "UUID",
              "uvicorn",
              "typing",
              "json",
              "Any",
              "CORSMiddleware",
              "time",
              "pathlib",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "rest_api",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "recommendation-system",
            "path": "services/platform_services/recommendation-system",
            "files": {
              "total": 18,
              "by_type": {
                "": 1,
                ".txt": 1,
                ".md": 6,
                ".py": 10
              }
            },
            "lines_of_code": 3269,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "POST /content/index",
              "POST /interaction",
              "GET /",
              "POST /",
              "POST /train",
              "GET /analytics/{user_id}",
              "GET /stats",
              "POST /feedback",
              "GET /health"
            ],
            "dependencies": [
              "Dataset",
              "pydantic",
              "uuid",
              "kafka",
              "BinaryLabelDatasetMetric",
              "SimilaritySearchRequest",
              "sentence_transformers",
              "csr_matrix",
              "StandardScaler",
              "BaseModel",
              "asyncio",
              "cosine_similarity",
              "logging",
              "defaultdict",
              "VectorService",
              "RecommendationAgent",
              "JSONResponse",
              "hashlib",
              "pytorch_lightning",
              "KafkaProducer",
              "DataLoader",
              "fastapi",
              "Enum",
              "redis",
              "router",
              "CollaborativeFilteringService",
              "lightfm",
              "torch",
              "Distance",
              "BinaryLabelDataset",
              "Optional",
              "get_tenant_context",
              "demographic_parity_difference",
              "NMF",
              "LightFM",
              "Dict",
              "SentenceTransformer",
              "QdrantClient",
              "datetime",
              "AutoTokenizer",
              "uvicorn",
              "setup_error_handlers",
              "numpy",
              "transformers",
              "qdrant_client",
              "pickle",
              "typing",
              "collections",
              "pandas",
              "CONSTITUTIONAL_HASH",
              "TenantContextMiddleware",
              "APIRouter",
              "EnhancedSecurityMiddleware",
              "json",
              "enum",
              "tensorflow_recommenders",
              "CORSMiddleware",
              "time",
              "shared",
              "List",
              "FastAPI",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "message_queue",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "human-review",
            "path": "services/platform_services/human-review",
            "files": {
              "total": 87826,
              "by_type": {
                ".txt": 69,
                "": 1767,
                ".md": 2351,
                ".json": 2520,
                ".py": 9,
                ".html": 26,
                ".tsx": 49,
                ".jsx": 2,
                ".js": 53624,
                ".markdown": 12,
                ".closure-compiler": 3,
                ".esprima": 3,
                ".mjs": 2013,
                ".ts": 18685,
                ".tsbuildinfo": 19,
                ".yml": 228,
                ".map": 4662,
                ".cts": 59,
                ".cjs": 193,
                ".lock": 3,
                ".nix": 1,
                ".mts": 1146,
                ".bak": 1,
                ".flow": 100,
                ".bsd": 10,
                ".ejs": 2,
                ".css": 26,
                ".applescript": 1,
                ".png": 99,
                ".yaml": 1,
                ".bnf": 13,
                ".svg": 6,
                ".mdown": 2,
                ".backup": 3,
                ".conf": 1,
                ".pegjs": 1,
                ".php": 1,
                ".wasm": 3,
                ".coffee": 20,
                ".wiki": 1,
                ".1": 4,
                ".snap": 19,
                ".bin": 1,
                ".jison": 1,
                ".sh": 4,
                ".jst": 34,
                ".def": 5,
                ".log": 1,
                ".opts": 1,
                ".xml": 5,
                ".iml": 1,
                ".swf": 1,
                ".scss": 14
              }
            },
            "lines_of_code": 2503,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /",
              "POST /escalate",
              "POST /tasks/{task_id}/assign",
              "GET /tasks/{task_id}",
              "POST /submissions",
              "POST /notifications",
              "POST /tasks",
              "GET /analytics",
              "GET /workload/{reviewer_id}",
              "GET /health"
            ],
            "dependencies": [
              "textstat",
              "ReviewManager",
              "pydantic",
              "defaultdict",
              "uuid",
              "sentence_transformers",
              "asyncio",
              "BaseModel",
              "cosine_similarity",
              "logging",
              "re",
              "sqlalchemy",
              "JSONResponse",
              "hashlib",
              "spacy",
              "fastapi",
              "Enum",
              "redis",
              "router",
              "create_engine",
              "torch",
              "Optional",
              "get_tenant_context",
              "Dict",
              "SentenceTransformer",
              "datetime",
              "uvicorn",
              "setup_error_handlers",
              "transformers",
              "numpy",
              "Jinja2Templates",
              "typing",
              "collections",
              "CONSTITUTIONAL_HASH",
              "TenantContextMiddleware",
              "APIRouter",
              "sessionmaker",
              "StaticFiles",
              "EnhancedSecurityMiddleware",
              "json",
              "enum",
              "declarative_base",
              "CORSMiddleware",
              "shared",
              "List",
              "FastAPI",
              "flesch_reading_ease",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "websocket",
              "rest_api",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "dialogue-assistant",
            "path": "services/platform_services/dialogue-assistant",
            "files": {
              "total": 18,
              "by_type": {
                "": 1,
                ".txt": 1,
                ".md": 6,
                ".py": 10
              }
            },
            "lines_of_code": 2516,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "DELETE /conversation/{conversation_id}",
              "POST /stream",
              "GET /conversation/{conversation_id}",
              "GET /",
              "POST /conversation/search",
              "GET /analytics/{user_id}",
              "POST /message",
              "GET /health"
            ],
            "dependencies": [
              "HTTPBearer",
              "tiktoken",
              "io",
              "uuid",
              "pydantic",
              "PromptTemplate",
              "ConversationContext",
              "ChatAnthropic",
              "asyncio",
              "ConversationManager",
              "BaseModel",
              "logging",
              "wave",
              "re",
              "langchain_anthropic",
              "ChatOpenAI",
              "JSONResponse",
              "speech_recognition",
              "ChatAgent",
              "fastapi",
              "Enum",
              "langchain_openai",
              "redis",
              "router",
              "StreamingResponse",
              "base64",
              "torch",
              "get_tenant_context",
              "Optional",
              "ConversationSummaryBufferMemory",
              "random",
              "ConversationChain",
              "Dict",
              "pyaudio",
              "datetime",
              "webrtcvad",
              "AutoTokenizer",
              "uvicorn",
              "setup_error_handlers",
              "ConversationSummary",
              "transformers",
              "ComplianceChecker",
              "numpy",
              "HumanMessage",
              "openai",
              "typing",
              "CONSTITUTIONAL_HASH",
              "TenantContextMiddleware",
              "APIRouter",
              "anthropic",
              "EnhancedSecurityMiddleware",
              "json",
              "enum",
              "pyttsx3",
              "CORSMiddleware",
              "time",
              "shared",
              "FastAPI",
              "os",
              "sys"
            ],
            "communication_patterns": [
              "event_driven",
              "async_communication",
              "websocket",
              "rest_api"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "blockchain-audit",
            "path": "services/platform_services/blockchain-audit",
            "files": {
              "total": 17,
              "by_type": {
                ".txt": 1,
                "": 1,
                ".md": 5,
                ".py": 10
              }
            },
            "lines_of_code": 2102,
            "has_constitutional_hash": true,
            "api_endpoints": [
              "GET /",
              "GET /blockchain/stats",
              "POST /audit/log",
              "GET /blockchain/verify/{event_id}",
              "POST /audit/bulk",
              "GET /metrics",
              "GET /audit/events",
              "GET /blockchain/records",
              "GET /audit/events/{event_id}",
              "GET /health"
            ],
            "dependencies": [
              "AuditManager",
              "Response",
              "Web3",
              "pydantic",
              "uuid",
              "eth_account",
              "kafka",
              "PBKDF2",
              "bls",
              "BaseModel",
              "asyncio",
              "anchorpy",
              "logging",
              "optimism",
              "Transaction",
              "SHA256",
              "KafkaError",
              "TxOpts",
              "JSONResponse",
              "hashlib",
              "ArbitrumClient",
              "sqlalchemy",
              "dataclasses",
              "AsyncSession",
              "py_ecc",
              "KafkaProducer",
              "Commitment",
              "transfer",
              "fastapi",
              "BlockchainService",
              "Enum",
              "Account",
              "dataclass",
              "PublicKey",
              "Program",
              "router",
              "localhost:8545",
              "ed25519",
              "nacl",
              "aioredis",
              "base64",
              "Throttler",
              "create_engine",
              "asyncio_throttle",
              "Optional",
              "contextlib",
              "AsyncClient",
              "Dict",
              "Counter",
              "arbitrum",
              "datetime",
              "confluent_kafka",
              "UUID",
              "prometheus_client",
              "uvicorn",
              "asynccontextmanager",
              "typing",
              "ecdsa_sign",
              "CONSTITUTIONAL_HASH",
              "List",
              "APIRouter",
              "get_random_bytes",
              "web3",
              "StaticFiles",
              "json",
              "enum",
              "solathon",
              "geth_poa_middleware",
              "DeclarativeBase",
              "CORSMiddleware",
              "Keypair",
              "time",
              "OptimismClient",
              "FastAPI",
              "AES",
              "os"
            ],
            "communication_patterns": [
              "event_driven",
              "rest_api",
              "message_queue",
              "async_communication",
              "database"
            ],
            "architectural_patterns": [
              "dependency_injection",
              "middleware",
              "factory",
              "mvc"
            ]
          },
          {
            "name": "shared",
            "path": "services/platform_services/shared",
            "files": {
              "total": 6,
              "by_type": {
                ".py": 2,
                ".md": 2,
                ".pyc": 2
              }
            },
            "lines_of_code": 13,
            "has_constitutional_hash": true,
            "api_endpoints": [],
            "dependencies": [],
            "communication_patterns": [],
            "architectural_patterns": [
              "middleware"
            ]
          }
        ],
        "category_complexity": {
          "total_services": 15,
          "total_lines": 1547533,
          "total_files": 93624,
          "average_lines_per_service": 103168.86666666667,
          "average_files_per_service": 6241.6,
          "constitutional_compliance_rate": 0.9333333333333333
        }
      }
    },
    "service_boundaries": {},
    "communication_patterns": {},
    "dependency_analysis": {}
  },
  "docker_analysis": {
    "compose_files": [
      {
        "file": "compose-stacks/docker-compose.mcp.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "monitoring/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "archive/root_cleanup_backup/docker-compose.local.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "archive/root_cleanup_backup/docker-compose.test.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "services/core/code-analysis/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "services/blockchain/expert-service/config/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "services/blockchain/config/docker/docker-compose.unified.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "services/shared/streaming/docker-compose.kafka.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "config/docker/docker-compose.local.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "config/docker/docker-compose.groq-integration.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "config/docker/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "config/docker/docker-compose.test.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "config/docker/docker-compose.basic.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "config/docker/docker-compose.production.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "tests/load_testing/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "tests/e2e/docker/docker-compose.e2e.yml",
        "has_constitutional_hash": true,
        "service_count": 3,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/opa/docker-compose.opa.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.nvidia-router.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.fixed.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.production-simple.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.base.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.acgs.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose-test.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": false,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": false,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.ocr.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.services.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": false
      },
      {
        "file": "infrastructure/docker/docker-compose.security.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.production.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": false
      },
      {
        "file": "infrastructure/docker/docker-compose.kimi-swe.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.postgresql.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": false,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.production-override.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.constitutional.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.testing.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.prod.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose-monitoring.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.enterprise-stack.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.acgs-services.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": false
      },
      {
        "file": "infrastructure/docker/docker-compose.nano-vllm.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.groq-wasm.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.test.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.production.override.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.development.override.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.nats.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.testing.override.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.redis.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": false,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.mcp.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.staging.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.core.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.nano-vllm-staging.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.development.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.monitoring.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.base-infrastructure.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.dev.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.cache-integrated.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.kimi.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/docker-compose.operational-excellence.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/chaos/docker-compose.chaos.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/load-balancer/docker-compose.haproxy.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/docker-compose.monitoring-consolidated.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/docker-compose.elk-security.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/docker-compose.monitoring.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/docker-compose-enhanced.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/docker-compose.ai-governance.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/observability/docker-compose.observability.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/redis/docker-compose.redis-cluster.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/database/docker-compose.replicas.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/docker/dind/docker-compose.dind.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/jaeger/docker-compose-jaeger.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      },
      {
        "file": "infrastructure/monitoring/monitoring/docker-compose.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": false,
        "has_volumes": true
      },
      {
        "file": "deployment/docker/docker-compose.production.yml",
        "has_constitutional_hash": true,
        "service_count": 1,
        "has_networking": true,
        "has_volumes": true
      }
    ],
    "dockerfiles": [
      {
        "file": "Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "archive/duplicates_removal_backup/tools/dgm-best-swe-agent/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.10-slim",
        "multi_stage": false
      },
      {
        "file": "services/cli/opencode/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "oven/bun:1.2.8-alpine",
        "multi_stage": true
      },
      {
        "file": "services/core/evolutionary-computation/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/code-analysis/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.12-slim",
        "multi_stage": true
      },
      {
        "file": "services/core/governance-engine/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/agent-hitl/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/policy-governance/qpe_service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "golang:1.21-alpine",
        "multi_stage": true
      },
      {
        "file": "services/core/policy-governance/pgc_service/Dockerfile.staging",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/policy-governance/pgc_service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.10-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/policy-governance/pgc_service/Dockerfile.prod",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/formal-verification/fv_service/Dockerfile.prod",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/formal-verification/fv_service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/formal-verification/fv_service/Dockerfile.staging",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/constitutional-ai/ac_service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/constitutional-ai/ac_service/Dockerfile.prod",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/core/constitutional-ai/ac_service/Dockerfile.production",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim-bullseye",
        "multi_stage": true
      },
      {
        "file": "services/blockchain/expert-service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "rust:1.75-slim",
        "multi_stage": true
      },
      {
        "file": "services/blockchain/expert-service/config/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "rust:1.75-slim",
        "multi_stage": true
      },
      {
        "file": "services/shared/routing/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/image-compliance/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/audit_aggregator/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.12-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/recommendation-system/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/human-review/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "node:18-alpine",
        "multi_stage": true
      },
      {
        "file": "services/platform_services/dialogue-assistant/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/blockchain-audit/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/integrity/integrity_service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.10-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/integrity/integrity_service/Dockerfile.prod",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": true
      },
      {
        "file": "services/platform_services/authentication/auth_service/Dockerfile.acge",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/authentication/auth_service/Dockerfile.prod",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": true
      },
      {
        "file": "services/platform_services/authentication/auth_service/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.10-slim",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/jsonpath/Dockerfile",
        "has_constitutional_hash": false,
        "base_image": "node:0.11-onbuild",
        "multi_stage": false
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@surma/rollup-plugin-off-main-thread/Dockerfile",
        "has_constitutional_hash": false,
        "base_image": "selenium/node-chrome:latest",
        "multi_stage": false
      },
      {
        "file": "config/docker/Dockerfile.uv",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": true
      },
      {
        "file": "tests/load_testing/Dockerfile.loadtest",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "tests/load_testing/Dockerfile.analyzer",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "tests/e2e/docker/Dockerfile.test-runner",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "tests/e2e/docker/Dockerfile.mock-services",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": true
      },
      {
        "file": "infrastructure/docker/Dockerfile.local",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "infrastructure/docker/Dockerfile.auth-service",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "infrastructure/load-balancer/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "haproxy:2.8-alpine",
        "multi_stage": false
      },
      {
        "file": "infrastructure/monitoring/router-metrics-exporter/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "infrastructure/monitoring/elk-config/security-processor/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.11-slim",
        "multi_stage": false
      },
      {
        "file": "scripts/development/dgm-best-swe-agent/Dockerfile",
        "has_constitutional_hash": true,
        "base_image": "python:3.10-slim",
        "multi_stage": false
      },
      {
        "file": "deployment/docker/Dockerfile.production",
        "has_constitutional_hash": true,
        "base_image": "python:${PYTHON_VERSION}-slim",
        "multi_stage": true
      }
    ],
    "containerization_patterns": {},
    "service_definitions": {}
  },
  "infrastructure_analysis": {
    "kubernetes_configs": [
      {
        "file": "services/core/policy-governance/k8s/hpa-autoscaling.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "services/core/policy-governance/pgc_service/k8s/service-mesh.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Service"
      },
      {
        "file": "observability/distributed-tracing/jaeger-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "backup/kubernetes/backup-cronjob.yaml",
        "has_constitutional_hash": true,
        "resource_type": "CronJob"
      },
      {
        "file": "infrastructure/kubernetes/ac-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/ingress.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/core-services.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/acgs-secrets.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Secret"
      },
      {
        "file": "infrastructure/kubernetes/api-gateway.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/rbac.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ServiceAccount"
      },
      {
        "file": "infrastructure/kubernetes/groq-policy-integration.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/namespace.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/persistent-volumes.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PersistentVolume"
      },
      {
        "file": "infrastructure/kubernetes/hpa-vpa.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "infrastructure/kubernetes/gs-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/dragonflydb.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/groq-policy-configmap.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/auth-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/secrets.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Secret"
      },
      {
        "file": "infrastructure/kubernetes/grafana.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/fv-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/redis.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PersistentVolumeClaim"
      },
      {
        "file": "infrastructure/kubernetes/postgres-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Service"
      },
      {
        "file": "infrastructure/kubernetes/deployment-scripts.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/network-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "NetworkPolicy"
      },
      {
        "file": "infrastructure/kubernetes/integrity-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/cockroachdb.yaml",
        "has_constitutional_hash": true,
        "resource_type": "StatefulSet"
      },
      {
        "file": "infrastructure/kubernetes/frontend-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/database.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PersistentVolumeClaim"
      },
      {
        "file": "infrastructure/kubernetes/opa.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/pgc-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/configmap.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/ingress-controller.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/monitoring.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PersistentVolumeClaim"
      },
      {
        "file": "infrastructure/kubernetes/prometheus.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/postgres-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/istio/dgm-service/deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/k8s/hpa/constitutional-ai-hpa.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "infrastructure/k8s/hpa/governance-synthesis-hpa.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "infrastructure/k8s/hpa/policy-governance-hpa.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "infrastructure/k8s/services/constitutional-ai-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Service"
      },
      {
        "file": "infrastructure/k8s/services/policy-governance-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Service"
      },
      {
        "file": "infrastructure/k8s/services/governance-synthesis-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Service"
      },
      {
        "file": "infrastructure/k8s/deployments/constitutional-ai-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/k8s/deployments/governance-synthesis-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/k8s/deployments/policy-governance-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/configmaps/acgs-config.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/network-policies/tenant-isolation-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "NetworkPolicy"
      },
      {
        "file": "infrastructure/kubernetes/production/cluster-config.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/namespace.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/security-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PodSecurityPolicy"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/policy-engine.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/network-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "NetworkPolicy"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/grafana.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/audit-engine.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/redis.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/monitoring.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/rbac.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ClusterRole"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/constitutional-trainer-network-policy.yaml",
        "has_constitutional_hash": true,
        "resource_type": "NetworkPolicy"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/namespaces.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/alertmanager.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/database-init.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/redpanda-cluster.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Redpanda"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/event-streaming-config.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/postgresql-ha.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Cluster"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/constitutional-trainer.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/security/rbac.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ServiceAccount"
      },
      {
        "file": "infrastructure/kubernetes/security/network-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "NetworkPolicy"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/namespace.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/traffic-routing.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/green-environment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/blue-environment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/automated-rollback-system.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/shared-resources.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/blue-green/acge-green-environment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/services/integrity-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/policy-governance-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/acgs-services.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Service"
      },
      {
        "file": "infrastructure/kubernetes/services/auth-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/governance-synthesis-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/constitutional-ai-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/evolutionary-computation-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/model-orchestrator-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/services/formal-verification-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/deployments/acgs-deployments.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/monitoring/prometheus-rules.yaml",
        "has_constitutional_hash": true,
        "resource_type": "unknown"
      },
      {
        "file": "infrastructure/kubernetes/monitoring/prometheus-operator.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/autoscaling/enhanced-hpa-core.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "infrastructure/kubernetes/storage/persistent-volumes.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PersistentVolume"
      },
      {
        "file": "infrastructure/kubernetes/enhanced-orchestration/acgs-production-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/production/ingress/cert-manager.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ClusterIssuer"
      },
      {
        "file": "infrastructure/kubernetes/production/ingress/nginx-ingress.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/ingress/nginx-deployment.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "infrastructure/kubernetes/production/security/security-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "infrastructure/kubernetes/production/autoscaling/hpa.yaml",
        "has_constitutional_hash": true,
        "resource_type": "HorizontalPodAutoscaler"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/grafana-dashboards.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-prometheus-config.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/alert-rules.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/prometheus-values.yaml",
        "has_constitutional_hash": true,
        "resource_type": "unknown"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/jaeger-tracing.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/prometheus-config.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/elk-stack.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-alert-rules.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-grafana-dashboards.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "deployment/kubernetes/configmap.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "deployment/kubernetes/namespace.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "deployment/kubernetes/secrets.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Secret"
      },
      {
        "file": "deployment/service-mesh/observability.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Telemetry"
      },
      {
        "file": "deployment/service-mesh/traffic-management.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Gateway"
      },
      {
        "file": "deployment/service-mesh/security-policies.yaml",
        "has_constitutional_hash": true,
        "resource_type": "PeerAuthentication"
      },
      {
        "file": "deployment/service-mesh/istio-installation.yaml",
        "has_constitutional_hash": true,
        "resource_type": "IstioOperator"
      },
      {
        "file": "deployment/kubernetes/deployments/auth-service.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "deployment/kubernetes/manifests/monitoring.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "deployment/kubernetes/manifests/infrastructure.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Deployment"
      },
      {
        "file": "deployment/kubernetes/manifests/security.yaml",
        "has_constitutional_hash": true,
        "resource_type": "NetworkPolicy"
      },
      {
        "file": "deployment/kubernetes/manifests/configmaps.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ConfigMap"
      },
      {
        "file": "deployment/kubernetes/manifests/rbac.yaml",
        "has_constitutional_hash": true,
        "resource_type": "ServiceAccount"
      },
      {
        "file": "deployment/kubernetes/manifests/kustomization.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Kustomization"
      },
      {
        "file": "deployment/kubernetes/manifests/namespace.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Namespace"
      },
      {
        "file": "deployment/kubernetes/manifests/storage.yaml",
        "has_constitutional_hash": true,
        "resource_type": "StorageClass"
      },
      {
        "file": "deployment/kubernetes/manifests/secrets.yaml",
        "has_constitutional_hash": true,
        "resource_type": "Secret"
      }
    ],
    "monitoring_configs": [
      {
        "file": "reports/realtime_alert_20250717_223100.json",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/realtime_alert_20250717_223514.json",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/realtime_alert_20250717_223225.json",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/realtime_alert_20250717_223349.json",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "monitoring/alert_rules.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "monitoring/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "monitoring/alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "monitoring/alertmanager.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "docs_consolidated_archive_20250710_120000/api/prometheus_metrics_validation_report.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/scripts_reorganization_backup/development/validate_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/scripts_reorganization_backup/development/deploy_intelligent_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/scripts_reorganization_backup/development/deploy_automated_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/scripts_reorganization_backup/development/setup_grafana_dashboard.py",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "archive/scripts_reorganization_backup/development/setup-alerting.sh",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/scripts_reorganization_backup/development/deploy_enhanced_prometheus_monitoring.py",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/simple_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/setup-alerting.sh",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/docker/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/docker/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/setup/setup_monitoring_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/monitoring/quality_alert_monitor.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/organized/deployment/deploy_enhanced_prometheus_monitoring.py",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/organized/deployment/deploy_automated_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/organized/deployment/deploy_intelligent_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/tools/mcp-inspector/client/src/components/ui/alert.tsx",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/deploy_grafana_dashboards.py.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/alertmanager/alertmanager.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/rules/acgs_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/rules/infrastructure_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/rules/blockchain_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/rules/governance_workflow_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/prometheus/rules/constitutional_compliance_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/monitoring/grafana/dashboards/dashboard-config.yml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/docker/monitoring/rules/predictive-analytics-alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/infrastructure/kubernetes/production/monitoring/acge-grafana-dashboards.yaml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/scripts/development/docker/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/old_backups/tests/load_testing/monitoring/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/.venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/WHEEL",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/.venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/licenses/LICENSE",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/infrastructure/monitoring/prometheus/rules/pgbouncer_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/infrastructure/monitoring/prometheus/rules/pgbouncer_alerts.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "archive/duplicates_removal_backup/infrastructure/monitoring/grafana/dashboards/pgbouncer_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "services/core/code-analysis/prometheus_alerting_rules.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/core/code-analysis/prometheus_alerting_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/core/code-analysis/grafana_dashboard_config.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "services/core/alerting-service/requirements.txt",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/core/alerting-service/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/core/alerting-service/__init__.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/core/alerting-service/models.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/core/alerting-service/main.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/core/code-analysis/config/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/core/constitutional-ai/ac_service/monitoring/prometheus-alerts.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/deps/axum_prometheus-15a1c63517e32226.d",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/deps/libaxum_prometheus-15a1c63517e32226.rmeta",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/deps/libmetrics_exporter_prometheus-da6aff1b2a724b38.rmeta",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/deps/metrics_exporter_prometheus-da6aff1b2a724b38.d",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/deps/libprometheus-233ded2cb40d9328.rmeta",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/deps/prometheus-233ded2cb40d9328.d",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-5d42fc23f99687fe/invoked.timestamp",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-5d42fc23f99687fe/root-output",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-5d42fc23f99687fe/stderr",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-5d42fc23f99687fe/output",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-dcc1e370279dbde1/build-script-build",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-dcc1e370279dbde1/build_script_build-dcc1e370279dbde1.d",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/build/prometheus-dcc1e370279dbde1/build_script_build-dcc1e370279dbde1",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-5d42fc23f99687fe/run-build-script-build-script-build.json",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-5d42fc23f99687fe/run-build-script-build-script-build",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/metrics-exporter-prometheus-da6aff1b2a724b38/lib-metrics_exporter_prometheus.json",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/metrics-exporter-prometheus-da6aff1b2a724b38/lib-metrics_exporter_prometheus",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/metrics-exporter-prometheus-da6aff1b2a724b38/dep-lib-metrics_exporter_prometheus",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/metrics-exporter-prometheus-da6aff1b2a724b38/invoked.timestamp",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-233ded2cb40d9328/dep-lib-prometheus",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-233ded2cb40d9328/invoked.timestamp",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-233ded2cb40d9328/lib-prometheus.json",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-233ded2cb40d9328/lib-prometheus",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-dcc1e370279dbde1/dep-build-script-build-script-build",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-dcc1e370279dbde1/invoked.timestamp",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-dcc1e370279dbde1/build-script-build-script-build.json",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/prometheus-dcc1e370279dbde1/build-script-build-script-build",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/axum-prometheus-15a1c63517e32226/invoked.timestamp",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/axum-prometheus-15a1c63517e32226/dep-lib-axum_prometheus",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/axum-prometheus-15a1c63517e32226/lib-axum_prometheus.json",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/target/debug/.fingerprint/axum-prometheus-15a1c63517e32226/lib-axum_prometheus",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "services/blockchain/expert-service/config/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/shared/monitoring/intelligent_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/shared/monitoring/grafana_integration_service.py",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "services/shared/monitoring/sentry_alerts.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/shared/monitoring/alerts.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/shared/middleware/prometheus_metrics_middleware.py",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/shared/middleware/prometheus_metrics.py",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/shared/monitoring/__pycache__/intelligent_alerting_system.cpython-312.pyc",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/shared/monitoring/__pycache__/alerts.cpython-312.pyc",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "services/shared/middleware/__pycache__/prometheus_metrics_middleware.cpython-312.pyc",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/alert-triangle.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/badge-alert.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/badge-alert.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/alert-triangle.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/alert-octagon.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/shield-alert.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/alert-octagon.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/alert-circle.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/alert-circle.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/lucide-react/dist/esm/icons/shield-alert.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/aria-query/lib/etc/roles/literal/alertRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/eslint/lib/rules/no-alert.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/Alert/alertClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/Alert/alertClasses.d.ts",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/AlertTitle/alertTitleClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/AlertTitle/alertTitleClasses.d.ts",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/node/AlertTitle/alertTitleClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/node/Alert/alertClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/legacy/Alert/alertClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/legacy/AlertTitle/alertTitleClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/modern/AlertTitle/alertTitleClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "services/platform_services/human-review/frontend/node_modules/@mui/material/modern/Alert/alertClasses.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "docs/monitoring/prometheus_metrics_validation_report.md.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "docs/monitoring/prometheus_metrics_validation_report.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "frontend/node_modules/eslint-plugin-jsx-a11y/node_modules/aria-query/lib/etc/roles/literal/alertRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/eslint-plugin-jsx-a11y/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/@storybook/testing-library/node_modules/aria-query/lib/etc/roles/literal/alertRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/@storybook/testing-library/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/aria-query/lib/etc/roles/literal/alertRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/eslint/lib/rules/no-alert.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/@testing-library/react/node_modules/aria-query/lib/etc/roles/literal/alertRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/@testing-library/react/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/alert-octagon.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/alert-octagon.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/badge-alert.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/alert-circle.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/shield-alert.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/alert-circle.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/alert-triangle.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/shield-alert.js",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/alert-triangle.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "frontend/node_modules/lucide-react/dist/esm/icons/badge-alert.js.map",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/INSTALLER",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/METADATA",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/REQUESTED",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/RECORD",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/top_level.txt",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/mmap_dict.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/metrics_core.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__init__.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/multiprocess.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/metrics.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/platform_collector.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/registry.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/exposition.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/asgi.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/context_managers.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/validation.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/values.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/gc_collector.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/decorator.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/py.typed",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/parser.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/samples.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/utils.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/process_collector.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/core.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client-0.22.1.dist-info/licenses/NOTICE",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/openmetrics/__init__.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/openmetrics/exposition.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/openmetrics/parser.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/twisted/_exposition.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/twisted/__init__.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/validation.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/utils.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/metrics_core.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/gc_collector.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/multiprocess.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/core.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/context_managers.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/platform_collector.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/parser.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/process_collector.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/registry.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/__init__.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/mmap_dict.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/samples.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/asgi.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/decorator.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/values.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/metrics.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/__pycache__/exposition.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/bridge/__init__.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/bridge/graphite.py",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/openmetrics/__pycache__/exposition.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/openmetrics/__pycache__/__init__.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/openmetrics/__pycache__/parser.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/twisted/__pycache__/__init__.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/twisted/__pycache__/_exposition.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/bridge/__pycache__/__init__.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": ".venv/lib/python3.12/site-packages/prometheus_client/bridge/__pycache__/graphite.cpython-312.pyc",
        "has_constitutional_hash": false,
        "type": "prometheus"
      },
      {
        "file": "config/monitoring/grafana-constitutional-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "config/monitoring/prometheus-alerts.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "config/monitoring/prometheus-constitutional.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "tests/e2e/docker/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "tests/e2e/docker/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "tests/load_testing/monitoring/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "test_reports/htmlcov/z_678f586c5c6e7f9e_sentry_alerts_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "test_reports/htmlcov/z_678f586c5c6e7f9e_intelligent_alerting_system_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "test_reports/htmlcov/z_678f586c5c6e7f9e_grafana_integration_service_py.html",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "test_reports/htmlcov/z_5572d48a2e7ed70e_prometheus_metrics_middleware_py.html",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "test_reports/htmlcov/z_77b2ef004f404f5b_intelligent_alerting_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "test_reports/htmlcov/z_678f586c5c6e7f9e_alerts_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "test_reports/htmlcov/z_5572d48a2e7ed70e_prometheus_metrics_py.html",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "test_reports/htmlcov/z_77b2ef004f404f5b_test-alert-system_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "test_reports/htmlcov/z_77b2ef004f404f5b_deploy_acgs_alerts_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "test_reports/htmlcov/z_77b2ef004f404f5b_deploy_grafana_dashboards_py.html",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": ".git/refs/remotes/origin/dependabot/pip/services/core/alerting-service/pip-62494ab29e",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": ".git/refs/remotes/origin/dependabot/pip/services/core/alerting-service/pip-bfe96f8e8f",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": ".git/logs/refs/remotes/origin/dependabot/pip/services/core/alerting-service/pip-bfe96f8e8f",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": ".git/logs/refs/remotes/origin/dependabot/pip/services/core/alerting-service/pip-62494ab29e",
        "has_constitutional_hash": false,
        "type": "alerting"
      },
      {
        "file": "reports/coverage/htmlcov/z_5572d48a2e7ed70e_prometheus_metrics_middleware_py.html",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "reports/coverage/htmlcov/z_5572d48a2e7ed70e_prometheus_metrics_py.html",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "reports/coverage/htmlcov/z_678f586c5c6e7f9e_alerts_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/coverage/htmlcov/z_678f586c5c6e7f9e_sentry_alerts_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/coverage/htmlcov/z_b9a00e55f22b3d77_simple_alerting_system_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/coverage/htmlcov/z_678f586c5c6e7f9e_intelligent_alerting_system_py.html",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "reports/coverage/htmlcov/z_678f586c5c6e7f9e_grafana_integration_service_py.html",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/alerting/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/alerting/CLAUDE.md.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/docker/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/alert_rules.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/docker/alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/chaos/prometheus-chaos.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/mab_alert_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/test-alert-system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/intelligent_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager-enhanced.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager-simple.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/deploy-alert-system.sh",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/mab_alert_rules.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/performance_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/test-alerts.sh",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/acgs_performance_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/performance_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/constitutional_compliance_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/deploy_acgs_alerts.py.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/deploy_grafana_dashboards.py",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/alertmanager.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager-enhanced.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/deploy_acgs_alerts.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager-simple.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/kubernetes/grafana.yaml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/kubernetes/prometheus.yaml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/scripts/docker/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/alerting/config/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/alerting/config/alerting-config.json",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/docker/prometheus/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/prometheus/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/alert_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/docker/monitoring/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/prometheus-ocr.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/alert_rules.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/docker/monitoring/prometheus-predictive-analytics.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/prometheus-groq.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/prometheus-ocr.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/prometheus/rules/acgs-security-alerts.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/prometheus/rules/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/rules/predictive-analytics-alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/dashboards/predictive-analytics.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/dashboards/constitutional-compliance.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/dashboards/acgs-pgp-overview.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/datasources/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/datasources/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/datasources/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/dashboards/dashboard.yml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/dashboards/dashboard.yml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/docker/monitoring/grafana/provisioning/dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/prometheus/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus_rules/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus_rules/pgbouncer_alerts.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus_rules/pgbouncer_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/alerting/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alerting/performance_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alerting/performance_alerting.py.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/blockchain_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/groq-policy-alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/acgs_health_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/governance_workflow_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/performance_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/acgs_alert_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/infrastructure_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/service_specific_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/acgs_alert_rules.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/operational_excellence_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/governance_service_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/service_specific_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/governance_service_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/performance_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/acgs_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/rules/operational_excellence_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/grafana/deploy-dashboards.sh",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/executive_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/grafana.ini",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/alertmanager/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager/enterprise-alertmanager.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager/enterprise-alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/alertmanager/alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/ai-governance-alert-rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus-consolidated.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/alertmanager.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus-enhanced.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus-enhanced.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus-ai-governance.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus-ai-governance.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/ai-governance-alert-rules.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboards/acgs_sla_compliance_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboards/acgs_infrastructure_health_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboards/pgbouncer_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboards/acgs_operational_excellence_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana_dashboards/acgs_constitutional_compliance_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/capacity_planning_rules.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/acgs_alerts.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/business_metrics_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/business_metrics_rules.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/constitutional_compliance_rules.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/acgs_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/prometheus/rules/capacity_planning_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/prometheus/alert_rules.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/prometheus/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/prometheus/alert_rules.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/prometheus/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/prometheus/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/alertmanager/alertmanager.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/monitoring/alertmanager/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/monitoring/alertmanager/alertmanager.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/provisioning/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/dashboards/service_health.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/dashboards/governance_workflows.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/dashboards/executive_overview.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/provisioning/datasources/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/provisioning/datasources/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/monitoring/grafana/provisioning/datasources/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/grafana/datasources/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/datasources/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/grafana/datasources/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs_constitutional_compliance.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/constitutional_governance.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/constitutional_compliance_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs_dind_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/5_tier_router_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs-multi-tenant-security.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs-service-health.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/constitutional-trainer-load-testing.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/README.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs_performance_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs_overview.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs-constitutional-compliance.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/acgs_error_analysis_dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/blockchain_metrics.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/dashboard-config.yml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/enterprise.yml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/acgs-dashboards.yml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/acgs-dashboards.yml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/acgs.yml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/enterprise.yml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/dashboards/acgs.yml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/datasources/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/grafana/provisioning/datasources/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/executive/stakeholder-business-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/executive/executive-overview-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/executive/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/executive/stakeholder-technical-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/infrastructure/load-balancing-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/infrastructure/redis-caching-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/infrastructure/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/evolutionary-computation-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/pgc-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/formal-verification-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/acgs-pgp-v8-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/constitutional-ai-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/integrity-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/governance-synthesis-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/authentication-service-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/services/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/system-overview/acgs-system-overview.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/system-overview/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/governance-workflows/policy-enforcement-workflow-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/governance-workflows/constitutional-compliance-workflow-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/governance-workflows/policy-creation-workflow-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/governance-workflows/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/blockchain/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/blockchain/quantumagi-integration-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/performance/executive-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/grafana/dashboards/performance/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/config/rules/acgs_performance_alerts.yml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/rules/acgs_performance_alerts.yml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/dashboards/dashboard.yml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/dashboards/dashboard.yml.backup",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/dashboards/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/datasources/prometheus.yml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/datasources/CLAUDE.md",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/monitoring/config/grafana/datasources/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/grafana.yaml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/kubernetes/acgs-lite/alertmanager.yaml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/kubernetes/monitoring/prometheus-rules.yaml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/monitoring/grafana-dashboard.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/kubernetes/monitoring/prometheus-rules.yaml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/monitoring/prometheus-operator.yaml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/grafana-dashboards.yaml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-prometheus-config.yaml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-alert-rules.yaml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-prometheus-config.yaml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/alert-rules.yaml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/prometheus-values.yaml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/prometheus-values.yaml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/prometheus-config.yaml.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/prometheus-config.yaml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/alert-rules.yaml.backup",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-alert-rules.yaml",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "infrastructure/kubernetes/production/monitoring/acge-grafana-dashboards.yaml",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "monitoring/metrics/grafana_metrics_20250707_092759.json",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "monitoring/metrics/prometheus_metrics_20250707_092759.json",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "scripts/deployment/deploy_automated_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/deployment/deploy_intelligent_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/deployment/deploy_enhanced_prometheus_monitoring.py",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "scripts/testing/test_alert_notifications.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/testing/validate_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/setup/setup_grafana_dashboard.py",
        "has_constitutional_hash": true,
        "type": "grafana"
      },
      {
        "file": "scripts/setup/setup-alerting.sh",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/development/simple_alerting_system.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/development/deploy_enhanced_prometheus_monitoring.py.backup",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "scripts/testing/__pycache__/test_alert_notifications.cpython-312-pytest-8.4.1.pyc",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/development/monitoring/quality_alert_monitor.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/development/docker/prometheus.yml",
        "has_constitutional_hash": true,
        "type": "prometheus"
      },
      {
        "file": "scripts/development/setup/setup_monitoring_alerting.py",
        "has_constitutional_hash": true,
        "type": "alerting"
      },
      {
        "file": "scripts/development/mcp-inspector/client/src/components/ui/alert.tsx",
        "has_constitutional_hash": false,
        "type": "alerting"
      }
    ],
    "security_configs": [],
    "deployment_patterns": []
  },
  "recommendations": [
    "HIGH: Review service boundaries - 100+ services require careful management",
    "MEDIUM: Improve constitutional compliance in cli category (0.0%)",
    "MEDIUM: Improve constitutional compliance in core category (93.5%)",
    "MEDIUM: Improve constitutional compliance in infrastructure category (38.2%)",
    "MEDIUM: Improve constitutional compliance in blockchain category (35.7%)",
    "MEDIUM: Improve constitutional compliance in shared category (94.0%)",
    "MEDIUM: Improve constitutional compliance in __pycache__ category (0.0%)",
    "MEDIUM: Improve constitutional compliance in ai-governance category (0.0%)",
    "MEDIUM: Improve constitutional compliance in platform_services category (93.3%)",
    "HIGH: Consolidate Docker Compose files - 50+ files create operational complexity",
    "MEDIUM: Review Kubernetes configurations for consolidation opportunities"
  ]
}