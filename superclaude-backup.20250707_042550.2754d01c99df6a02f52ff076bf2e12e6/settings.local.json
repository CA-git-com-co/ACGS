{
  "permissions": {
    "allow": [
      "Bash(pre-commit:*)",
      "Bash(git config:*)",
      "Bash(mkdir:*)",
      "Bash(black:*)",
      "Bash(python -m mypy:*)",
      "Bash(python3 -m mypy:*)",
      "Bash(ruff check:*)",
      "Bash(uv run ruff:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(python:*)",
      "Bash(ls:*)",
      "Bash(bash:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(sudo mv:*)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git bundle create:*)",
      "Bash(gh:*)",
      "Bash(docker:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(pip3 list:*)",
      "Bash(pip3 install:*)",
      "Bash(source:*)",
      "Bash(ln:*)",
      "Bash(for file in ./services/shared/agents/*.py)",
      "Bash(do)",
      "Bash(if grep -q \"from.*AlertingSystem\" \"$file\")",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(sed:*)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(if grep -q \"IntelligentIntelligentAlertingSystem\" \"$file\")",
      "Bash(if grep -q \"AuditLogger\" \"$file\")",
      "Bash(if grep -q \"UnifiedInputValidator\" \"$file\")",
      "Bash(true)",
      "Bash(cat:*)",
      "Bash(pdflatex:*)",
      "Bash(bibtex:*)",
      "Bash(/dev/null)",
      "Bash(rg:*)",
      "Bash(chktex:*)",
      "Bash(touch:*)",
      "Bash(od:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(git clone:*)",
      "Bash(cp:*)",
      "Bash(bun run:*)",
      "Bash(bun install:*)",
      "Bash(npm run:*)",
      "Bash(ACGS_CONFIG_PATH=./acgs-config.json bun run ./src/index.ts run \"hello world\" --print-logs)",
      "Bash(/home/dislove/ACGS-2/.venv/bin/pip install -r requirements.txt)",
      "Bash(node:*)",
      "Bash(make test:*)",
      "Bash(PYTHONPATH=/home/dislove/ACGS-2 python3 -m pytest tests/compliance/test_multi_tenant_isolation.py::TestMultiTenantIsolation::test_tenant_model_isolation_validation -v --tb=short)",
      "Bash(nvm use:*)",
      "Bash(pip uninstall:*)",
      "Bash(for:*)",
      "Bash(do echo \"File: $file\")",
      "Bash(pg_isready:*)",
      "Bash(redis-cli:*)",
      "Bash(pdftotext:*)",
      "Bash(make:*)",
      "Bash(alembic upgrade:*)",
      "Bash(./install.sh:*)"
    ],
    "deny": []
  }
}