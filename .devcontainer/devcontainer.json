{
  "name": "ACGS-1 Constitutional Governance System",
  "dockerComposeFile": "docker-compose.yml",
  "service": "devcontainer",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.sortImports.args": ["--profile", "black"],
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true,
          "**/node_modules": true,
          "**/target": true,
          "**/.git": true
        },
        "rust-analyzer.cargo.buildScripts.enable": true,
        "rust-analyzer.checkOnSave.command": "clippy"
      },
      "extensions": [
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-vscode.vscode-typescript-next",
        "bradlc.vscode-tailwindcss",
        "rust-lang.rust-analyzer",
        "vadimcn.vscode-lldb",
        "ms-vscode.cmake-tools",
        "ms-vscode.cpptools",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json",
        "esbenp.prettier-vscode",
        "formulahendry.auto-rename-tag",
        "christian-kohler.path-intellisense",
        "ms-vscode.vscode-eslint",
        "ms-playwright.playwright"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    3000,  // Frontend applications
    8000,  // Authentication service
    8001,  // Constitutional AI service
    8002,  // Integrity service
    8003,  // Formal verification service
    8004,  // Governance synthesis service
    8005,  // Policy governance service
    8006,  // Evolutionary computation service
    8007,  // Darwin G√∂del Machine service
    8010,  // Data Flywheel integration
    8011,  // Quantumagi Bridge
    8012,  // AlphaEvolve Engine
    5432,  // PostgreSQL
    6379   // Redis
  ],

  // Configure port attributes
  "portsAttributes": {
    "3000": {
      "label": "Frontend Applications",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Authentication Service",
      "onAutoForward": "silent"
    },
    "8001": {
      "label": "Constitutional AI Service",
      "onAutoForward": "silent"
    },
    "8002": {
      "label": "Integrity Service",
      "onAutoForward": "silent"
    },
    "8003": {
      "label": "Formal Verification Service",
      "onAutoForward": "silent"
    },
    "8004": {
      "label": "Governance Synthesis Service",
      "onAutoForward": "silent"
    },
    "8005": {
      "label": "Policy Governance Service",
      "onAutoForward": "silent"
    },
    "8006": {
      "label": "Evolutionary Computation Service",
      "onAutoForward": "silent"
    },
    "5432": {
      "label": "PostgreSQL Database",
      "onAutoForward": "silent"
    },
    "6379": {
      "label": "Redis Cache",
      "onAutoForward": "silent"
    }
  },

  // Set environment variables
  "containerEnv": {
    "PYTHONPATH": "/workspace/services/shared:/workspace",
    "NODE_ENV": "development",
    "RUST_LOG": "debug"
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "bash .devcontainer/setup.sh",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "echo 'ACGS-1 Development Environment Ready! üèõÔ∏è‚ú®'",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",

  // Configure features
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {},
    "ghcr.io/devcontainers/features/node:1": {
      "version": "18"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    },
    "ghcr.io/devcontainers/features/rust:1": {
      "version": "latest"
    }
  }
}
