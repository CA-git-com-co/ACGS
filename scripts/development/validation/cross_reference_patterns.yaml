# ACGS Advanced Cross-Reference Pattern Registry
# Constitutional Hash: cdd01ef066bc6cf2

version: "1.0"
constitutional_hash: "cdd01ef066bc6cf2"

# Pattern categories for organizing different types of cross-references
categories:
  markdown_links:
    description: "Standard markdown link formats"
    base_confidence: 0.8
    
  code_references:
    description: "Code imports, includes, and file references"
    base_confidence: 0.9
    
  configuration_references:
    description: "YAML, JSON, and config file references"
    base_confidence: 0.7
    
  semantic_relationships:
    description: "Context-based semantic relationships"
    base_confidence: 0.6
    
  image_media:
    description: "Image and media file references"
    base_confidence: 0.9

# Core patterns for cross-reference extraction
patterns:
  # Standard Markdown Links
  - name: "markdown_link"
    category: "markdown_links"
    regex: "\\[([^\\]]+)\\]\\(([^)]+)\\)"
    capture_groups:
      text: 1
      url: 2
    reference_type: "direct"
    confidence_modifiers:
      descriptive_text: 0.2
      relative_path: 0.1
      generic_text: -0.3
      context_keywords: 0.1
    exclusions:
      - "^https?://"
      - "^mailto:"
      - "^tel:"
      - "^ftp:"
    
  # Reference-style Markdown Links
  - name: "reference_link"
    category: "markdown_links"
    regex: "\\[([^\\]]+)\\]:\\s*([^\\s]+)"
    capture_groups:
      text: 1
      url: 2
    reference_type: "reference"
    confidence_modifiers:
      descriptive_text: 0.1
      relative_path: 0.1
    exclusions:
      - "^https?://"
      - "^mailto:"
    
  # Image References
  - name: "image_reference"
    category: "image_media"
    regex: "!\\[([^\\]]*)\\]\\(([^)]+)\\)"
    capture_groups:
      alt_text: 1
      url: 2
    reference_type: "media"
    confidence_modifiers:
      alt_text_present: 0.1
      relative_path: 0.1
    exclusions:
      - "^https?://"
      - "^data:"
    
  # Include Directives (for documentation systems)
  - name: "include_directive"
    category: "markdown_links"
    regex: "(?:@include|{{\\s*include|{% include)\\s+[\"']?([^\"'\\s}]+)[\"']?"
    capture_groups:
      path: 1
    reference_type: "include"
    confidence_modifiers:
      yaml_extension: 0.1
      md_extension: 0.1
    
  # YAML File References
  - name: "yaml_file_reference"
    category: "configuration_references"
    regex: "(?:file|path|src|template|config):\\s*[\"']?([^\"'\\s]+\\.(ya?ml|json|toml))[\"']?"
    capture_groups:
      path: 1
    reference_type: "config"
    confidence_modifiers:
      yaml_extension: 0.2
      json_extension: 0.1
      relative_path: 0.1
    
  # Code Import Statements (Python, JavaScript, etc.)
  - name: "code_import"
    category: "code_references"
    regex: "(?:import|from)\\s+[\"']([^\"']+)[\"']"
    capture_groups:
      module_path: 1
    reference_type: "import"
    confidence_modifiers:
      relative_import: 0.2
      file_extension: 0.1
    
  # Relative Path References
  - name: "relative_path"
    category: "markdown_links"
    regex: "(?:\\.{1,2}/)+[^)\\s\"'`]+"
    capture_groups:
      path: 0
    reference_type: "path"
    confidence_modifiers:
      depth_penalty: -0.1
      file_extension: 0.1
    
  # File Path References in Text
  - name: "file_path_reference"
    category: "code_references"
    regex: "(?:src/|services/|docs/|tools/|tests/|config/)[^)\\s\"'`]+"
    capture_groups:
      path: 0
    reference_type: "file_path"
    confidence_modifiers:
      standard_directories: 0.1
      file_extension: 0.1
    
  # Anchor Links (for sections within documents)
  - name: "anchor_link"
    category: "markdown_links"
    regex: "\\[([^\\]]+)\\]\\(#([^)]+)\\)"
    capture_groups:
      text: 1
      anchor: 2
    reference_type: "anchor"
    confidence_modifiers:
      descriptive_anchor: 0.1
    
  # Bi-directional Cross-References (see also, related)
  - name: "bidirectional_reference"
    category: "semantic_relationships"
    regex: "(?:see also|related|refer to|references|mentioned in)\\s*:?\\s*\\[([^\\]]+)\\]\\(([^)]+)\\)"
    capture_groups:
      text: 1
      url: 2
    reference_type: "semantic"
    confidence_modifiers:
      semantic_keywords: 0.2
      descriptive_text: 0.1
    
  # API Endpoint References
  - name: "api_endpoint"
    category: "code_references"
    regex: "(?:GET|POST|PUT|DELETE|PATCH)\\s+(/api/[^\\s\\n]+)"
    capture_groups:
      endpoint: 1
    reference_type: "api"
    confidence_modifiers:
      versioned_api: 0.1
      standard_methods: 0.1
    
  # Configuration Section References
  - name: "config_section_reference"
    category: "configuration_references"
    regex: "(?:config|section)\\s*[\"']([^\"']+)[\"']"
    capture_groups:
      section: 1
    reference_type: "config_section"
    confidence_modifiers:
      descriptive_name: 0.1

# Confidence scoring configuration
confidence_scoring:
  base_confidence: 1.0
  max_confidence: 1.0
  min_confidence: 0.1
  
  # Context-based modifiers
  context_modifiers:
    structured_context:
      pattern: "(?:^\\s*[-*+]|\\|.*\\|)"
      modifier: 0.1
    
    code_block_context:
      pattern: "```[\\s\\S]*?```"
      modifier: 0.2
    
    documentation_context:
      pattern: "(?:## Documentation|### References|#### See Also)"
      modifier: 0.15
    
    warning_context:
      pattern: "(?:> \\*\\*Warning|> \\*\\*Note|:::warning)"
      modifier: -0.1
  
  # Text quality modifiers
  text_quality:
    generic_terms:
      terms: ["here", "link", "click here", "this", "that", "click"]
      modifier: -0.3
      
    descriptive_terms:
      min_length: 5
      modifier: 0.2
      
    action_terms:
      terms: ["see", "refer", "documentation", "guide", "manual", "tutorial"]
      modifier: 0.1

# Validation rules for extracted references
validation_rules:
  path_validation:
    check_existence: true
    resolve_relative_paths: true
    canonical_path_resolution: true
    
  url_validation:
    validate_anchors: true
    check_fragment_existence: true
    validate_query_parameters: false
    
  type_validation:
    markdown_extensions: [".md", ".markdown", ".mdx"]
    image_extensions: [".png", ".jpg", ".jpeg", ".gif", ".svg", ".webp"]
    code_extensions: [".py", ".js", ".ts", ".java", ".cpp", ".c", ".h"]
    config_extensions: [".yaml", ".yml", ".json", ".toml", ".ini"]
    
  reference_consistency:
    check_bidirectional: true
    validate_semantic_relationships: true
    enforce_naming_conventions: true

# Performance optimization settings
performance:
  parallel_processing: true
  max_workers: 4
  cache_compiled_patterns: true
  batch_size: 100
  timeout_seconds: 30

# Error handling configuration
error_handling:
  skip_binary_files: true
  handle_encoding_errors: true
  continue_on_pattern_errors: true
  log_pattern_failures: true
  
  fallback_patterns:
    basic_markdown_link: "\\[.*?\\]\\(.*?\\)"
    simple_path_reference: "(?:\\./|\\.\\./)\\S+"

# Integration settings
integration:
  git_integration: true
  file_watcher: true
  incremental_updates: true
  cache_invalidation: true

# Constitutional compliance
constitutional:
  hash: "cdd01ef066bc6cf2"
  validation_required: true
  audit_logging: true
  compliance_reporting: true
