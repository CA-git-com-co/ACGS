# ACGS-1 HAProxy Load Balancer Configuration
# Optimized for constitutional governance service distribution

global
    daemon
    log stdout local0 info
    maxconn 4096
    user haproxy
    group haproxy
    
    # SSL/TLS Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    
    # Performance tuning
    tune.ssl.default-dh-param 2048
    tune.bufsize 32768

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option redispatch
    option forwardfor
    option http-server-close
    
    # Timeouts optimized for ACGS services
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout http-request 10000ms
    timeout http-keep-alive 2000ms
    timeout check 3000ms
    
    # Health check configuration
    default-server check inter 10s fall 3 rise 2
    
    # Error handling - using default error pages

# Statistics interface
frontend stats
    bind *:8080
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats auth admin:acgs_haproxy_admin_2024

# Main frontend for ACGS services
frontend acgs_frontend
    bind *:80
    bind *:443 ssl crt /usr/local/etc/haproxy/ssl/acgs.pem

    # Redirect HTTP to HTTPS
    redirect scheme https if !{ ssl_fc }

    # Security headers for HTTPS
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Request routing based on path
    acl is_auth_service path_beg /auth
    acl is_ac_service path_beg /constitutional
    acl is_integrity_service path_beg /integrity
    acl is_fv_service path_beg /verification
    acl is_gs_service path_beg /governance
    acl is_pgc_service path_beg /compliance
    acl is_ec_service path_beg /evolution
    
    # Health check routing
    acl is_health_check path_end /health
    
    # Route to operational backends only
    use_backend ac_backend if is_ac_service
    use_backend fv_backend if is_fv_service
    use_backend ec_backend if is_ec_service

    # Default to AC service for root requests
    default_backend ac_backend

# Backend configurations for operational ACGS services
backend ac_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server ac1 localhost:8001 check

backend fv_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server fv1 localhost:8013 check

backend ec_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server ec1 localhost:8006 check
