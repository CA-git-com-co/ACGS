version: '3.8'

services:
  # PostgreSQL Database
  acgs-database:
    image: postgres:15
    environment:
      POSTGRES_DB: acgs_db
      POSTGRES_USER: acgs_user
      POSTGRES_PASSWORD: acgs_secure_password
    volumes:
      - acgs_postgres_data:/var/lib/postgresql/data
      - ./services/platform/authentication/auth_service/migrations:/docker-entrypoint-initdb.d/01-auth
      - ./services/core/agent-hitl/migrations:/docker-entrypoint-initdb.d/02-hitl
      - ./services/core/sandbox-execution/migrations:/docker-entrypoint-initdb.d/03-sandbox
      - ./services/core/audit-integrity/migrations:/docker-entrypoint-initdb.d/04-audit
    ports:
      - "5439:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U acgs_user -d acgs_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - acgs-network

  # Redis for Caching and Sessions
  acgs-redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - acgs_redis_data:/data
    ports:
      - "6389:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - acgs-network

  # Monitoring and Metrics (Prometheus)
  acgs-prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - acgs_prometheus_data:/prometheus
    networks:
      - acgs-network

  # Monitoring Dashboard (Grafana)
  acgs-grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: acgs_admin_password
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "3000:3000"
    volumes:
      - acgs_grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - acgs-prometheus
    networks:
      - acgs-network

  # Log Aggregation (ELK Stack - Elasticsearch)
  acgs-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      xpack.security.enabled: "false"
    ports:
      - "9200:9200"
    volumes:
      - acgs_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - acgs-network

  # Log Aggregation (ELK Stack - Kibana)
  acgs-kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    environment:
      ELASTICSEARCH_HOSTS: http://acgs-elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - acgs-elasticsearch
    networks:
      - acgs-network

volumes:
  acgs_postgres_data:
  acgs_redis_data:
  acgs_prometheus_data:
  acgs_grafana_data:
  acgs_elasticsearch_data:

networks:
  acgs-network:
    external: true
    name: acgs_network