# Pytest Benchmark Configuration for ACGS
# Constitutional Hash: cdd01ef066bc6cf2

[tool:pytest-benchmark]
# Performance targets for ACGS constitutional validation
min_time = 0.000001  # 1 microsecond minimum measurement
max_time = 0.005     # 5ms maximum for P99 latency target

# Rounds and iterations for statistical significance
min_rounds = 5       # Minimum rounds per test
max_rounds = 50      # Maximum rounds for long-running tests

# Statistics and reporting
timer = perf_counter_ns  # High-precision timing
calibration_precision = 10
warmup = true
warmup_iterations = 100

# Benchmarking targets specific to constitutional validation
[constitutional_validation]
p99_latency_target_ms = 5.0
mean_latency_target_ms = 2.0
cache_hit_rate_target_percent = 85.0
throughput_target_rps = 100.0

# Test groupings
[groups]
performance = "performance tests for <5ms P99 latency"
cache = "cache validation tests for 85%+ hit rate"
throughput = "throughput tests for 100+ RPS"
constitutional = "constitutional compliance validation"

# Failure thresholds
[thresholds]
# Fail if performance degrades by more than 20%
regression_threshold = 0.20

# Fail if P99 latency exceeds target
latency_fail_threshold_ms = 5.0

# Fail if cache hit rate drops below target
cache_hit_rate_fail_threshold = 85.0

# Environment settings
[environment]
constitutional_hash = "cdd01ef066bc6cf2"
