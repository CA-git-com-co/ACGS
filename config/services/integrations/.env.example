# ACGS-1 Data Flywheel Integration Environment Configuration
# Copy this file to .env and configure the values for your environment

# =============================================================================
# NGC API Configuration (Required)
# =============================================================================
# Get your NGC API key from https://ngc.nvidia.com/setup/api-key
NGC_API_KEY=your_ngc_api_key_here

# =============================================================================
# ACGS-1 Integration Settings
# =============================================================================
# Base URL for ACGS-1 services
ACGS_BASE_URL=http://localhost

# Constitutional compliance threshold (0.0 to 1.0)
CONSTITUTIONAL_COMPLIANCE_THRESHOLD=0.95

# Enable/disable governance workflow validation
GOVERNANCE_WORKFLOW_VALIDATION=true

# Enable optimization for specific ACGS-1 services
POLICY_SYNTHESIS_OPTIMIZATION=true
FORMAL_VERIFICATION_ENHANCEMENT=true
CONSTITUTIONAL_ANALYSIS_OPTIMIZATION=true
INTEGRITY_VALIDATION_OPTIMIZATION=true

# =============================================================================
# Database Configuration
# =============================================================================
# Elasticsearch for governance traffic logging
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_INDEX_PREFIX=acgs_

# MongoDB for job metadata and results
MONGODB_URL=mongodb://localhost:27017
MONGODB_DB=acgs_flywheel

# Redis for task queue and caching
REDIS_URL=redis://localhost:6379/1
REDIS_PASSWORD=

# =============================================================================
# Service Configuration
# =============================================================================
# Data Flywheel API service port
FLYWHEEL_API_PORT=8010
FLYWHEEL_API_HOST=0.0.0.0

# Worker configuration
CELERY_WORKER_CONCURRENCY=10
CELERY_PARENT_WORKER_CONCURRENCY=1

# =============================================================================
# Monitoring and Observability
# =============================================================================
# Prometheus metrics
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION=30d

# Grafana dashboards
GRAFANA_PORT=3001
GRAFANA_ADMIN_PASSWORD=acgs_admin

# =============================================================================
# Logging Configuration
# =============================================================================
# General log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Constitutional governance specific logging
CONSTITUTIONAL_LOG_LEVEL=DEBUG
GOVERNANCE_AUDIT_LOGGING=true

# Log file paths
LOG_DIR=./logs
CONSTITUTIONAL_LOG_DIR=./logs/constitutional

# =============================================================================
# Docker Configuration
# =============================================================================
# Docker image tag
TAG=latest

# Docker Compose project name
COMPOSE_PROJECT_NAME=acgs_flywheel

# Docker network configuration
DOCKER_NETWORK_NAME=acgs_flywheel_network

# =============================================================================
# NeMo Microservices Configuration
# =============================================================================
# NeMo microservices endpoints
NEMO_BASE_URL=http://nemo.acgs.local
NIM_BASE_URL=http://nim.acgs.local
DATASTORE_BASE_URL=http://data-store.acgs.local

# NeMo namespace for ACGS-1
NMP_NAMESPACE=acgs_governance

# =============================================================================
# Constitutional Governance Models
# =============================================================================
# LLM Judge configuration for constitutional compliance
LLM_JUDGE_MODEL=meta/llama-3.3-70b-instruct
LLM_JUDGE_CONTEXT_LENGTH=32768
LLM_JUDGE_GPUS=4

# Governance-specific NIMs
GOVERNANCE_POLICY_SYNTHESIS_MODEL=meta/llama-3.2-1b-instruct
GOVERNANCE_FORMAL_VERIFICATION_MODEL=meta/llama-3.2-3b-instruct
GOVERNANCE_CONSTITUTIONAL_ANALYSIS_MODEL=meta/llama-3.1-8b-instruct

# =============================================================================
# Data Processing Configuration
# =============================================================================
# Governance data split configuration
GOVERNANCE_EVAL_SIZE=200
GOVERNANCE_VAL_RATIO=0.15
GOVERNANCE_MIN_TOTAL_RECORDS=100
GOVERNANCE_RANDOM_SEED=42
GOVERNANCE_DATA_LIMIT=2000

# Constitutional filtering
CONSTITUTIONAL_FILTERING=true
POLICY_TYPE_SEPARATION=true
WORKLOAD_STRATIFICATION=true

# =============================================================================
# Training Configuration
# =============================================================================
# Training parameters for governance models
GOVERNANCE_TRAINING_TYPE=sft
GOVERNANCE_FINETUNING_TYPE=lora
GOVERNANCE_EPOCHS=3
GOVERNANCE_BATCH_SIZE=8
GOVERNANCE_LEARNING_RATE=0.00005

# Constitutional compliance training
CONSTITUTIONAL_LOSS_WEIGHT=0.3
GOVERNANCE_SPECIFIC_METRICS=true
COMPLIANCE_VALIDATION_STEPS=100

# LoRA configuration for governance models
GOVERNANCE_LORA_ADAPTER_DIM=64
GOVERNANCE_LORA_ADAPTER_DROPOUT=0.05

# =============================================================================
# Performance and Optimization
# =============================================================================
# Optimization targets
TARGET_COST_REDUCTION=0.80
TARGET_RESPONSE_TIME_MS=500
TARGET_ACCURACY_THRESHOLD=0.95
TARGET_CONSTITUTIONAL_COMPLIANCE=0.98

# Resource limits
MAX_MEMORY_GB=16
MAX_CPU_CORES=8
MAX_GPU_MEMORY_GB=24

# =============================================================================
# Security Configuration
# =============================================================================
# Enable encryption for data in transit
ENCRYPTION_ENABLED=true

# Enable audit logging for constitutional decisions
AUDIT_LOGGING=true

# Access control
ACCESS_CONTROL=rbac

# PII redaction for governance logs
PII_REDACTION=true

# Constitutional data classification
CONSTITUTIONAL_DATA_CLASSIFICATION=sensitive

# Data retention policies
GOVERNANCE_DATA_RETENTION=7_years
COMPLIANCE_AUDIT_FREQUENCY=monthly

# =============================================================================
# Alert Configuration
# =============================================================================
# Alert thresholds
ALERT_CONSTITUTIONAL_COMPLIANCE_DROP=0.90
ALERT_RESPONSE_TIME_THRESHOLD_MS=1000
ALERT_COST_INCREASE_THRESHOLD=1.2
ALERT_ACCURACY_DROP_THRESHOLD=0.90

# Notification settings
ALERT_EMAIL_ENABLED=false
ALERT_EMAIL_RECIPIENTS=admin@acgs.local
ALERT_SLACK_ENABLED=false
ALERT_SLACK_WEBHOOK_URL=

# =============================================================================
# Development and Testing
# =============================================================================
# Environment mode (development, staging, production)
ENVIRONMENT=production

# Enable debug mode
DEBUG=false

# Enable test mode (uses mock services)
TEST_MODE=false

# Skip NGC API validation in development
SKIP_NGC_VALIDATION=false

# =============================================================================
# Advanced Configuration
# =============================================================================
# Enable experimental features
EXPERIMENTAL_FEATURES=false

# Enable quantum-resistant governance features
QUANTUM_RESISTANT_GOVERNANCE=false

# Enable autonomous policy evolution
AUTONOMOUS_POLICY_EVOLUTION=false

# Enable AI governance mechanisms
AI_GOVERNANCE_MECHANISMS=false

# Custom constitutional principles (comma-separated)
CUSTOM_CONSTITUTIONAL_PRINCIPLES=

# Custom governance workflows (comma-separated)
CUSTOM_GOVERNANCE_WORKFLOWS=
