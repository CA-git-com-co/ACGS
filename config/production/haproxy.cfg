
global
    daemon
    maxconn 4096
    log stdout local0

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    option dontlognull
    option redispatch
    retries 3

# Frontend for ACGS-1 services
frontend acgs_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/acgs.pem
    redirect scheme https if !{ ssl_fc }
    
    # Route to appropriate backend based on path
    acl is_auth path_beg /api/auth
    acl is_ac path_beg /api/constitutional-ai
    acl is_integrity path_beg /api/integrity
    acl is_fv path_beg /api/formal-verification
    acl is_gs path_beg /api/governance-synthesis
    acl is_pgc path_beg /api/policy-governance
    acl is_ec path_beg /api/evolutionary-computation
    
    use_backend auth_backend if is_auth
    use_backend ac_backend if is_ac
    use_backend integrity_backend if is_integrity
    use_backend fv_backend if is_fv
    use_backend gs_backend if is_gs
    use_backend pgc_backend if is_pgc
    use_backend ec_backend if is_ec
    
    default_backend auth_backend

# Backend configurations

backend auth_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server auth_1 127.0.0.1:8000 check
    server auth_2 127.0.0.1:8100 check
    server auth_3 127.0.0.1:8200 check
    server auth_4 127.0.0.1:8300 check
    server auth_5 127.0.0.1:8400 check
    server auth_6 127.0.0.1:8500 check
    server auth_7 127.0.0.1:8600 check
    server auth_8 127.0.0.1:8700 check

backend ac_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server ac_1 127.0.0.1:8001 check
    server ac_2 127.0.0.1:8101 check
    server ac_3 127.0.0.1:8201 check
    server ac_4 127.0.0.1:8301 check
    server ac_5 127.0.0.1:8401 check
    server ac_6 127.0.0.1:8501 check
    server ac_7 127.0.0.1:8601 check
    server ac_8 127.0.0.1:8701 check
    server ac_9 127.0.0.1:8801 check
    server ac_10 127.0.0.1:8901 check
    server ac_11 127.0.0.1:9001 check
    server ac_12 127.0.0.1:9101 check

backend integrity_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server integrity_1 127.0.0.1:8002 check
    server integrity_2 127.0.0.1:8102 check
    server integrity_3 127.0.0.1:8202 check
    server integrity_4 127.0.0.1:8302 check

backend fv_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server fv_1 127.0.0.1:8003 check
    server fv_2 127.0.0.1:8103 check
    server fv_3 127.0.0.1:8203 check
    server fv_4 127.0.0.1:8303 check

backend gs_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server gs_1 127.0.0.1:8004 check
    server gs_2 127.0.0.1:8104 check
    server gs_3 127.0.0.1:8204 check
    server gs_4 127.0.0.1:8304 check
    server gs_5 127.0.0.1:8404 check
    server gs_6 127.0.0.1:8504 check

backend pgc_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server pgc_1 127.0.0.1:8005 check
    server pgc_2 127.0.0.1:8105 check
    server pgc_3 127.0.0.1:8205 check
    server pgc_4 127.0.0.1:8305 check
    server pgc_5 127.0.0.1:8405 check
    server pgc_6 127.0.0.1:8505 check
    server pgc_7 127.0.0.1:8605 check
    server pgc_8 127.0.0.1:8705 check
    server pgc_9 127.0.0.1:8805 check
    server pgc_10 127.0.0.1:8905 check
    server pgc_11 127.0.0.1:9005 check
    server pgc_12 127.0.0.1:9105 check
    server pgc_13 127.0.0.1:9205 check
    server pgc_14 127.0.0.1:9305 check
    server pgc_15 127.0.0.1:9405 check
    server pgc_16 127.0.0.1:9505 check

backend ec_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server ec_1 127.0.0.1:8006 check
    server ec_2 127.0.0.1:8106 check
    server ec_3 127.0.0.1:8206 check
    server ec_4 127.0.0.1:8306 check
