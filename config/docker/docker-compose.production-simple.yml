services:
  postgres:
    image: postgres:15-alpine
    container_name: acgs_postgres_production
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-acgs_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-acgs_production_password_2025}
      POSTGRES_DB: ${POSTGRES_DB:-acgs}
    ports:
      - 5440:5432
    volumes:
      - postgres_production_data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER:-acgs_user} -d ${POSTGRES_DB:-acgs}
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - acgs_production
  redis:
    image: redis:7-alpine
    container_name: acgs_redis_production
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_production_password_2025}
    ports:
      - 6390:6379
    volumes:
      - redis_production_data:/data
    healthcheck:
      test:
        - CMD
        - redis-cli
        - --raw
        - incr
        - ping
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - acgs_production
  prometheus:
    image: prom/prometheus:latest
    container_name: acgs_prometheus_production
    ports:
      - 9091:9090
    volumes:
      - prometheus_production_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=30d
      - --web.enable-lifecycle
    restart: unless-stopped
    networks:
      - acgs_production
  grafana:
    image: grafana/grafana:latest
    container_name: acgs_grafana_production
    ports:
      - 3001:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-acgs_admin_2025}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_production_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - acgs_production
    depends_on:
      - prometheus
volumes:
  postgres_production_data:
    driver: local
  redis_production_data:
    driver: local
  prometheus_production_data:
    driver: local
  grafana_production_data:
    driver: local
networks:
  acgs_production:
    driver: bridge
    name: acgs_production_network
constitutional_hash: cdd01ef066bc6cf2
