groups:
  - name: constitutional_compliance
    rules:
      # Constitutional hash validation alerts
      - alert: ConstitutionalHashMismatch
        expr: acgs_constitutional_hash_valid != 1
        for: 0s
        labels:
          severity: critical
          constitutional_hash: cdd01ef066bc6cf2
        annotations:
          summary: 'Constitutional hash mismatch detected'
          description: 'Service {{ $labels.instance }} has invalid constitutional hash. Expected: cdd01ef066bc6cf2'

      # Compliance threshold alerts
      - alert: ConstitutionalComplianceLow
        expr: acgs_constitutional_compliance_score < 0.8
        for: 30s
        labels:
          severity: high
        annotations:
          summary: 'Constitutional compliance below threshold'
          description: 'Service {{ $labels.instance }} compliance score {{ $value }} is below 0.8 threshold'

      - alert: ConstitutionalComplianceCritical
        expr: acgs_constitutional_compliance_score < 0.5
        for: 0s
        labels:
          severity: critical
        annotations:
          summary: 'Critical constitutional compliance violation'
          description: 'Service {{ $labels.instance }} compliance score {{ $value }} is critically low'

      # Service availability alerts
      - alert: ACGSServiceDown
        expr: up{job=~"acgs-.*"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: 'ACGS service is down'
          description: 'Service {{ $labels.job }} on {{ $labels.instance }} is down'

      # Response time alerts
      - alert: ACGSHighResponseTime
        expr: acgs_http_request_duration_seconds{quantile="0.95"} > 2.0
        for: 60s
        labels:
          severity: warning
        annotations:
          summary: 'High response time detected'
          description: 'Service {{ $labels.instance }} 95th percentile response time is {{ $value }}s (>2s threshold)'

      - alert: ACGSCriticalResponseTime
        expr: acgs_http_request_duration_seconds{quantile="0.95"} > 5.0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: 'Critical response time detected'
          description: 'Service {{ $labels.instance }} 95th percentile response time is {{ $value }}s (>5s threshold)'

      # OPA policy engine alerts
      - alert: OPAPolicyEngineDown
        expr: up{job="opa-policy-engine"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: 'OPA Policy Engine is down'
          description: 'OPA Policy Engine on port 8181 is not responding'

      - alert: OPAPolicyEvaluationErrors
        expr: rate(opa_policy_evaluation_errors_total[5m]) > 0.1
        for: 60s
        labels:
          severity: warning
        annotations:
          summary: 'High OPA policy evaluation error rate'
          description: 'OPA policy evaluation error rate is {{ $value }} errors/sec'

      # AI model performance alerts
      - alert: AIModelHighLatency
        expr: acgs_ai_model_response_time_seconds > 30.0
        for: 60s
        labels:
          severity: warning
        annotations:
          summary: 'AI model high latency'
          description: 'AI model {{ $labels.model }} response time is {{ $value }}s (>30s threshold)'

      - alert: AIModelFailureRate
        expr: rate(acgs_ai_model_failures_total[5m]) > 0.05
        for: 60s
        labels:
          severity: warning
        annotations:
          summary: 'High AI model failure rate'
          description: 'AI model {{ $labels.model }} failure rate is {{ $value }} failures/sec'

      # Resource utilization alerts
      - alert: HighCPUUsage
        expr: acgs_cpu_usage_percent > 80
        for: 300s
        labels:
          severity: warning
        annotations:
          summary: 'High CPU usage'
          description: 'Service {{ $labels.instance }} CPU usage is {{ $value }}%'

      - alert: HighMemoryUsage
        expr: acgs_memory_usage_percent > 85
        for: 300s
        labels:
          severity: warning
        annotations:
          summary: 'High memory usage'
          description: 'Service {{ $labels.instance }} memory usage is {{ $value }}%'

      # Emergency response alerts
      - alert: EmergencyResponseRequired
        expr: acgs_emergency_response_triggered == 1
        for: 0s
        labels:
          severity: critical
        annotations:
          summary: 'Emergency response triggered'
          description: 'Emergency response triggered for {{ $labels.emergency_type }} - RTO target: 30 minutes'

  - name: constitutional_compliance_recording
    rules:
      # Recording rules for constitutional compliance
      - record: acgs:constitutional_compliance_rate
        expr: avg(acgs_constitutional_compliance_score) by (instance)

      - record: acgs:service_availability_rate
        expr: avg(up{job=~"acgs-.*"}) by (job)

      - record: acgs:response_time_p95
        expr: histogram_quantile(0.95, rate(acgs_http_request_duration_seconds_bucket[5m]))

      - record: acgs:response_time_p99
        expr: histogram_quantile(0.99, rate(acgs_http_request_duration_seconds_bucket[5m]))

      - record: acgs:ai_model_success_rate
        expr: 1 - rate(acgs_ai_model_failures_total[5m]) / rate(acgs_ai_model_requests_total[5m])
