{
  "service_structure": {
    "core_services": [
      {
        "name": "evolutionary_computation",
        "path": "/home/dislove/ACGS-2/services/core/evolutionary_computation",
        "python_files": 37,
        "files": [
          "services/core/evolutionary_computation/main.py",
          "services/core/evolutionary_computation/__init__.py",
          "services/core/evolutionary_computation/src/__init__.py",
          "services/core/evolutionary_computation/app/__init__.py",
          "services/core/evolutionary_computation/app/cache_manager.py",
          "services/core/evolutionary_computation/app/main.py",
          "services/core/evolutionary_computation/ec_service/health_monitoring.py",
          "services/core/evolutionary_computation/ec_service/human_approval_workflow.py",
          "services/core/evolutionary_computation/ec_service/evolution_engine.py",
          "services/core/evolutionary_computation/ec_service/security_architecture.py",
          "services/core/evolutionary_computation/ec_service/main.py",
          "services/core/evolutionary_computation/tests/test_wina_integration.py",
          "services/core/evolutionary_computation/tests/test_evolution_oversight.py",
          "services/core/evolutionary_computation/app/services/ac_client.py",
          "services/core/evolutionary_computation/app/services/pgc_client.py",
          "services/core/evolutionary_computation/app/services/gs_client.py",
          "services/core/evolutionary_computation/app/services/__init__.py",
          "services/core/evolutionary_computation/app/services/data_integration_pipeline.py",
          "services/core/evolutionary_computation/app/wina/core.py",
          "services/core/evolutionary_computation/app/wina/continuous_learning.py",
          "services/core/evolutionary_computation/app/wina/gating.py",
          "services/core/evolutionary_computation/app/wina/metrics.py",
          "services/core/evolutionary_computation/app/wina/config.py",
          "services/core/evolutionary_computation/app/wina/constitutional_integration.py",
          "services/core/evolutionary_computation/app/wina/performance_monitoring.py",
          "services/core/evolutionary_computation/app/wina/__init__.py",
          "services/core/evolutionary_computation/app/core/wina_oversight_coordinator.py",
          "services/core/evolutionary_computation/app/middleware/__init__.py",
          "services/core/evolutionary_computation/app/middleware/enhanced_security.py",
          "services/core/evolutionary_computation/app/api/__init__.py",
          "services/core/evolutionary_computation/app/api/v1/reporting.py",
          "services/core/evolutionary_computation/app/api/v1/monitoring.py",
          "services/core/evolutionary_computation/app/api/v1/__init__.py",
          "services/core/evolutionary_computation/app/api/v1/alphaevolve.py",
          "services/core/evolutionary_computation/app/api/v1/oversight.py",
          "services/core/evolutionary_computation/app/api/v1/advanced_wina_oversight.py",
          "services/core/evolutionary_computation/app/api/v1/wina_oversight.py"
        ]
      },
      {
        "name": "governance-workflows",
        "path": "/home/dislove/ACGS-2/services/core/governance-workflows",
        "python_files": 6,
        "files": [
          "services/core/governance-workflows/app/main.py",
          "services/core/governance-workflows/app/config.py",
          "services/core/governance-workflows/app/core/service_integrator.py",
          "services/core/governance-workflows/app/core/workflow_orchestrator.py",
          "services/core/governance-workflows/app/core/metrics_collector.py",
          "services/core/governance-workflows/app/core/performance_monitor.py"
        ]
      },
      {
        "name": "policy-engine",
        "path": "/home/dislove/ACGS-2/services/core/policy-engine",
        "python_files": 1,
        "files": [
          "services/core/policy-engine/main.py"
        ]
      },
      {
        "name": "policy_governance",
        "path": "/home/dislove/ACGS-2/services/core/policy_governance",
        "python_files": 57,
        "files": [
          "services/core/policy_governance/simple_pgc_main.py",
          "services/core/policy_governance/__init__.py",
          "services/core/policy_governance/pgc_service/models.py",
          "services/core/policy_governance/pgc_service/main.py",
          "services/core/policy_governance/pgc_service/start_with_tracing.py",
          "services/core/policy_governance/pgc_service/__init__.py",
          "services/core/policy_governance/pgc_service/optimized_governance_engine.py",
          "services/core/policy_governance/app/cache_manager.py",
          "services/core/policy_governance/app/exceptions.py",
          "services/core/policy_governance/src/__init__.py",
          "services/core/policy_governance/pgc_service/app/schemas.py",
          "services/core/policy_governance/pgc_service/app/telemetry.py",
          "services/core/policy_governance/pgc_service/app/main.py",
          "services/core/policy_governance/pgc_service/app/__init__.py",
          "services/core/policy_governance/pgc_service/app/main_enhanced.py",
          "services/core/policy_governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
          "services/core/policy_governance/pgc_service/tests/test_constitutional_hash_validation.py",
          "services/core/policy_governance/pgc_service/tests/test_wina_enforcement_integration.py",
          "services/core/policy_governance/pgc_service/app/core/constitutional_hash_validator.py",
          "services/core/policy_governance/pgc_service/app/core/database.py",
          "services/core/policy_governance/pgc_service/app/core/auth.py",
          "services/core/policy_governance/pgc_service/app/core/__init__.py",
          "services/core/policy_governance/pgc_service/app/core/policy_synthesis_engine.py",
          "services/core/policy_governance/pgc_service/app/core/limiter.py",
          "services/core/policy_governance/pgc_service/app/core/ultra_low_latency_optimizer.py",
          "services/core/policy_governance/pgc_service/app/core/datalog_engine.py",
          "services/core/policy_governance/pgc_service/app/core/redis_cache_manager.py",
          "services/core/policy_governance/pgc_service/app/core/hardware_acceleration_manager.py",
          "services/core/policy_governance/pgc_service/app/core/realtime_compliance_engine.py",
          "services/core/policy_governance/pgc_service/app/core/manifest_manager.py",
          "services/core/policy_governance/pgc_service/app/core/proactive_fairness_generator.py",
          "services/core/policy_governance/pgc_service/app/core/wina_enforcement_optimizer.py",
          "services/core/policy_governance/pgc_service/app/core/policy_manager.py",
          "services/core/policy_governance/pgc_service/app/core/opa_client.py",
          "services/core/policy_governance/pgc_service/app/core/metrics.py",
          "services/core/policy_governance/pgc_service/app/core/incremental_compiler.py",
          "services/core/policy_governance/pgc_service/app/core/wina_policy_compiler.py",
          "services/core/policy_governance/pgc_service/app/core/policy_format_router.py",
          "services/core/policy_governance/pgc_service/app/core/secure_execution.py",
          "services/core/policy_governance/pgc_service/app/middleware/constitutional_validation.py",
          "services/core/policy_governance/pgc_service/app/middleware/__init__.py",
          "services/core/policy_governance/pgc_service/app/middleware/enhanced_security.py",
          "services/core/policy_governance/pgc_service/app/config/service_config.py",
          "services/core/policy_governance/pgc_service/app/monitoring/acgs_pgp_metrics.py",
          "services/core/policy_governance/pgc_service/app/services/fv_client.py",
          "services/core/policy_governance/pgc_service/app/services/qpe_client.py",
          "services/core/policy_governance/pgc_service/app/services/__init__.py",
          "services/core/policy_governance/pgc_service/app/services/integrity_client.py",
          "services/core/policy_governance/pgc_service/app/services/advanced_cache.py",
          "services/core/policy_governance/pgc_service/app/api/__init__.py",
          "services/core/policy_governance/pgc_service/app/api/v1/ultra_low_latency.py",
          "services/core/policy_governance/pgc_service/app/api/v1/quantum_enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/alphaevolve_enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/__init__.py",
          "services/core/policy_governance/pgc_service/app/api/v1/enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/governance_workflows.py",
          "services/core/policy_governance/pgc_service/app/api/v1/incremental_compilation.py"
        ]
      },
      {
        "name": "constitutional-ai",
        "path": "/home/dislove/ACGS-2/services/core/constitutional-ai",
        "python_files": 68,
        "files": [
          "services/core/constitutional-ai/__init__.py",
          "services/core/constitutional-ai/src/__init__.py",
          "services/core/constitutional-ai/ac_service/validate_stakeholder_system.py",
          "services/core/constitutional-ai/ac_service/test_stakeholder_simple.py",
          "services/core/constitutional-ai/ac_service/models.py",
          "services/core/constitutional-ai/ac_service/test_stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/main.py",
          "services/core/constitutional-ai/ac_service/__init__.py",
          "services/core/constitutional-ai/ac_service/acge_single_model_service.py",
          "services/core/constitutional-ai/ac_service/tests/test_human_in_the_loop_sampling.py",
          "services/core/constitutional-ai/ac_service/tests/test_hitl_api_integration.py",
          "services/core/constitutional-ai/ac_service/tests/test_intelligent_conflict_resolution.py",
          "services/core/constitutional-ai/ac_service/app/schemas.py",
          "services/core/constitutional-ai/ac_service/app/main.py",
          "services/core/constitutional-ai/ac_service/app/cache_manager.py",
          "services/core/constitutional-ai/ac_service/app/crud.py",
          "services/core/constitutional-ai/ac_service/app/models.py",
          "services/core/constitutional-ai/ac_service/app/__init__.py",
          "services/core/constitutional-ai/ac_service/alembic/versions/005_add_qec_conflict_resolution_fields.py",
          "services/core/constitutional-ai/ac_service/app/integrations/polis_integration.py",
          "services/core/constitutional-ai/ac_service/app/middleware/enhanced_security.py",
          "services/core/constitutional-ai/ac_service/app/middleware/__init__.py",
          "services/core/constitutional-ai/ac_service/app/core/constitutional_council_scalability.py",
          "services/core/constitutional-ai/ac_service/app/core/auth.py",
          "services/core/constitutional-ai/ac_service/app/core/__init__.py",
          "services/core/constitutional-ai/ac_service/app/core/domain_context_manager.py",
          "services/core/constitutional-ai/ac_service/app/core/amendment_state_machine.py",
          "services/core/constitutional-ai/ac_service/app/core/cryptographic_signing.py",
          "services/core/constitutional-ai/ac_service/app/api/hitl_sampling.py",
          "services/core/constitutional-ai/ac_service/app/api/public_consultation.py",
          "services/core/constitutional-ai/ac_service/app/api/__init__.py",
          "services/core/constitutional-ai/ac_service/app/services/collective_constitutional_ai.py",
          "services/core/constitutional-ai/ac_service/app/services/human_escalation_system.py",
          "services/core/constitutional-ai/ac_service/app/services/constitutional_council_dashboard.py",
          "services/core/constitutional-ai/ac_service/app/services/public_consultation_service.py",
          "services/core/constitutional-ai/ac_service/app/services/conflict_resolution_orchestrator.py",
          "services/core/constitutional-ai/ac_service/app/services/constitutional_validation_service.py",
          "services/core/constitutional-ai/ac_service/app/services/enhanced_constitutional_reward.py",
          "services/core/constitutional-ai/ac_service/app/services/llm_as_judge_framework.py",
          "services/core/constitutional-ai/ac_service/app/services/intelligent_conflict_detector.py",
          "services/core/constitutional-ai/ac_service/app/services/conflict_audit_system.py",
          "services/core/constitutional-ai/ac_service/app/services/advanced_democratic_participation.py",
          "services/core/constitutional-ai/ac_service/app/services/qec_conflict_resolver.py",
          "services/core/constitutional-ai/ac_service/app/services/voting_mechanism.py",
          "services/core/constitutional-ai/ac_service/app/services/stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/app/services/automated_resolution_engine.py",
          "services/core/constitutional-ai/ac_service/app/services/hitl_cross_service_integration.py",
          "services/core/constitutional-ai/ac_service/app/services/voting_client.py",
          "services/core/constitutional-ai/ac_service/app/services/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/services/human_in_the_loop_sampler.py",
          "services/core/constitutional-ai/ac_service/app/workflows/workflow_manager.py",
          "services/core/constitutional-ai/ac_service/app/workflows/constitutional_council_graph.py",
          "services/core/constitutional-ai/ac_service/app/workflows/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/workflows/__init__.py",
          "services/core/constitutional-ai/ac_service/app/monitoring/scalability_metrics.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/collective_constitutional_ai.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/conflict_resolution.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/dashboard_websocket.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/__init__.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/principles.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/wina_constitutional_updates.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/constitutional_council.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/workflows.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/fidelity_monitor.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/voting.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/constitutional_validation.py"
        ]
      },
      {
        "name": "evolutionary-computation",
        "path": "/home/dislove/ACGS-2/services/core/evolutionary-computation",
        "python_files": 37,
        "files": [
          "services/core/evolutionary-computation/main.py",
          "services/core/evolutionary-computation/__init__.py",
          "services/core/evolutionary-computation/src/__init__.py",
          "services/core/evolutionary-computation/app/__init__.py",
          "services/core/evolutionary-computation/app/cache_manager.py",
          "services/core/evolutionary-computation/app/main.py",
          "services/core/evolutionary-computation/ec_service/health_monitoring.py",
          "services/core/evolutionary-computation/ec_service/human_approval_workflow.py",
          "services/core/evolutionary-computation/ec_service/evolution_engine.py",
          "services/core/evolutionary-computation/ec_service/security_architecture.py",
          "services/core/evolutionary-computation/ec_service/main.py",
          "services/core/evolutionary-computation/tests/test_wina_integration.py",
          "services/core/evolutionary-computation/tests/test_evolution_oversight.py",
          "services/core/evolutionary-computation/app/services/ac_client.py",
          "services/core/evolutionary-computation/app/services/pgc_client.py",
          "services/core/evolutionary-computation/app/services/gs_client.py",
          "services/core/evolutionary-computation/app/services/__init__.py",
          "services/core/evolutionary-computation/app/services/data_integration_pipeline.py",
          "services/core/evolutionary-computation/app/wina/core.py",
          "services/core/evolutionary-computation/app/wina/continuous_learning.py",
          "services/core/evolutionary-computation/app/wina/gating.py",
          "services/core/evolutionary-computation/app/wina/metrics.py",
          "services/core/evolutionary-computation/app/wina/config.py",
          "services/core/evolutionary-computation/app/wina/constitutional_integration.py",
          "services/core/evolutionary-computation/app/wina/performance_monitoring.py",
          "services/core/evolutionary-computation/app/wina/__init__.py",
          "services/core/evolutionary-computation/app/core/wina_oversight_coordinator.py",
          "services/core/evolutionary-computation/app/middleware/__init__.py",
          "services/core/evolutionary-computation/app/middleware/enhanced_security.py",
          "services/core/evolutionary-computation/app/api/__init__.py",
          "services/core/evolutionary-computation/app/api/v1/reporting.py",
          "services/core/evolutionary-computation/app/api/v1/monitoring.py",
          "services/core/evolutionary-computation/app/api/v1/__init__.py",
          "services/core/evolutionary-computation/app/api/v1/alphaevolve.py",
          "services/core/evolutionary-computation/app/api/v1/oversight.py",
          "services/core/evolutionary-computation/app/api/v1/advanced_wina_oversight.py",
          "services/core/evolutionary-computation/app/api/v1/wina_oversight.py"
        ]
      },
      {
        "name": "formal_verification",
        "path": "/home/dislove/ACGS-2/services/core/formal_verification",
        "python_files": 34,
        "files": [
          "services/core/formal_verification/__init__.py",
          "services/core/formal_verification/fv_service/acge_formal_verification_service.py",
          "services/core/formal_verification/fv_service/__init__.py",
          "services/core/formal_verification/fv_service/models.py",
          "services/core/formal_verification/fv_service/main.py",
          "services/core/formal_verification/tests/test_formal_verification_completion.py",
          "services/core/formal_verification/src/__init__.py",
          "services/core/formal_verification/fv_service/app/cache_manager.py",
          "services/core/formal_verification/fv_service/app/schemas.py",
          "services/core/formal_verification/fv_service/app/__init__.py",
          "services/core/formal_verification/fv_service/app/services/ac_client.py",
          "services/core/formal_verification/fv_service/app/services/__init__.py",
          "services/core/formal_verification/fv_service/app/services/integrity_client.py",
          "services/core/formal_verification/fv_service/app/api/__init__.py",
          "services/core/formal_verification/fv_service/app/core/proof_obligations.py",
          "services/core/formal_verification/fv_service/app/core/constitutional_verification_engine.py",
          "services/core/formal_verification/fv_service/app/core/adversarial_robustness_tester.py",
          "services/core/formal_verification/fv_service/app/core/tiered_validation.py",
          "services/core/formal_verification/fv_service/app/core/enhanced_multi_model_validation.py",
          "services/core/formal_verification/fv_service/app/core/policy_smt_compiler.py",
          "services/core/formal_verification/fv_service/app/core/verification_logic.py",
          "services/core/formal_verification/fv_service/app/core/verification_completeness_tester.py",
          "services/core/formal_verification/fv_service/app/core/cross_domain_testing_engine.py",
          "services/core/formal_verification/fv_service/app/core/auth.py",
          "services/core/formal_verification/fv_service/app/core/parallel_validation_pipeline.py",
          "services/core/formal_verification/fv_service/app/core/smt_solver_integration.py",
          "services/core/formal_verification/fv_service/app/core/bias_detector.py",
          "services/core/formal_verification/fv_service/app/core/safety_conflict_checker.py",
          "services/core/formal_verification/fv_service/app/core/__init__.py",
          "services/core/formal_verification/fv_service/app/middleware/enhanced_security.py",
          "services/core/formal_verification/fv_service/app/middleware/__init__.py",
          "services/core/formal_verification/fv_service/app/api/v1/cross_domain_testing.py",
          "services/core/formal_verification/fv_service/app/api/v1/verify.py",
          "services/core/formal_verification/fv_service/app/api/v1/__init__.py"
        ]
      },
      {
        "name": "governance-synthesis",
        "path": "/home/dislove/ACGS-2/services/core/governance-synthesis",
        "python_files": 113,
        "files": [
          "services/core/governance-synthesis/__init__.py",
          "services/core/governance-synthesis/gs_service/models.py",
          "services/core/governance-synthesis/gs_service/main.py",
          "services/core/governance-synthesis/gs_service/start_minimal.py",
          "services/core/governance-synthesis/gs_service/__init__.py",
          "services/core/governance-synthesis/src/__init__.py",
          "services/core/governance-synthesis/gs_service/app/__init__.py",
          "services/core/governance-synthesis/gs_service/app/crud_gs.py",
          "services/core/governance-synthesis/gs_service/app/cache_manager.py",
          "services/core/governance-synthesis/gs_service/app/main.py",
          "services/core/governance-synthesis/gs_service/app/schemas.py",
          "services/core/governance-synthesis/gs_service/tests/test_gemini_validators.py",
          "services/core/governance-synthesis/gs_service/tests/test_wina_rego_synthesis.py",
          "services/core/governance-synthesis/gs_service/tests/test_wina_rego_integration.py",
          "services/core/governance-synthesis/gs_service/tests/test_evolutionary_tensor_integration.py",
          "services/core/governance-synthesis/gs_service/tests/test_policy_synthesis_enhancement.py",
          "services/core/governance-synthesis/gs_service/tests/test_groq_tensor_service.py",
          "services/core/governance-synthesis/gs_service/tests/test_router_optimization.py",
          "services/core/governance-synthesis/gs_service/app/validators/gemini_validators.py",
          "services/core/governance-synthesis/gs_service/app/validators/__init__.py",
          "services/core/governance-synthesis/gs_service/app/core/rule_generator.py",
          "services/core/governance-synthesis/gs_service/app/core/constitutional_prompting.py",
          "services/core/governance-synthesis/gs_service/app/core/llm_reliability_framework.py",
          "services/core/governance-synthesis/gs_service/app/core/constitutional_council_scalability.py",
          "services/core/governance-synthesis/gs_service/app/core/sliding_window_ucb.py",
          "services/core/governance-synthesis/gs_service/app/core/distributed_policy_cache.py",
          "services/core/governance-synthesis/gs_service/app/core/datalog_templates.py",
          "services/core/governance-synthesis/gs_service/app/core/conservative_linucb.py",
          "services/core/governance-synthesis/gs_service/app/core/mab_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/contextual_analyzer.py",
          "services/core/governance-synthesis/gs_service/app/core/wina_llm_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/ab_testing_framework.py",
          "services/core/governance-synthesis/gs_service/app/core/__init__.py",
          "services/core/governance-synthesis/gs_service/app/core/auth.py",
          "services/core/governance-synthesis/gs_service/app/core/qec_enhanced_synthesizer.py",
          "services/core/governance-synthesis/gs_service/app/core/ollama_client.py",
          "services/core/governance-synthesis/gs_service/app/core/heterogeneous_validator.py",
          "services/core/governance-synthesis/gs_service/app/core/opa_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/mab_prompt_optimizer.py",
          "services/core/governance-synthesis/gs_service/app/core/wina_rego_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/core/llm_circuit_breaker.py",
          "services/core/governance-synthesis/gs_service/app/core/performance_optimizer.py",
          "services/core/governance-synthesis/gs_service/app/core/violation_config.py",
          "services/core/governance-synthesis/gs_service/app/core/llm_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/phase_a3_multi_model_consensus.py",
          "services/core/governance-synthesis/gs_service/app/core/performance_validation.py",
          "services/core/governance-synthesis/gs_service/app/core/multi_model_coordinator.py",
          "services/core/governance-synthesis/gs_service/app/core/enhanced_constitutional_analyzer.py",
          "services/core/governance-synthesis/gs_service/app/core/nvidia_qwen_client.py",
          "services/core/governance-synthesis/gs_service/app/security/adversarial_defenses.py",
          "services/core/governance-synthesis/gs_service/app/services/performance_monitor.py",
          "services/core/governance-synthesis/gs_service/app/services/security_compliance.py",
          "services/core/governance-synthesis/gs_service/app/services/advanced_cache.py",
          "services/core/governance-synthesis/gs_service/app/services/integrity_client.py",
          "services/core/governance-synthesis/gs_service/app/services/groq_tensor_service.py",
          "services/core/governance-synthesis/gs_service/app/services/violation_escalation_service.py",
          "services/core/governance-synthesis/gs_service/app/services/qec_error_correction_service.py",
          "services/core/governance-synthesis/gs_service/app/services/ac_client.py",
          "services/core/governance-synthesis/gs_service/app/services/policy_validator.py",
          "services/core/governance-synthesis/gs_service/app/services/monitoring_service.py",
          "services/core/governance-synthesis/gs_service/app/services/stakeholder_engagement.py",
          "services/core/governance-synthesis/gs_service/app/services/fairness_evaluation_framework.py",
          "services/core/governance-synthesis/gs_service/app/services/alphaevolve_bridge.py",
          "services/core/governance-synthesis/gs_service/app/services/enhanced_governance_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/services/enhanced_multi_model_validation.py",
          "services/core/governance-synthesis/gs_service/app/services/lipschitz_estimator.py",
          "services/core/governance-synthesis/gs_service/app/services/cache_manager.py",
          "services/core/governance-synthesis/gs_service/app/services/violation_audit_service.py",
          "services/core/governance-synthesis/gs_service/app/services/fv_client.py",
          "services/core/governance-synthesis/gs_service/app/services/__init__.py",
          "services/core/governance-synthesis/gs_service/app/services/federated_learning_orchestrator.py",
          "services/core/governance-synthesis/gs_service/app/services/constitutional_reporting_service.py",
          "services/core/governance-synthesis/gs_service/app/services/violation_detection_service.py",
          "services/core/governance-synthesis/gs_service/app/models/mab_models.py",
          "services/core/governance-synthesis/gs_service/app/models/reliability_models.py",
          "services/core/governance-synthesis/gs_service/app/wina/gating.py",
          "services/core/governance-synthesis/gs_service/app/wina/models.py",
          "services/core/governance-synthesis/gs_service/app/wina/core.py",
          "services/core/governance-synthesis/gs_service/app/wina/svd_utils.py",
          "services/core/governance-synthesis/gs_service/app/wina/__init__.py",
          "services/core/governance-synthesis/gs_service/app/shared/metrics.py",
          "services/core/governance-synthesis/gs_service/app/api/__init__.py",
          "services/core/governance-synthesis/gs_service/app/middleware/__init__.py",
          "services/core/governance-synthesis/gs_service/app/middleware/enhanced_security.py",
          "services/core/governance-synthesis/gs_service/app/config/opa_config.py",
          "services/core/governance-synthesis/gs_service/app/workflows/structured_output_models.py",
          "services/core/governance-synthesis/gs_service/app/workflows/multi_model_manager.py",
          "services/core/governance-synthesis/gs_service/app/workflows/policy_synthesis_workflow.py",
          "services/core/governance-synthesis/gs_service/app/workflows/__init__.py",
          "services/core/governance-synthesis/gs_service/app/workflows/phase_a3_governance_orchestrator.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/synthesize.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/__init__.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/mab_optimization.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/qec_error_correction.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/constitutional_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/governance_workflows.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/fidelity_monitoring_websocket.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/wina_rego_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/phase2_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/enhanced_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/policy_management.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/violation_management.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/constitutional_reports.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/reliability_metrics.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/phase_a3_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/multi_model_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/enhanced_multi_model.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/alphaevolve_integration.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/performance_monitoring.py",
          "services/core/governance-synthesis/gs_service/tests/integration/test_opa_integration.py",
          "services/core/governance-synthesis/gs_service/tests/security/test_security_compliance.py",
          "services/core/governance-synthesis/gs_service/tests/performance/test_governance_synthesis_performance.py",
          "services/core/governance-synthesis/gs_service/tests/unit/services/test_policy_validator.py"
        ]
      },
      {
        "name": "self-evolving-ai",
        "path": "/home/dislove/ACGS-2/services/core/self-evolving-ai",
        "python_files": 15,
        "files": [
          "services/core/self-evolving-ai/__init__.py",
          "services/core/self-evolving-ai/src/__init__.py",
          "services/core/self-evolving-ai/src/test_service.py",
          "services/core/self-evolving-ai/app/config.py",
          "services/core/self-evolving-ai/app/dependencies.py",
          "services/core/self-evolving-ai/app/__init__.py",
          "services/core/self-evolving-ai/app/main.py",
          "services/core/self-evolving-ai/app/core/observability_framework.py",
          "services/core/self-evolving-ai/app/core/background_processor.py",
          "services/core/self-evolving-ai/app/core/security_manager.py",
          "services/core/self-evolving-ai/app/core/evolution_engine.py",
          "services/core/self-evolving-ai/app/core/policy_orchestrator.py",
          "services/core/self-evolving-ai/app/api/v1/evolution.py",
          "services/core/self-evolving-ai/app/api/v1/observability.py",
          "services/core/self-evolving-ai/app/api/v1/security.py"
        ]
      },
      {
        "name": "opa-policies",
        "path": "/home/dislove/ACGS-2/services/core/opa-policies",
        "python_files": 6,
        "files": [
          "services/core/opa-policies/test_performance.py",
          "services/core/opa-policies/test_ci_performance.py",
          "services/core/opa-policies/benchmark.py",
          "services/core/opa-policies/prometheus_metrics.py",
          "services/core/opa-policies/main.py",
          "services/core/opa-policies/locust_ci.py"
        ]
      },
      {
        "name": "governance_workflows",
        "path": "/home/dislove/ACGS-2/services/core/governance_workflows",
        "python_files": 6,
        "files": [
          "services/core/governance_workflows/app/main.py",
          "services/core/governance_workflows/app/config.py",
          "services/core/governance_workflows/app/core/service_integrator.py",
          "services/core/governance_workflows/app/core/workflow_orchestrator.py",
          "services/core/governance_workflows/app/core/metrics_collector.py",
          "services/core/governance_workflows/app/core/performance_monitor.py"
        ]
      },
      {
        "name": "audit-engine",
        "path": "/home/dislove/ACGS-2/services/core/audit-engine",
        "python_files": 2,
        "files": [
          "services/core/audit-engine/main.py",
          "services/core/audit-engine/tests/test_audit_engine.py"
        ]
      },
      {
        "name": "dgm-service",
        "path": "/home/dislove/ACGS-2/services/core/dgm-service",
        "python_files": 99,
        "files": [
          "services/core/dgm-service/alembic/env.py",
          "services/core/dgm-service/monitoring/log-analysis.py",
          "services/core/dgm-service/dgm_service/__init__.py",
          "services/core/dgm-service/dgm_service/database.py",
          "services/core/dgm-service/dgm_service/main.py",
          "services/core/dgm-service/dgm_service/config.py",
          "services/core/dgm-service/tests/conftest_full.py",
          "services/core/dgm-service/tests/conftest.py",
          "services/core/dgm-service/tests/__init__.py",
          "services/core/dgm-service/tests/test_basic.py",
          "services/core/dgm-service/tests/run_tests.py",
          "services/core/dgm-service/dgm_service/auth/models.py",
          "services/core/dgm-service/dgm_service/auth/__init__.py",
          "services/core/dgm-service/dgm_service/auth/permissions.py",
          "services/core/dgm-service/dgm_service/auth/dependencies.py",
          "services/core/dgm-service/dgm_service/auth/auth_client.py",
          "services/core/dgm-service/dgm_service/api/__init__.py",
          "services/core/dgm-service/dgm_service/monitoring/metrics.py",
          "services/core/dgm-service/dgm_service/monitoring/__init__.py",
          "services/core/dgm-service/dgm_service/database/__init__.py",
          "services/core/dgm-service/dgm_service/database/cli.py",
          "services/core/dgm-service/dgm_service/database/migrations.py",
          "services/core/dgm-service/dgm_service/database/performance_optimizer.py",
          "services/core/dgm-service/dgm_service/database/monitoring.py",
          "services/core/dgm-service/dgm_service/storage/__init__.py",
          "services/core/dgm-service/dgm_service/storage/archive_manager.py",
          "services/core/dgm-service/dgm_service/core/__init__.py",
          "services/core/dgm-service/dgm_service/core/bandit_algorithm.py",
          "services/core/dgm-service/dgm_service/core/constitutional_validator.py",
          "services/core/dgm-service/dgm_service/core/dgm_engine.py",
          "services/core/dgm-service/dgm_service/security/audit_logger.py",
          "services/core/dgm-service/dgm_service/security/__init__.py",
          "services/core/dgm-service/dgm_service/models_integration/local_llm_integration.py",
          "services/core/dgm-service/dgm_service/models_integration/__init__.py",
          "services/core/dgm-service/dgm_service/models_integration/model_client.py",
          "services/core/dgm-service/dgm_service/models_integration/claude_client.py",
          "services/core/dgm-service/dgm_service/models_integration/model_router.py",
          "services/core/dgm-service/dgm_service/middleware/__init__.py",
          "services/core/dgm-service/dgm_service/middleware/security.py",
          "services/core/dgm-service/dgm_service/middleware/auth.py",
          "services/core/dgm-service/dgm_service/middleware/logging.py",
          "services/core/dgm-service/dgm_service/models/compliance.py",
          "services/core/dgm-service/dgm_service/models/workspace.py",
          "services/core/dgm-service/dgm_service/models/bandit.py",
          "services/core/dgm-service/dgm_service/models/config.py",
          "services/core/dgm-service/dgm_service/models/__init__.py",
          "services/core/dgm-service/dgm_service/models/metrics.py",
          "services/core/dgm-service/dgm_service/models/archive.py",
          "services/core/dgm-service/dgm_service/network/__init__.py",
          "services/core/dgm-service/dgm_service/network/service_client.py",
          "services/core/dgm-service/dgm_service/network/circuit_breaker.py",
          "services/core/dgm-service/dgm_service/logging/__init__.py",
          "services/core/dgm-service/dgm_service/utils/logging_utils.py",
          "services/core/dgm-service/dgm_service/messaging/event_publisher.py",
          "services/core/dgm-service/dgm_service/messaging/nats_client.py",
          "services/core/dgm-service/dgm_service/messaging/__init__.py",
          "services/core/dgm-service/dgm_service/messaging/event_subscriber.py",
          "services/core/dgm-service/dgm_service/messaging/message_types.py",
          "services/core/dgm-service/dgm_service/workflows/__init__.py",
          "services/core/dgm-service/dgm_service/workflows/workflow_state.py",
          "services/core/dgm-service/dgm_service/workflows/workflow_engine.py",
          "services/core/dgm-service/dgm_service/api/v1/models.py",
          "services/core/dgm-service/dgm_service/api/v1/dgm.py",
          "services/core/dgm-service/dgm_service/api/v1/constitutional.py",
          "services/core/dgm-service/dgm_service/api/v1/__init__.py",
          "services/core/dgm-service/dgm_service/api/v1/health.py",
          "services/core/dgm-service/tests/constitutional/__init__.py",
          "services/core/dgm-service/tests/integration/__init__.py",
          "services/core/dgm-service/tests/unit/__init__.py",
          "services/core/dgm-service/tests/performance/test_database_performance.py",
          "services/core/dgm-service/tests/performance/test_api_performance.py",
          "services/core/dgm-service/tests/performance/test_system_performance.py",
          "services/core/dgm-service/tests/performance/locustfile.py",
          "services/core/dgm-service/tests/performance/test_cache_performance.py",
          "services/core/dgm-service/tests/performance/__init__.py",
          "services/core/dgm-service/tests/performance/run_performance_tests.py",
          "services/core/dgm-service/tests/constitutional/governance/__init__.py",
          "services/core/dgm-service/tests/constitutional/governance/test_democratic_principles.py",
          "services/core/dgm-service/tests/constitutional/audit/test_audit_trail.py",
          "services/core/dgm-service/tests/constitutional/audit/__init__.py",
          "services/core/dgm-service/tests/constitutional/compliance/test_compliance_validation.py",
          "services/core/dgm-service/tests/constitutional/compliance/__init__.py",
          "services/core/dgm-service/tests/integration/services/test_service_integration.py",
          "services/core/dgm-service/tests/integration/services/__init__.py",
          "services/core/dgm-service/tests/integration/messaging/test_messaging_basic.py",
          "services/core/dgm-service/tests/integration/messaging/test_nats_integration.py",
          "services/core/dgm-service/tests/integration/messaging/__init__.py",
          "services/core/dgm-service/tests/integration/database/__init__.py",
          "services/core/dgm-service/tests/integration/database/test_database_integration.py",
          "services/core/dgm-service/tests/integration/istio/test_service_mesh.py",
          "services/core/dgm-service/tests/integration/istio/__init__.py",
          "services/core/dgm-service/tests/unit/core/test_performance_monitor.py",
          "services/core/dgm-service/tests/unit/core/test_constitutional_validator.py",
          "services/core/dgm-service/tests/unit/core/test_dgm_engine.py",
          "services/core/dgm-service/tests/unit/core/__init__.py",
          "services/core/dgm-service/tests/unit/models/test_models.py",
          "services/core/dgm-service/tests/unit/models/__init__.py",
          "services/core/dgm-service/tests/unit/api/test_dgm_endpoints.py",
          "services/core/dgm-service/tests/unit/api/__init__.py"
        ]
      },
      {
        "name": "acgs-pgp-v8",
        "path": "/home/dislove/ACGS-2/services/core/acgs-pgp-v8",
        "python_files": 67,
        "files": [
          "services/core/acgs-pgp-v8/data_drift_detection.py",
          "services/core/acgs-pgp-v8/mice_imputation_system.py",
          "services/core/acgs-pgp-v8/mice_demonstration.py",
          "services/core/acgs-pgp-v8/nats_event_broker.py",
          "services/core/acgs-pgp-v8/nested_cross_validation.py",
          "services/core/acgs-pgp-v8/automated_hyperparameter_tuning.py",
          "services/core/acgs-pgp-v8/smote_implementation.py",
          "services/core/acgs-pgp-v8/streaming_data_converter.py",
          "services/core/acgs-pgp-v8/enhanced_mice_test.py",
          "services/core/acgs-pgp-v8/model_lifecycle_manager.py",
          "services/core/acgs-pgp-v8/advanced_feature_engineering.py",
          "services/core/acgs-pgp-v8/test_ml_dependencies.py",
          "services/core/acgs-pgp-v8/baseline_performance_measurement.py",
          "services/core/acgs-pgp-v8/multi_armed_bandit_selection.py",
          "services/core/acgs-pgp-v8/event_driven_drift_detection.py",
          "services/core/acgs-pgp-v8/bandit_efficiency_demonstration.py",
          "services/core/acgs-pgp-v8/test_high_quality_data.py",
          "services/core/acgs-pgp-v8/__init__.py",
          "services/core/acgs-pgp-v8/aici_integration.py",
          "services/core/acgs-pgp-v8/windowed_statistical_analysis.py",
          "services/core/acgs-pgp-v8/data_quality_framework.py",
          "services/core/acgs-pgp-v8/automated_model_retraining.py",
          "services/core/acgs-pgp-v8/enhanced_bandit_test.py",
          "services/core/acgs-pgp-v8/streaming_analytics_pipeline.py",
          "services/core/acgs-pgp-v8/event_driven_data_quality.py",
          "services/core/acgs-pgp-v8/ensemble_model_architecture.py",
          "services/core/acgs-pgp-v8/scripts/train_ml_models.py",
          "services/core/acgs-pgp-v8/scripts/optimize_database.py",
          "services/core/acgs-pgp-v8/tests/__init__.py",
          "services/core/acgs-pgp-v8/tests/test_qec_sft_integration.py",
          "services/core/acgs-pgp-v8/tests/conftest.py",
          "services/core/acgs-pgp-v8/tests/test_integration.py",
          "services/core/acgs-pgp-v8/tests/test_performance.py",
          "services/core/acgs-pgp-v8/tests/test_generation_engine.py",
          "services/core/acgs-pgp-v8/tests/test_ml_syndrome_diagnosis.py",
          "services/core/acgs-pgp-v8/tests/test_quantum_error_correction.py",
          "services/core/acgs-pgp-v8/src/__init__.py",
          "services/core/acgs-pgp-v8/src/test_monitoring_integration.py",
          "services/core/acgs-pgp-v8/src/main.py",
          "services/core/acgs-pgp-v8/src/run_tests.py",
          "services/core/acgs-pgp-v8/src/database/optimization.py",
          "services/core/acgs-pgp-v8/src/database/__init__.py",
          "services/core/acgs-pgp-v8/src/database/migrations.py",
          "services/core/acgs-pgp-v8/src/database/connection.py",
          "services/core/acgs-pgp-v8/src/database/models.py",
          "services/core/acgs-pgp-v8/src/quantum/qec_engine.py",
          "services/core/acgs-pgp-v8/src/quantum/__init__.py",
          "services/core/acgs-pgp-v8/src/monitoring/alerts.py",
          "services/core/acgs-pgp-v8/src/monitoring/__init__.py",
          "services/core/acgs-pgp-v8/src/monitoring/health.py",
          "services/core/acgs-pgp-v8/src/monitoring/metrics.py",
          "services/core/acgs-pgp-v8/src/see/environment.py",
          "services/core/acgs-pgp-v8/src/see/__init__.py",
          "services/core/acgs-pgp-v8/src/see/models.py",
          "services/core/acgs-pgp-v8/src/generation_engine/__init__.py",
          "services/core/acgs-pgp-v8/src/generation_engine/models.py",
          "services/core/acgs-pgp-v8/src/generation_engine/engine.py",
          "services/core/acgs-pgp-v8/src/caching/__init__.py",
          "services/core/acgs-pgp-v8/src/caching/enhanced_cache.py",
          "services/core/acgs-pgp-v8/src/caching/policy_cache.py",
          "services/core/acgs-pgp-v8/src/caching/cache_manager.py",
          "services/core/acgs-pgp-v8/src/caching/execution_cache.py",
          "services/core/acgs-pgp-v8/src/caching/diagnostic_cache.py",
          "services/core/acgs-pgp-v8/src/sde/engine.py",
          "services/core/acgs-pgp-v8/src/sde/__init__.py",
          "services/core/acgs-pgp-v8/src/sde/models.py",
          "services/core/acgs-pgp-v8/src/sde/ml_models.py"
        ]
      },
      {
        "name": "sandbox-controller",
        "path": "/home/dislove/ACGS-2/services/core/sandbox-controller",
        "python_files": 3,
        "files": [
          "services/core/sandbox-controller/main.py",
          "services/core/sandbox-controller/hardened/main.py",
          "services/core/sandbox-controller/hardened/tests/test_security_hardening.py"
        ]
      },
      {
        "name": "self_evolving_ai",
        "path": "/home/dislove/ACGS-2/services/core/self_evolving_ai",
        "python_files": 15,
        "files": [
          "services/core/self_evolving_ai/__init__.py",
          "services/core/self_evolving_ai/src/__init__.py",
          "services/core/self_evolving_ai/src/test_service.py",
          "services/core/self_evolving_ai/app/config.py",
          "services/core/self_evolving_ai/app/dependencies.py",
          "services/core/self_evolving_ai/app/__init__.py",
          "services/core/self_evolving_ai/app/main.py",
          "services/core/self_evolving_ai/app/core/observability_framework.py",
          "services/core/self_evolving_ai/app/core/background_processor.py",
          "services/core/self_evolving_ai/app/core/security_manager.py",
          "services/core/self_evolving_ai/app/core/evolution_engine.py",
          "services/core/self_evolving_ai/app/core/policy_orchestrator.py",
          "services/core/self_evolving_ai/app/api/v1/evolution.py",
          "services/core/self_evolving_ai/app/api/v1/observability.py",
          "services/core/self_evolving_ai/app/api/v1/security.py"
        ]
      },
      {
        "name": "aici_integration",
        "path": "/home/dislove/ACGS-2/services/core/aici_integration",
        "python_files": 4,
        "files": [
          "services/core/aici_integration/__init__.py",
          "services/core/aici_integration/monitoring.py",
          "services/core/aici_integration/constitutional_controller.py",
          "services/core/aici_integration/performance_optimization.py"
        ]
      },
      {
        "name": "constitutional-trainer",
        "path": "/home/dislove/ACGS-2/services/core/constitutional-trainer",
        "python_files": 8,
        "files": [
          "services/core/constitutional-trainer/privacy_engine.py",
          "services/core/constitutional-trainer/test_basic_functionality.py",
          "services/core/constitutional-trainer/constitutional_trainer.py",
          "services/core/constitutional-trainer/test_structure.py",
          "services/core/constitutional-trainer/main.py",
          "services/core/constitutional-trainer/validators.py",
          "services/core/constitutional-trainer/metrics.py",
          "services/core/constitutional-trainer/tests/test_integration.py"
        ]
      },
      {
        "name": "policy-governance",
        "path": "/home/dislove/ACGS-2/services/core/policy-governance",
        "python_files": 57,
        "files": [
          "services/core/policy-governance/simple_pgc_main.py",
          "services/core/policy-governance/__init__.py",
          "services/core/policy-governance/pgc_service/models.py",
          "services/core/policy-governance/pgc_service/main.py",
          "services/core/policy-governance/pgc_service/start_with_tracing.py",
          "services/core/policy-governance/pgc_service/__init__.py",
          "services/core/policy-governance/pgc_service/optimized_governance_engine.py",
          "services/core/policy-governance/app/cache_manager.py",
          "services/core/policy-governance/app/exceptions.py",
          "services/core/policy-governance/src/__init__.py",
          "services/core/policy-governance/pgc_service/app/schemas.py",
          "services/core/policy-governance/pgc_service/app/telemetry.py",
          "services/core/policy-governance/pgc_service/app/main.py",
          "services/core/policy-governance/pgc_service/app/__init__.py",
          "services/core/policy-governance/pgc_service/app/main_enhanced.py",
          "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
          "services/core/policy-governance/pgc_service/tests/test_constitutional_hash_validation.py",
          "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_integration.py",
          "services/core/policy-governance/pgc_service/app/core/constitutional_hash_validator.py",
          "services/core/policy-governance/pgc_service/app/core/database.py",
          "services/core/policy-governance/pgc_service/app/core/auth.py",
          "services/core/policy-governance/pgc_service/app/core/__init__.py",
          "services/core/policy-governance/pgc_service/app/core/policy_synthesis_engine.py",
          "services/core/policy-governance/pgc_service/app/core/limiter.py",
          "services/core/policy-governance/pgc_service/app/core/ultra_low_latency_optimizer.py",
          "services/core/policy-governance/pgc_service/app/core/datalog_engine.py",
          "services/core/policy-governance/pgc_service/app/core/redis_cache_manager.py",
          "services/core/policy-governance/pgc_service/app/core/hardware_acceleration_manager.py",
          "services/core/policy-governance/pgc_service/app/core/realtime_compliance_engine.py",
          "services/core/policy-governance/pgc_service/app/core/manifest_manager.py",
          "services/core/policy-governance/pgc_service/app/core/proactive_fairness_generator.py",
          "services/core/policy-governance/pgc_service/app/core/wina_enforcement_optimizer.py",
          "services/core/policy-governance/pgc_service/app/core/policy_manager.py",
          "services/core/policy-governance/pgc_service/app/core/opa_client.py",
          "services/core/policy-governance/pgc_service/app/core/metrics.py",
          "services/core/policy-governance/pgc_service/app/core/incremental_compiler.py",
          "services/core/policy-governance/pgc_service/app/core/wina_policy_compiler.py",
          "services/core/policy-governance/pgc_service/app/core/policy_format_router.py",
          "services/core/policy-governance/pgc_service/app/core/secure_execution.py",
          "services/core/policy-governance/pgc_service/app/middleware/constitutional_validation.py",
          "services/core/policy-governance/pgc_service/app/middleware/__init__.py",
          "services/core/policy-governance/pgc_service/app/middleware/enhanced_security.py",
          "services/core/policy-governance/pgc_service/app/config/service_config.py",
          "services/core/policy-governance/pgc_service/app/monitoring/acgs_pgp_metrics.py",
          "services/core/policy-governance/pgc_service/app/services/fv_client.py",
          "services/core/policy-governance/pgc_service/app/services/qpe_client.py",
          "services/core/policy-governance/pgc_service/app/services/__init__.py",
          "services/core/policy-governance/pgc_service/app/services/integrity_client.py",
          "services/core/policy-governance/pgc_service/app/services/advanced_cache.py",
          "services/core/policy-governance/pgc_service/app/api/__init__.py",
          "services/core/policy-governance/pgc_service/app/api/v1/ultra_low_latency.py",
          "services/core/policy-governance/pgc_service/app/api/v1/quantum_enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/alphaevolve_enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/__init__.py",
          "services/core/policy-governance/pgc_service/app/api/v1/enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/governance_workflows.py",
          "services/core/policy-governance/pgc_service/app/api/v1/incremental_compilation.py"
        ]
      },
      {
        "name": "constitutional_ai",
        "path": "/home/dislove/ACGS-2/services/core/constitutional_ai",
        "python_files": 68,
        "files": [
          "services/core/constitutional_ai/__init__.py",
          "services/core/constitutional_ai/src/__init__.py",
          "services/core/constitutional_ai/ac_service/validate_stakeholder_system.py",
          "services/core/constitutional_ai/ac_service/test_stakeholder_simple.py",
          "services/core/constitutional_ai/ac_service/models.py",
          "services/core/constitutional_ai/ac_service/test_stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/main.py",
          "services/core/constitutional_ai/ac_service/__init__.py",
          "services/core/constitutional_ai/ac_service/acge_single_model_service.py",
          "services/core/constitutional_ai/ac_service/tests/test_human_in_the_loop_sampling.py",
          "services/core/constitutional_ai/ac_service/tests/test_hitl_api_integration.py",
          "services/core/constitutional_ai/ac_service/tests/test_intelligent_conflict_resolution.py",
          "services/core/constitutional_ai/ac_service/app/schemas.py",
          "services/core/constitutional_ai/ac_service/app/main.py",
          "services/core/constitutional_ai/ac_service/app/cache_manager.py",
          "services/core/constitutional_ai/ac_service/app/crud.py",
          "services/core/constitutional_ai/ac_service/app/models.py",
          "services/core/constitutional_ai/ac_service/app/__init__.py",
          "services/core/constitutional_ai/ac_service/alembic/versions/005_add_qec_conflict_resolution_fields.py",
          "services/core/constitutional_ai/ac_service/app/integrations/polis_integration.py",
          "services/core/constitutional_ai/ac_service/app/middleware/enhanced_security.py",
          "services/core/constitutional_ai/ac_service/app/middleware/__init__.py",
          "services/core/constitutional_ai/ac_service/app/core/constitutional_council_scalability.py",
          "services/core/constitutional_ai/ac_service/app/core/auth.py",
          "services/core/constitutional_ai/ac_service/app/core/__init__.py",
          "services/core/constitutional_ai/ac_service/app/core/domain_context_manager.py",
          "services/core/constitutional_ai/ac_service/app/core/amendment_state_machine.py",
          "services/core/constitutional_ai/ac_service/app/core/cryptographic_signing.py",
          "services/core/constitutional_ai/ac_service/app/api/hitl_sampling.py",
          "services/core/constitutional_ai/ac_service/app/api/public_consultation.py",
          "services/core/constitutional_ai/ac_service/app/api/__init__.py",
          "services/core/constitutional_ai/ac_service/app/services/collective_constitutional_ai.py",
          "services/core/constitutional_ai/ac_service/app/services/human_escalation_system.py",
          "services/core/constitutional_ai/ac_service/app/services/constitutional_council_dashboard.py",
          "services/core/constitutional_ai/ac_service/app/services/public_consultation_service.py",
          "services/core/constitutional_ai/ac_service/app/services/conflict_resolution_orchestrator.py",
          "services/core/constitutional_ai/ac_service/app/services/constitutional_validation_service.py",
          "services/core/constitutional_ai/ac_service/app/services/enhanced_constitutional_reward.py",
          "services/core/constitutional_ai/ac_service/app/services/llm_as_judge_framework.py",
          "services/core/constitutional_ai/ac_service/app/services/intelligent_conflict_detector.py",
          "services/core/constitutional_ai/ac_service/app/services/conflict_audit_system.py",
          "services/core/constitutional_ai/ac_service/app/services/advanced_democratic_participation.py",
          "services/core/constitutional_ai/ac_service/app/services/qec_conflict_resolver.py",
          "services/core/constitutional_ai/ac_service/app/services/voting_mechanism.py",
          "services/core/constitutional_ai/ac_service/app/services/stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/app/services/automated_resolution_engine.py",
          "services/core/constitutional_ai/ac_service/app/services/hitl_cross_service_integration.py",
          "services/core/constitutional_ai/ac_service/app/services/voting_client.py",
          "services/core/constitutional_ai/ac_service/app/services/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/services/human_in_the_loop_sampler.py",
          "services/core/constitutional_ai/ac_service/app/workflows/workflow_manager.py",
          "services/core/constitutional_ai/ac_service/app/workflows/constitutional_council_graph.py",
          "services/core/constitutional_ai/ac_service/app/workflows/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/workflows/__init__.py",
          "services/core/constitutional_ai/ac_service/app/monitoring/scalability_metrics.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/collective_constitutional_ai.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/conflict_resolution.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/dashboard_websocket.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/__init__.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/principles.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/wina_constitutional_updates.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/constitutional_council.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/workflows.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/fidelity_monitor.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/voting.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/constitutional_validation.py"
        ]
      },
      {
        "name": "governance_synthesis",
        "path": "/home/dislove/ACGS-2/services/core/governance_synthesis",
        "python_files": 113,
        "files": [
          "services/core/governance_synthesis/__init__.py",
          "services/core/governance_synthesis/gs_service/models.py",
          "services/core/governance_synthesis/gs_service/main.py",
          "services/core/governance_synthesis/gs_service/start_minimal.py",
          "services/core/governance_synthesis/gs_service/__init__.py",
          "services/core/governance_synthesis/src/__init__.py",
          "services/core/governance_synthesis/gs_service/app/__init__.py",
          "services/core/governance_synthesis/gs_service/app/crud_gs.py",
          "services/core/governance_synthesis/gs_service/app/cache_manager.py",
          "services/core/governance_synthesis/gs_service/app/main.py",
          "services/core/governance_synthesis/gs_service/app/schemas.py",
          "services/core/governance_synthesis/gs_service/tests/test_gemini_validators.py",
          "services/core/governance_synthesis/gs_service/tests/test_wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/tests/test_wina_rego_integration.py",
          "services/core/governance_synthesis/gs_service/tests/test_evolutionary_tensor_integration.py",
          "services/core/governance_synthesis/gs_service/tests/test_policy_synthesis_enhancement.py",
          "services/core/governance_synthesis/gs_service/tests/test_groq_tensor_service.py",
          "services/core/governance_synthesis/gs_service/tests/test_router_optimization.py",
          "services/core/governance_synthesis/gs_service/app/validators/gemini_validators.py",
          "services/core/governance_synthesis/gs_service/app/validators/__init__.py",
          "services/core/governance_synthesis/gs_service/app/core/rule_generator.py",
          "services/core/governance_synthesis/gs_service/app/core/constitutional_prompting.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_reliability_framework.py",
          "services/core/governance_synthesis/gs_service/app/core/constitutional_council_scalability.py",
          "services/core/governance_synthesis/gs_service/app/core/sliding_window_ucb.py",
          "services/core/governance_synthesis/gs_service/app/core/distributed_policy_cache.py",
          "services/core/governance_synthesis/gs_service/app/core/datalog_templates.py",
          "services/core/governance_synthesis/gs_service/app/core/conservative_linucb.py",
          "services/core/governance_synthesis/gs_service/app/core/mab_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/contextual_analyzer.py",
          "services/core/governance_synthesis/gs_service/app/core/wina_llm_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/ab_testing_framework.py",
          "services/core/governance_synthesis/gs_service/app/core/__init__.py",
          "services/core/governance_synthesis/gs_service/app/core/auth.py",
          "services/core/governance_synthesis/gs_service/app/core/qec_enhanced_synthesizer.py",
          "services/core/governance_synthesis/gs_service/app/core/ollama_client.py",
          "services/core/governance_synthesis/gs_service/app/core/heterogeneous_validator.py",
          "services/core/governance_synthesis/gs_service/app/core/opa_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/mab_prompt_optimizer.py",
          "services/core/governance_synthesis/gs_service/app/core/wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_circuit_breaker.py",
          "services/core/governance_synthesis/gs_service/app/core/performance_optimizer.py",
          "services/core/governance_synthesis/gs_service/app/core/violation_config.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/phase_a3_multi_model_consensus.py",
          "services/core/governance_synthesis/gs_service/app/core/performance_validation.py",
          "services/core/governance_synthesis/gs_service/app/core/multi_model_coordinator.py",
          "services/core/governance_synthesis/gs_service/app/core/enhanced_constitutional_analyzer.py",
          "services/core/governance_synthesis/gs_service/app/core/nvidia_qwen_client.py",
          "services/core/governance_synthesis/gs_service/app/security/adversarial_defenses.py",
          "services/core/governance_synthesis/gs_service/app/services/performance_monitor.py",
          "services/core/governance_synthesis/gs_service/app/services/security_compliance.py",
          "services/core/governance_synthesis/gs_service/app/services/advanced_cache.py",
          "services/core/governance_synthesis/gs_service/app/services/integrity_client.py",
          "services/core/governance_synthesis/gs_service/app/services/groq_tensor_service.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_escalation_service.py",
          "services/core/governance_synthesis/gs_service/app/services/qec_error_correction_service.py",
          "services/core/governance_synthesis/gs_service/app/services/ac_client.py",
          "services/core/governance_synthesis/gs_service/app/services/policy_validator.py",
          "services/core/governance_synthesis/gs_service/app/services/monitoring_service.py",
          "services/core/governance_synthesis/gs_service/app/services/stakeholder_engagement.py",
          "services/core/governance_synthesis/gs_service/app/services/fairness_evaluation_framework.py",
          "services/core/governance_synthesis/gs_service/app/services/alphaevolve_bridge.py",
          "services/core/governance_synthesis/gs_service/app/services/enhanced_governance_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/services/enhanced_multi_model_validation.py",
          "services/core/governance_synthesis/gs_service/app/services/lipschitz_estimator.py",
          "services/core/governance_synthesis/gs_service/app/services/cache_manager.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_audit_service.py",
          "services/core/governance_synthesis/gs_service/app/services/fv_client.py",
          "services/core/governance_synthesis/gs_service/app/services/__init__.py",
          "services/core/governance_synthesis/gs_service/app/services/federated_learning_orchestrator.py",
          "services/core/governance_synthesis/gs_service/app/services/constitutional_reporting_service.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_detection_service.py",
          "services/core/governance_synthesis/gs_service/app/models/mab_models.py",
          "services/core/governance_synthesis/gs_service/app/models/reliability_models.py",
          "services/core/governance_synthesis/gs_service/app/wina/gating.py",
          "services/core/governance_synthesis/gs_service/app/wina/models.py",
          "services/core/governance_synthesis/gs_service/app/wina/core.py",
          "services/core/governance_synthesis/gs_service/app/wina/svd_utils.py",
          "services/core/governance_synthesis/gs_service/app/wina/__init__.py",
          "services/core/governance_synthesis/gs_service/app/shared/metrics.py",
          "services/core/governance_synthesis/gs_service/app/api/__init__.py",
          "services/core/governance_synthesis/gs_service/app/middleware/__init__.py",
          "services/core/governance_synthesis/gs_service/app/middleware/enhanced_security.py",
          "services/core/governance_synthesis/gs_service/app/config/opa_config.py",
          "services/core/governance_synthesis/gs_service/app/workflows/structured_output_models.py",
          "services/core/governance_synthesis/gs_service/app/workflows/multi_model_manager.py",
          "services/core/governance_synthesis/gs_service/app/workflows/policy_synthesis_workflow.py",
          "services/core/governance_synthesis/gs_service/app/workflows/__init__.py",
          "services/core/governance_synthesis/gs_service/app/workflows/phase_a3_governance_orchestrator.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/synthesize.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/__init__.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/mab_optimization.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/qec_error_correction.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/constitutional_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/governance_workflows.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/fidelity_monitoring_websocket.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/phase2_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/enhanced_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/policy_management.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/violation_management.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/constitutional_reports.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/reliability_metrics.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/phase_a3_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/multi_model_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/enhanced_multi_model.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/alphaevolve_integration.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/performance_monitoring.py",
          "services/core/governance_synthesis/gs_service/tests/integration/test_opa_integration.py",
          "services/core/governance_synthesis/gs_service/tests/security/test_security_compliance.py",
          "services/core/governance_synthesis/gs_service/tests/performance/test_governance_synthesis_performance.py",
          "services/core/governance_synthesis/gs_service/tests/unit/services/test_policy_validator.py"
        ]
      },
      {
        "name": "formal-verification",
        "path": "/home/dislove/ACGS-2/services/core/formal-verification",
        "python_files": 34,
        "files": [
          "services/core/formal-verification/__init__.py",
          "services/core/formal-verification/fv_service/acge_formal_verification_service.py",
          "services/core/formal-verification/fv_service/__init__.py",
          "services/core/formal-verification/fv_service/models.py",
          "services/core/formal-verification/fv_service/main.py",
          "services/core/formal-verification/tests/test_formal_verification_completion.py",
          "services/core/formal-verification/src/__init__.py",
          "services/core/formal-verification/fv_service/app/cache_manager.py",
          "services/core/formal-verification/fv_service/app/schemas.py",
          "services/core/formal-verification/fv_service/app/__init__.py",
          "services/core/formal-verification/fv_service/app/services/ac_client.py",
          "services/core/formal-verification/fv_service/app/services/__init__.py",
          "services/core/formal-verification/fv_service/app/services/integrity_client.py",
          "services/core/formal-verification/fv_service/app/api/__init__.py",
          "services/core/formal-verification/fv_service/app/core/proof_obligations.py",
          "services/core/formal-verification/fv_service/app/core/constitutional_verification_engine.py",
          "services/core/formal-verification/fv_service/app/core/adversarial_robustness_tester.py",
          "services/core/formal-verification/fv_service/app/core/tiered_validation.py",
          "services/core/formal-verification/fv_service/app/core/enhanced_multi_model_validation.py",
          "services/core/formal-verification/fv_service/app/core/policy_smt_compiler.py",
          "services/core/formal-verification/fv_service/app/core/verification_logic.py",
          "services/core/formal-verification/fv_service/app/core/verification_completeness_tester.py",
          "services/core/formal-verification/fv_service/app/core/cross_domain_testing_engine.py",
          "services/core/formal-verification/fv_service/app/core/auth.py",
          "services/core/formal-verification/fv_service/app/core/parallel_validation_pipeline.py",
          "services/core/formal-verification/fv_service/app/core/smt_solver_integration.py",
          "services/core/formal-verification/fv_service/app/core/bias_detector.py",
          "services/core/formal-verification/fv_service/app/core/safety_conflict_checker.py",
          "services/core/formal-verification/fv_service/app/core/__init__.py",
          "services/core/formal-verification/fv_service/app/middleware/enhanced_security.py",
          "services/core/formal-verification/fv_service/app/middleware/__init__.py",
          "services/core/formal-verification/fv_service/app/api/v1/cross_domain_testing.py",
          "services/core/formal-verification/fv_service/app/api/v1/verify.py",
          "services/core/formal-verification/fv_service/app/api/v1/__init__.py"
        ]
      }
    ],
    "shared_components": [
      "services/shared/production_ml_optimizer.py",
      "services/shared/ml_routing_optimizer.py",
      "services/shared/scalability_dashboard.py",
      "services/shared/deepseek_r1_pilot.py",
      "services/shared/redis_cluster_client.py",
      "services/shared/constitutional_metrics.py",
      "services/shared/cache_warming_service.py",
      "services/shared/enhanced_ml_routing_optimizer.py",
      "services/shared/enhanced_connection_pool.py",
      "services/shared/ai_model_service.py",
      "services/shared/security_config.py",
      "services/shared/api_models.py",
      "services/shared/enhanced_auth.py",
      "services/shared/result_aggregation.py",
      "services/shared/test_automated_retraining.py",
      "services/shared/qwen3_embedding_client.py",
      "services/shared/intelligent_routing.py",
      "services/shared/langgraph_states.py",
      "services/shared/security_middleware.py",
      "services/shared/test_statistical_significance.py",
      "services/shared/service_communication_optimizer.py",
      "services/shared/constitutional_safety_framework.py",
      "services/shared/database_monitoring.py",
      "services/shared/test_tiered_alerting.py",
      "services/shared/enhanced_service_registry.py",
      "services/shared/database.py",
      "services/shared/service_registry.py",
      "services/shared/openrouter_client.py",
      "services/shared/test_ab_testing_framework.py",
      "services/shared/acgs_cache_integration.py",
      "services/shared/prometheus_middleware.py",
      "services/shared/__init__.py",
      "services/shared/ai_types.py",
      "services/shared/test_online_learning.py",
      "services/shared/input_validation.py",
      "services/shared/comprehensive_audit_logger.py",
      "services/shared/redis_cache.py",
      "services/shared/constitutional_tool_orchestrator.py",
      "services/shared/memory_optimizer.py",
      "services/shared/enhanced_monitoring.py",
      "services/shared/leader_election.py",
      "services/shared/error_handling.py",
      "services/shared/scalability_metrics.py",
      "services/shared/validation_models.py",
      "services/shared/enhanced_constitutional_analyzer.py",
      "services/shared/deepseek_r1_monitoring.py",
      "services/shared/metrics.py",
      "services/shared/parallel_validation_pipeline.py",
      "services/shared/utils.py",
      "services/shared/llm_router_client.py",
      "services/shared/performance_monitoring.py",
      "services/shared/service_auth_config.py",
      "services/shared/input_validation_middleware.py",
      "services/shared/production_monitoring.py",
      "services/shared/async_processing_manager.py",
      "services/shared/advanced_redis_client.py",
      "services/shared/performance_optimizer.py",
      "services/shared/weighted_consensus_engine.py",
      "services/shared/database_optimizer.py",
      "services/shared/parallel_processing.py",
      "services/shared/test_enhanced_ml_integration.py",
      "services/shared/fallback_cache.py",
      "services/shared/middleware.py",
      "services/shared/multimodal_ai_service.py",
      "services/shared/enhanced_database_client.py",
      "services/shared/policy_synthesis_performance_optimizer.py",
      "services/shared/multi_level_cache.py",
      "services/shared/auth.py",
      "services/shared/celery_integration.py",
      "services/shared/constitutional_cache.py",
      "services/shared/constitutional_security_validator.py",
      "services/shared/enhanced_rate_limiting.py",
      "services/shared/redis_performance_optimizer.py",
      "services/shared/enhanced_service_client.py",
      "services/shared/test_interpretability_framework.py",
      "services/shared/cerebras_client.py",
      "services/shared/circuit_breaker.py",
      "services/shared/constitutional_hash_middleware.py",
      "services/shared/test_bootstrap_validation.py",
      "services/shared/resource_optimization.py",
      "services/shared/rate_limiting_middleware.py",
      "services/shared/multi_model_manager.py",
      "services/shared/validation_helpers.py",
      "services/shared/security_headers_middleware.py",
      "services/shared/redis_client.py",
      "services/shared/prompt_framework.py",
      "services/shared/schemas.py",
      "services/shared/rate_limiting.py",
      "services/shared/models.py",
      "services/shared/langgraph_config.py",
      "services/shared/test_comprehensive_metrics.py",
      "services/shared/database_resilience.py"
    ],
    "platform_services": [
      {
        "name": "integrity",
        "path": "/home/dislove/ACGS-2/services/platform/integrity",
        "python_files": 32,
        "files": [
          "services/platform/integrity/simple_integrity_main.py",
          "services/platform/integrity/integrity_service/models.py",
          "services/platform/integrity/integrity_service/acge_integrity_service.py",
          "services/platform/integrity/app/cache_manager.py",
          "services/platform/integrity/integrity_service/app/__init__.py",
          "services/platform/integrity/integrity_service/app/main.py",
          "services/platform/integrity/integrity_service/app/database.py",
          "services/platform/integrity/integrity_service/app/crud.py",
          "services/platform/integrity/integrity_service/app/models.py",
          "services/platform/integrity/integrity_service/app/schemas.py",
          "services/platform/integrity/integrity_service/app/core/crypto_benchmarking.py",
          "services/platform/integrity/integrity_service/app/core/explainability.py",
          "services/platform/integrity/integrity_service/app/core/__init__.py",
          "services/platform/integrity/integrity_service/app/core/auth.py",
          "services/platform/integrity/integrity_service/app/services/crypto_service.py",
          "services/platform/integrity/integrity_service/app/services/pgp_assurance.py",
          "services/platform/integrity/integrity_service/app/services/timestamp_service.py",
          "services/platform/integrity/integrity_service/app/services/key_management.py",
          "services/platform/integrity/integrity_service/app/services/__init__.py",
          "services/platform/integrity/integrity_service/app/services/integrity_verification.py",
          "services/platform/integrity/integrity_service/app/services/research_data_pipeline.py",
          "services/platform/integrity/integrity_service/app/api/__init__.py",
          "services/platform/integrity/integrity_service/app/middleware/enhanced_security.py",
          "services/platform/integrity/integrity_service/app/middleware/__init__.py",
          "services/platform/integrity/integrity_service/app/api/v1/appeals.py",
          "services/platform/integrity/integrity_service/app/api/v1/research_data.py",
          "services/platform/integrity/integrity_service/app/api/v1/pgp_assurance.py",
          "services/platform/integrity/integrity_service/app/api/v1/policies.py",
          "services/platform/integrity/integrity_service/app/api/v1/integrity.py",
          "services/platform/integrity/integrity_service/app/api/v1/audit.py",
          "services/platform/integrity/integrity_service/app/api/v1/crypto.py",
          "services/platform/integrity/integrity_service/app/api/v1/__init__.py"
        ]
      },
      {
        "name": "authentication",
        "path": "/home/dislove/ACGS-2/services/platform/authentication",
        "python_files": 52,
        "files": [
          "services/platform/authentication/auth_service/acge_integration.py",
          "services/platform/authentication/auth_service/models.py",
          "services/platform/authentication/auth_service/simple_main.py",
          "services/platform/authentication/app/cache_manager.py",
          "services/platform/authentication/auth_service/app/__init__.py",
          "services/platform/authentication/auth_service/app/main_acge.py",
          "services/platform/authentication/auth_service/app/models.py",
          "services/platform/authentication/auth_service/app/schemas.py",
          "services/platform/authentication/auth_service/app/main.py",
          "services/platform/authentication/auth_service/app/schemas/__init__.py",
          "services/platform/authentication/auth_service/app/schemas/token.py",
          "services/platform/authentication/auth_service/app/schemas/user.py",
          "services/platform/authentication/auth_service/app/crud/crud_user.py",
          "services/platform/authentication/auth_service/app/crud/__init__.py",
          "services/platform/authentication/auth_service/app/crud/crud_refresh_token.py",
          "services/platform/authentication/auth_service/app/tests/test_main.py",
          "services/platform/authentication/auth_service/app/tests/test_users.py",
          "services/platform/authentication/auth_service/app/tests/test_auth.py",
          "services/platform/authentication/auth_service/app/tests/test_auth_flows.py",
          "services/platform/authentication/auth_service/app/tests/conftest.py",
          "services/platform/authentication/auth_service/app/tests/__init__.py",
          "services/platform/authentication/auth_service/app/tests/test_token.py",
          "services/platform/authentication/auth_service/app/api/endpoints.py",
          "services/platform/authentication/auth_service/app/api/__init__.py",
          "services/platform/authentication/auth_service/app/core/api_key_manager.py",
          "services/platform/authentication/auth_service/app/core/security_audit.py",
          "services/platform/authentication/auth_service/app/core/config.py",
          "services/platform/authentication/auth_service/app/core/mfa.py",
          "services/platform/authentication/auth_service/app/core/password.py",
          "services/platform/authentication/auth_service/app/core/limiter.py",
          "services/platform/authentication/auth_service/app/core/intrusion_detection.py",
          "services/platform/authentication/auth_service/app/core/oauth.py",
          "services/platform/authentication/auth_service/app/core/session_manager.py",
          "services/platform/authentication/auth_service/app/core/__init__.py",
          "services/platform/authentication/auth_service/app/core/security.py",
          "services/platform/authentication/auth_service/app/db/session.py",
          "services/platform/authentication/auth_service/app/db/base_class.py",
          "services/platform/authentication/auth_service/app/db/database.py",
          "services/platform/authentication/auth_service/app/db/__init__.py",
          "services/platform/authentication/auth_service/app/models/security_event.py",
          "services/platform/authentication/auth_service/app/models/user.py",
          "services/platform/authentication/auth_service/app/models/__init__.py",
          "services/platform/authentication/auth_service/app/middleware/enhanced_security.py",
          "services/platform/authentication/auth_service/app/middleware/__init__.py",
          "services/platform/authentication/auth_service/app/api/v1/__init__.py",
          "services/platform/authentication/auth_service/app/api/v1/api_router.py",
          "services/platform/authentication/auth_service/app/api/v1/oauth.py",
          "services/platform/authentication/auth_service/app/api/v1/api_keys.py",
          "services/platform/authentication/auth_service/app/api/v1/deps.py",
          "services/platform/authentication/auth_service/app/api/v1/mfa.py",
          "services/platform/authentication/auth_service/app/api/v1/endpoints.py",
          "services/platform/authentication/auth_service/app/api/v1/endpoints_unified.py"
        ]
      },
      {
        "name": "nvidia-llm-router",
        "path": "/home/dislove/ACGS-2/services/platform/nvidia-llm-router",
        "python_files": 8,
        "files": [
          "services/platform/nvidia-llm-router/__init__.py",
          "services/platform/nvidia-llm-router/test_models.py",
          "services/platform/nvidia-llm-router/api_key_manager.py",
          "services/platform/nvidia-llm-router/validate_config.py",
          "services/platform/nvidia-llm-router/router_controller/main.py",
          "services/platform/nvidia-llm-router/router_controller/__init__.py",
          "services/platform/nvidia-llm-router/router_server/__init__.py",
          "services/platform/nvidia-llm-router/router_server/main.py"
        ]
      },
      {
        "name": "workflow",
        "path": "/home/dislove/ACGS-2/services/platform/workflow",
        "python_files": 10,
        "files": [
          "services/platform/workflow/workflow_service/app/__init__.py",
          "services/platform/workflow/workflow_service/app/main.py",
          "services/platform/workflow/workflow_service/app/testing/automated_validator.py",
          "services/platform/workflow/workflow_service/app/monitoring/workflow_monitor.py",
          "services/platform/workflow/workflow_service/app/recovery/workflow_recovery.py",
          "services/platform/workflow/workflow_service/app/api/__init__.py",
          "services/platform/workflow/workflow_service/app/core/__init__.py",
          "services/platform/workflow/workflow_service/app/core/workflow_engine.py",
          "services/platform/workflow/workflow_service/app/api/v1/__init__.py",
          "services/platform/workflow/workflow_service/app/api/v1/workflow_management.py"
        ]
      }
    ],
    "total_python_files": 1044,
    "critical_components": [
      {
        "name": "governance-workflows",
        "path": "/home/dislove/ACGS-2/services/core/governance-workflows",
        "python_files": 6,
        "files": [
          "services/core/governance-workflows/app/main.py",
          "services/core/governance-workflows/app/config.py",
          "services/core/governance-workflows/app/core/service_integrator.py",
          "services/core/governance-workflows/app/core/workflow_orchestrator.py",
          "services/core/governance-workflows/app/core/metrics_collector.py",
          "services/core/governance-workflows/app/core/performance_monitor.py"
        ]
      },
      {
        "name": "policy-engine",
        "path": "/home/dislove/ACGS-2/services/core/policy-engine",
        "python_files": 1,
        "files": [
          "services/core/policy-engine/main.py"
        ]
      },
      {
        "name": "policy_governance",
        "path": "/home/dislove/ACGS-2/services/core/policy_governance",
        "python_files": 57,
        "files": [
          "services/core/policy_governance/simple_pgc_main.py",
          "services/core/policy_governance/__init__.py",
          "services/core/policy_governance/pgc_service/models.py",
          "services/core/policy_governance/pgc_service/main.py",
          "services/core/policy_governance/pgc_service/start_with_tracing.py",
          "services/core/policy_governance/pgc_service/__init__.py",
          "services/core/policy_governance/pgc_service/optimized_governance_engine.py",
          "services/core/policy_governance/app/cache_manager.py",
          "services/core/policy_governance/app/exceptions.py",
          "services/core/policy_governance/src/__init__.py",
          "services/core/policy_governance/pgc_service/app/schemas.py",
          "services/core/policy_governance/pgc_service/app/telemetry.py",
          "services/core/policy_governance/pgc_service/app/main.py",
          "services/core/policy_governance/pgc_service/app/__init__.py",
          "services/core/policy_governance/pgc_service/app/main_enhanced.py",
          "services/core/policy_governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
          "services/core/policy_governance/pgc_service/tests/test_constitutional_hash_validation.py",
          "services/core/policy_governance/pgc_service/tests/test_wina_enforcement_integration.py",
          "services/core/policy_governance/pgc_service/app/core/constitutional_hash_validator.py",
          "services/core/policy_governance/pgc_service/app/core/database.py",
          "services/core/policy_governance/pgc_service/app/core/auth.py",
          "services/core/policy_governance/pgc_service/app/core/__init__.py",
          "services/core/policy_governance/pgc_service/app/core/policy_synthesis_engine.py",
          "services/core/policy_governance/pgc_service/app/core/limiter.py",
          "services/core/policy_governance/pgc_service/app/core/ultra_low_latency_optimizer.py",
          "services/core/policy_governance/pgc_service/app/core/datalog_engine.py",
          "services/core/policy_governance/pgc_service/app/core/redis_cache_manager.py",
          "services/core/policy_governance/pgc_service/app/core/hardware_acceleration_manager.py",
          "services/core/policy_governance/pgc_service/app/core/realtime_compliance_engine.py",
          "services/core/policy_governance/pgc_service/app/core/manifest_manager.py",
          "services/core/policy_governance/pgc_service/app/core/proactive_fairness_generator.py",
          "services/core/policy_governance/pgc_service/app/core/wina_enforcement_optimizer.py",
          "services/core/policy_governance/pgc_service/app/core/policy_manager.py",
          "services/core/policy_governance/pgc_service/app/core/opa_client.py",
          "services/core/policy_governance/pgc_service/app/core/metrics.py",
          "services/core/policy_governance/pgc_service/app/core/incremental_compiler.py",
          "services/core/policy_governance/pgc_service/app/core/wina_policy_compiler.py",
          "services/core/policy_governance/pgc_service/app/core/policy_format_router.py",
          "services/core/policy_governance/pgc_service/app/core/secure_execution.py",
          "services/core/policy_governance/pgc_service/app/middleware/constitutional_validation.py",
          "services/core/policy_governance/pgc_service/app/middleware/__init__.py",
          "services/core/policy_governance/pgc_service/app/middleware/enhanced_security.py",
          "services/core/policy_governance/pgc_service/app/config/service_config.py",
          "services/core/policy_governance/pgc_service/app/monitoring/acgs_pgp_metrics.py",
          "services/core/policy_governance/pgc_service/app/services/fv_client.py",
          "services/core/policy_governance/pgc_service/app/services/qpe_client.py",
          "services/core/policy_governance/pgc_service/app/services/__init__.py",
          "services/core/policy_governance/pgc_service/app/services/integrity_client.py",
          "services/core/policy_governance/pgc_service/app/services/advanced_cache.py",
          "services/core/policy_governance/pgc_service/app/api/__init__.py",
          "services/core/policy_governance/pgc_service/app/api/v1/ultra_low_latency.py",
          "services/core/policy_governance/pgc_service/app/api/v1/quantum_enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/alphaevolve_enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/__init__.py",
          "services/core/policy_governance/pgc_service/app/api/v1/enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/governance_workflows.py",
          "services/core/policy_governance/pgc_service/app/api/v1/incremental_compilation.py"
        ]
      },
      {
        "name": "constitutional-ai",
        "path": "/home/dislove/ACGS-2/services/core/constitutional-ai",
        "python_files": 68,
        "files": [
          "services/core/constitutional-ai/__init__.py",
          "services/core/constitutional-ai/src/__init__.py",
          "services/core/constitutional-ai/ac_service/validate_stakeholder_system.py",
          "services/core/constitutional-ai/ac_service/test_stakeholder_simple.py",
          "services/core/constitutional-ai/ac_service/models.py",
          "services/core/constitutional-ai/ac_service/test_stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/main.py",
          "services/core/constitutional-ai/ac_service/__init__.py",
          "services/core/constitutional-ai/ac_service/acge_single_model_service.py",
          "services/core/constitutional-ai/ac_service/tests/test_human_in_the_loop_sampling.py",
          "services/core/constitutional-ai/ac_service/tests/test_hitl_api_integration.py",
          "services/core/constitutional-ai/ac_service/tests/test_intelligent_conflict_resolution.py",
          "services/core/constitutional-ai/ac_service/app/schemas.py",
          "services/core/constitutional-ai/ac_service/app/main.py",
          "services/core/constitutional-ai/ac_service/app/cache_manager.py",
          "services/core/constitutional-ai/ac_service/app/crud.py",
          "services/core/constitutional-ai/ac_service/app/models.py",
          "services/core/constitutional-ai/ac_service/app/__init__.py",
          "services/core/constitutional-ai/ac_service/alembic/versions/005_add_qec_conflict_resolution_fields.py",
          "services/core/constitutional-ai/ac_service/app/integrations/polis_integration.py",
          "services/core/constitutional-ai/ac_service/app/middleware/enhanced_security.py",
          "services/core/constitutional-ai/ac_service/app/middleware/__init__.py",
          "services/core/constitutional-ai/ac_service/app/core/constitutional_council_scalability.py",
          "services/core/constitutional-ai/ac_service/app/core/auth.py",
          "services/core/constitutional-ai/ac_service/app/core/__init__.py",
          "services/core/constitutional-ai/ac_service/app/core/domain_context_manager.py",
          "services/core/constitutional-ai/ac_service/app/core/amendment_state_machine.py",
          "services/core/constitutional-ai/ac_service/app/core/cryptographic_signing.py",
          "services/core/constitutional-ai/ac_service/app/api/hitl_sampling.py",
          "services/core/constitutional-ai/ac_service/app/api/public_consultation.py",
          "services/core/constitutional-ai/ac_service/app/api/__init__.py",
          "services/core/constitutional-ai/ac_service/app/services/collective_constitutional_ai.py",
          "services/core/constitutional-ai/ac_service/app/services/human_escalation_system.py",
          "services/core/constitutional-ai/ac_service/app/services/constitutional_council_dashboard.py",
          "services/core/constitutional-ai/ac_service/app/services/public_consultation_service.py",
          "services/core/constitutional-ai/ac_service/app/services/conflict_resolution_orchestrator.py",
          "services/core/constitutional-ai/ac_service/app/services/constitutional_validation_service.py",
          "services/core/constitutional-ai/ac_service/app/services/enhanced_constitutional_reward.py",
          "services/core/constitutional-ai/ac_service/app/services/llm_as_judge_framework.py",
          "services/core/constitutional-ai/ac_service/app/services/intelligent_conflict_detector.py",
          "services/core/constitutional-ai/ac_service/app/services/conflict_audit_system.py",
          "services/core/constitutional-ai/ac_service/app/services/advanced_democratic_participation.py",
          "services/core/constitutional-ai/ac_service/app/services/qec_conflict_resolver.py",
          "services/core/constitutional-ai/ac_service/app/services/voting_mechanism.py",
          "services/core/constitutional-ai/ac_service/app/services/stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/app/services/automated_resolution_engine.py",
          "services/core/constitutional-ai/ac_service/app/services/hitl_cross_service_integration.py",
          "services/core/constitutional-ai/ac_service/app/services/voting_client.py",
          "services/core/constitutional-ai/ac_service/app/services/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/services/human_in_the_loop_sampler.py",
          "services/core/constitutional-ai/ac_service/app/workflows/workflow_manager.py",
          "services/core/constitutional-ai/ac_service/app/workflows/constitutional_council_graph.py",
          "services/core/constitutional-ai/ac_service/app/workflows/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/workflows/__init__.py",
          "services/core/constitutional-ai/ac_service/app/monitoring/scalability_metrics.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/collective_constitutional_ai.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/conflict_resolution.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/dashboard_websocket.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/__init__.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/principles.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/wina_constitutional_updates.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/constitutional_council.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/workflows.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/fidelity_monitor.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/voting.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/constitutional_validation.py"
        ]
      },
      {
        "name": "governance-synthesis",
        "path": "/home/dislove/ACGS-2/services/core/governance-synthesis",
        "python_files": 113,
        "files": [
          "services/core/governance-synthesis/__init__.py",
          "services/core/governance-synthesis/gs_service/models.py",
          "services/core/governance-synthesis/gs_service/main.py",
          "services/core/governance-synthesis/gs_service/start_minimal.py",
          "services/core/governance-synthesis/gs_service/__init__.py",
          "services/core/governance-synthesis/src/__init__.py",
          "services/core/governance-synthesis/gs_service/app/__init__.py",
          "services/core/governance-synthesis/gs_service/app/crud_gs.py",
          "services/core/governance-synthesis/gs_service/app/cache_manager.py",
          "services/core/governance-synthesis/gs_service/app/main.py",
          "services/core/governance-synthesis/gs_service/app/schemas.py",
          "services/core/governance-synthesis/gs_service/tests/test_gemini_validators.py",
          "services/core/governance-synthesis/gs_service/tests/test_wina_rego_synthesis.py",
          "services/core/governance-synthesis/gs_service/tests/test_wina_rego_integration.py",
          "services/core/governance-synthesis/gs_service/tests/test_evolutionary_tensor_integration.py",
          "services/core/governance-synthesis/gs_service/tests/test_policy_synthesis_enhancement.py",
          "services/core/governance-synthesis/gs_service/tests/test_groq_tensor_service.py",
          "services/core/governance-synthesis/gs_service/tests/test_router_optimization.py",
          "services/core/governance-synthesis/gs_service/app/validators/gemini_validators.py",
          "services/core/governance-synthesis/gs_service/app/validators/__init__.py",
          "services/core/governance-synthesis/gs_service/app/core/rule_generator.py",
          "services/core/governance-synthesis/gs_service/app/core/constitutional_prompting.py",
          "services/core/governance-synthesis/gs_service/app/core/llm_reliability_framework.py",
          "services/core/governance-synthesis/gs_service/app/core/constitutional_council_scalability.py",
          "services/core/governance-synthesis/gs_service/app/core/sliding_window_ucb.py",
          "services/core/governance-synthesis/gs_service/app/core/distributed_policy_cache.py",
          "services/core/governance-synthesis/gs_service/app/core/datalog_templates.py",
          "services/core/governance-synthesis/gs_service/app/core/conservative_linucb.py",
          "services/core/governance-synthesis/gs_service/app/core/mab_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/contextual_analyzer.py",
          "services/core/governance-synthesis/gs_service/app/core/wina_llm_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/ab_testing_framework.py",
          "services/core/governance-synthesis/gs_service/app/core/__init__.py",
          "services/core/governance-synthesis/gs_service/app/core/auth.py",
          "services/core/governance-synthesis/gs_service/app/core/qec_enhanced_synthesizer.py",
          "services/core/governance-synthesis/gs_service/app/core/ollama_client.py",
          "services/core/governance-synthesis/gs_service/app/core/heterogeneous_validator.py",
          "services/core/governance-synthesis/gs_service/app/core/opa_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/mab_prompt_optimizer.py",
          "services/core/governance-synthesis/gs_service/app/core/wina_rego_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/core/llm_circuit_breaker.py",
          "services/core/governance-synthesis/gs_service/app/core/performance_optimizer.py",
          "services/core/governance-synthesis/gs_service/app/core/violation_config.py",
          "services/core/governance-synthesis/gs_service/app/core/llm_integration.py",
          "services/core/governance-synthesis/gs_service/app/core/phase_a3_multi_model_consensus.py",
          "services/core/governance-synthesis/gs_service/app/core/performance_validation.py",
          "services/core/governance-synthesis/gs_service/app/core/multi_model_coordinator.py",
          "services/core/governance-synthesis/gs_service/app/core/enhanced_constitutional_analyzer.py",
          "services/core/governance-synthesis/gs_service/app/core/nvidia_qwen_client.py",
          "services/core/governance-synthesis/gs_service/app/security/adversarial_defenses.py",
          "services/core/governance-synthesis/gs_service/app/services/performance_monitor.py",
          "services/core/governance-synthesis/gs_service/app/services/security_compliance.py",
          "services/core/governance-synthesis/gs_service/app/services/advanced_cache.py",
          "services/core/governance-synthesis/gs_service/app/services/integrity_client.py",
          "services/core/governance-synthesis/gs_service/app/services/groq_tensor_service.py",
          "services/core/governance-synthesis/gs_service/app/services/violation_escalation_service.py",
          "services/core/governance-synthesis/gs_service/app/services/qec_error_correction_service.py",
          "services/core/governance-synthesis/gs_service/app/services/ac_client.py",
          "services/core/governance-synthesis/gs_service/app/services/policy_validator.py",
          "services/core/governance-synthesis/gs_service/app/services/monitoring_service.py",
          "services/core/governance-synthesis/gs_service/app/services/stakeholder_engagement.py",
          "services/core/governance-synthesis/gs_service/app/services/fairness_evaluation_framework.py",
          "services/core/governance-synthesis/gs_service/app/services/alphaevolve_bridge.py",
          "services/core/governance-synthesis/gs_service/app/services/enhanced_governance_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/services/enhanced_multi_model_validation.py",
          "services/core/governance-synthesis/gs_service/app/services/lipschitz_estimator.py",
          "services/core/governance-synthesis/gs_service/app/services/cache_manager.py",
          "services/core/governance-synthesis/gs_service/app/services/violation_audit_service.py",
          "services/core/governance-synthesis/gs_service/app/services/fv_client.py",
          "services/core/governance-synthesis/gs_service/app/services/__init__.py",
          "services/core/governance-synthesis/gs_service/app/services/federated_learning_orchestrator.py",
          "services/core/governance-synthesis/gs_service/app/services/constitutional_reporting_service.py",
          "services/core/governance-synthesis/gs_service/app/services/violation_detection_service.py",
          "services/core/governance-synthesis/gs_service/app/models/mab_models.py",
          "services/core/governance-synthesis/gs_service/app/models/reliability_models.py",
          "services/core/governance-synthesis/gs_service/app/wina/gating.py",
          "services/core/governance-synthesis/gs_service/app/wina/models.py",
          "services/core/governance-synthesis/gs_service/app/wina/core.py",
          "services/core/governance-synthesis/gs_service/app/wina/svd_utils.py",
          "services/core/governance-synthesis/gs_service/app/wina/__init__.py",
          "services/core/governance-synthesis/gs_service/app/shared/metrics.py",
          "services/core/governance-synthesis/gs_service/app/api/__init__.py",
          "services/core/governance-synthesis/gs_service/app/middleware/__init__.py",
          "services/core/governance-synthesis/gs_service/app/middleware/enhanced_security.py",
          "services/core/governance-synthesis/gs_service/app/config/opa_config.py",
          "services/core/governance-synthesis/gs_service/app/workflows/structured_output_models.py",
          "services/core/governance-synthesis/gs_service/app/workflows/multi_model_manager.py",
          "services/core/governance-synthesis/gs_service/app/workflows/policy_synthesis_workflow.py",
          "services/core/governance-synthesis/gs_service/app/workflows/__init__.py",
          "services/core/governance-synthesis/gs_service/app/workflows/phase_a3_governance_orchestrator.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/synthesize.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/__init__.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/mab_optimization.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/qec_error_correction.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/constitutional_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/governance_workflows.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/fidelity_monitoring_websocket.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/wina_rego_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/phase2_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/enhanced_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/policy_management.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/violation_management.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/constitutional_reports.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/reliability_metrics.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/phase_a3_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/multi_model_synthesis.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/enhanced_multi_model.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/alphaevolve_integration.py",
          "services/core/governance-synthesis/gs_service/app/api/v1/performance_monitoring.py",
          "services/core/governance-synthesis/gs_service/tests/integration/test_opa_integration.py",
          "services/core/governance-synthesis/gs_service/tests/security/test_security_compliance.py",
          "services/core/governance-synthesis/gs_service/tests/performance/test_governance_synthesis_performance.py",
          "services/core/governance-synthesis/gs_service/tests/unit/services/test_policy_validator.py"
        ]
      },
      {
        "name": "governance_workflows",
        "path": "/home/dislove/ACGS-2/services/core/governance_workflows",
        "python_files": 6,
        "files": [
          "services/core/governance_workflows/app/main.py",
          "services/core/governance_workflows/app/config.py",
          "services/core/governance_workflows/app/core/service_integrator.py",
          "services/core/governance_workflows/app/core/workflow_orchestrator.py",
          "services/core/governance_workflows/app/core/metrics_collector.py",
          "services/core/governance_workflows/app/core/performance_monitor.py"
        ]
      },
      {
        "name": "constitutional-trainer",
        "path": "/home/dislove/ACGS-2/services/core/constitutional-trainer",
        "python_files": 8,
        "files": [
          "services/core/constitutional-trainer/privacy_engine.py",
          "services/core/constitutional-trainer/test_basic_functionality.py",
          "services/core/constitutional-trainer/constitutional_trainer.py",
          "services/core/constitutional-trainer/test_structure.py",
          "services/core/constitutional-trainer/main.py",
          "services/core/constitutional-trainer/validators.py",
          "services/core/constitutional-trainer/metrics.py",
          "services/core/constitutional-trainer/tests/test_integration.py"
        ]
      },
      {
        "name": "policy-governance",
        "path": "/home/dislove/ACGS-2/services/core/policy-governance",
        "python_files": 57,
        "files": [
          "services/core/policy-governance/simple_pgc_main.py",
          "services/core/policy-governance/__init__.py",
          "services/core/policy-governance/pgc_service/models.py",
          "services/core/policy-governance/pgc_service/main.py",
          "services/core/policy-governance/pgc_service/start_with_tracing.py",
          "services/core/policy-governance/pgc_service/__init__.py",
          "services/core/policy-governance/pgc_service/optimized_governance_engine.py",
          "services/core/policy-governance/app/cache_manager.py",
          "services/core/policy-governance/app/exceptions.py",
          "services/core/policy-governance/src/__init__.py",
          "services/core/policy-governance/pgc_service/app/schemas.py",
          "services/core/policy-governance/pgc_service/app/telemetry.py",
          "services/core/policy-governance/pgc_service/app/main.py",
          "services/core/policy-governance/pgc_service/app/__init__.py",
          "services/core/policy-governance/pgc_service/app/main_enhanced.py",
          "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
          "services/core/policy-governance/pgc_service/tests/test_constitutional_hash_validation.py",
          "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_integration.py",
          "services/core/policy-governance/pgc_service/app/core/constitutional_hash_validator.py",
          "services/core/policy-governance/pgc_service/app/core/database.py",
          "services/core/policy-governance/pgc_service/app/core/auth.py",
          "services/core/policy-governance/pgc_service/app/core/__init__.py",
          "services/core/policy-governance/pgc_service/app/core/policy_synthesis_engine.py",
          "services/core/policy-governance/pgc_service/app/core/limiter.py",
          "services/core/policy-governance/pgc_service/app/core/ultra_low_latency_optimizer.py",
          "services/core/policy-governance/pgc_service/app/core/datalog_engine.py",
          "services/core/policy-governance/pgc_service/app/core/redis_cache_manager.py",
          "services/core/policy-governance/pgc_service/app/core/hardware_acceleration_manager.py",
          "services/core/policy-governance/pgc_service/app/core/realtime_compliance_engine.py",
          "services/core/policy-governance/pgc_service/app/core/manifest_manager.py",
          "services/core/policy-governance/pgc_service/app/core/proactive_fairness_generator.py",
          "services/core/policy-governance/pgc_service/app/core/wina_enforcement_optimizer.py",
          "services/core/policy-governance/pgc_service/app/core/policy_manager.py",
          "services/core/policy-governance/pgc_service/app/core/opa_client.py",
          "services/core/policy-governance/pgc_service/app/core/metrics.py",
          "services/core/policy-governance/pgc_service/app/core/incremental_compiler.py",
          "services/core/policy-governance/pgc_service/app/core/wina_policy_compiler.py",
          "services/core/policy-governance/pgc_service/app/core/policy_format_router.py",
          "services/core/policy-governance/pgc_service/app/core/secure_execution.py",
          "services/core/policy-governance/pgc_service/app/middleware/constitutional_validation.py",
          "services/core/policy-governance/pgc_service/app/middleware/__init__.py",
          "services/core/policy-governance/pgc_service/app/middleware/enhanced_security.py",
          "services/core/policy-governance/pgc_service/app/config/service_config.py",
          "services/core/policy-governance/pgc_service/app/monitoring/acgs_pgp_metrics.py",
          "services/core/policy-governance/pgc_service/app/services/fv_client.py",
          "services/core/policy-governance/pgc_service/app/services/qpe_client.py",
          "services/core/policy-governance/pgc_service/app/services/__init__.py",
          "services/core/policy-governance/pgc_service/app/services/integrity_client.py",
          "services/core/policy-governance/pgc_service/app/services/advanced_cache.py",
          "services/core/policy-governance/pgc_service/app/api/__init__.py",
          "services/core/policy-governance/pgc_service/app/api/v1/ultra_low_latency.py",
          "services/core/policy-governance/pgc_service/app/api/v1/quantum_enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/alphaevolve_enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/__init__.py",
          "services/core/policy-governance/pgc_service/app/api/v1/enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/governance_workflows.py",
          "services/core/policy-governance/pgc_service/app/api/v1/incremental_compilation.py"
        ]
      },
      {
        "name": "constitutional_ai",
        "path": "/home/dislove/ACGS-2/services/core/constitutional_ai",
        "python_files": 68,
        "files": [
          "services/core/constitutional_ai/__init__.py",
          "services/core/constitutional_ai/src/__init__.py",
          "services/core/constitutional_ai/ac_service/validate_stakeholder_system.py",
          "services/core/constitutional_ai/ac_service/test_stakeholder_simple.py",
          "services/core/constitutional_ai/ac_service/models.py",
          "services/core/constitutional_ai/ac_service/test_stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/main.py",
          "services/core/constitutional_ai/ac_service/__init__.py",
          "services/core/constitutional_ai/ac_service/acge_single_model_service.py",
          "services/core/constitutional_ai/ac_service/tests/test_human_in_the_loop_sampling.py",
          "services/core/constitutional_ai/ac_service/tests/test_hitl_api_integration.py",
          "services/core/constitutional_ai/ac_service/tests/test_intelligent_conflict_resolution.py",
          "services/core/constitutional_ai/ac_service/app/schemas.py",
          "services/core/constitutional_ai/ac_service/app/main.py",
          "services/core/constitutional_ai/ac_service/app/cache_manager.py",
          "services/core/constitutional_ai/ac_service/app/crud.py",
          "services/core/constitutional_ai/ac_service/app/models.py",
          "services/core/constitutional_ai/ac_service/app/__init__.py",
          "services/core/constitutional_ai/ac_service/alembic/versions/005_add_qec_conflict_resolution_fields.py",
          "services/core/constitutional_ai/ac_service/app/integrations/polis_integration.py",
          "services/core/constitutional_ai/ac_service/app/middleware/enhanced_security.py",
          "services/core/constitutional_ai/ac_service/app/middleware/__init__.py",
          "services/core/constitutional_ai/ac_service/app/core/constitutional_council_scalability.py",
          "services/core/constitutional_ai/ac_service/app/core/auth.py",
          "services/core/constitutional_ai/ac_service/app/core/__init__.py",
          "services/core/constitutional_ai/ac_service/app/core/domain_context_manager.py",
          "services/core/constitutional_ai/ac_service/app/core/amendment_state_machine.py",
          "services/core/constitutional_ai/ac_service/app/core/cryptographic_signing.py",
          "services/core/constitutional_ai/ac_service/app/api/hitl_sampling.py",
          "services/core/constitutional_ai/ac_service/app/api/public_consultation.py",
          "services/core/constitutional_ai/ac_service/app/api/__init__.py",
          "services/core/constitutional_ai/ac_service/app/services/collective_constitutional_ai.py",
          "services/core/constitutional_ai/ac_service/app/services/human_escalation_system.py",
          "services/core/constitutional_ai/ac_service/app/services/constitutional_council_dashboard.py",
          "services/core/constitutional_ai/ac_service/app/services/public_consultation_service.py",
          "services/core/constitutional_ai/ac_service/app/services/conflict_resolution_orchestrator.py",
          "services/core/constitutional_ai/ac_service/app/services/constitutional_validation_service.py",
          "services/core/constitutional_ai/ac_service/app/services/enhanced_constitutional_reward.py",
          "services/core/constitutional_ai/ac_service/app/services/llm_as_judge_framework.py",
          "services/core/constitutional_ai/ac_service/app/services/intelligent_conflict_detector.py",
          "services/core/constitutional_ai/ac_service/app/services/conflict_audit_system.py",
          "services/core/constitutional_ai/ac_service/app/services/advanced_democratic_participation.py",
          "services/core/constitutional_ai/ac_service/app/services/qec_conflict_resolver.py",
          "services/core/constitutional_ai/ac_service/app/services/voting_mechanism.py",
          "services/core/constitutional_ai/ac_service/app/services/stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/app/services/automated_resolution_engine.py",
          "services/core/constitutional_ai/ac_service/app/services/hitl_cross_service_integration.py",
          "services/core/constitutional_ai/ac_service/app/services/voting_client.py",
          "services/core/constitutional_ai/ac_service/app/services/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/services/human_in_the_loop_sampler.py",
          "services/core/constitutional_ai/ac_service/app/workflows/workflow_manager.py",
          "services/core/constitutional_ai/ac_service/app/workflows/constitutional_council_graph.py",
          "services/core/constitutional_ai/ac_service/app/workflows/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/workflows/__init__.py",
          "services/core/constitutional_ai/ac_service/app/monitoring/scalability_metrics.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/collective_constitutional_ai.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/conflict_resolution.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/dashboard_websocket.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/__init__.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/principles.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/wina_constitutional_updates.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/constitutional_council.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/workflows.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/fidelity_monitor.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/voting.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/constitutional_validation.py"
        ]
      },
      {
        "name": "governance_synthesis",
        "path": "/home/dislove/ACGS-2/services/core/governance_synthesis",
        "python_files": 113,
        "files": [
          "services/core/governance_synthesis/__init__.py",
          "services/core/governance_synthesis/gs_service/models.py",
          "services/core/governance_synthesis/gs_service/main.py",
          "services/core/governance_synthesis/gs_service/start_minimal.py",
          "services/core/governance_synthesis/gs_service/__init__.py",
          "services/core/governance_synthesis/src/__init__.py",
          "services/core/governance_synthesis/gs_service/app/__init__.py",
          "services/core/governance_synthesis/gs_service/app/crud_gs.py",
          "services/core/governance_synthesis/gs_service/app/cache_manager.py",
          "services/core/governance_synthesis/gs_service/app/main.py",
          "services/core/governance_synthesis/gs_service/app/schemas.py",
          "services/core/governance_synthesis/gs_service/tests/test_gemini_validators.py",
          "services/core/governance_synthesis/gs_service/tests/test_wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/tests/test_wina_rego_integration.py",
          "services/core/governance_synthesis/gs_service/tests/test_evolutionary_tensor_integration.py",
          "services/core/governance_synthesis/gs_service/tests/test_policy_synthesis_enhancement.py",
          "services/core/governance_synthesis/gs_service/tests/test_groq_tensor_service.py",
          "services/core/governance_synthesis/gs_service/tests/test_router_optimization.py",
          "services/core/governance_synthesis/gs_service/app/validators/gemini_validators.py",
          "services/core/governance_synthesis/gs_service/app/validators/__init__.py",
          "services/core/governance_synthesis/gs_service/app/core/rule_generator.py",
          "services/core/governance_synthesis/gs_service/app/core/constitutional_prompting.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_reliability_framework.py",
          "services/core/governance_synthesis/gs_service/app/core/constitutional_council_scalability.py",
          "services/core/governance_synthesis/gs_service/app/core/sliding_window_ucb.py",
          "services/core/governance_synthesis/gs_service/app/core/distributed_policy_cache.py",
          "services/core/governance_synthesis/gs_service/app/core/datalog_templates.py",
          "services/core/governance_synthesis/gs_service/app/core/conservative_linucb.py",
          "services/core/governance_synthesis/gs_service/app/core/mab_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/contextual_analyzer.py",
          "services/core/governance_synthesis/gs_service/app/core/wina_llm_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/ab_testing_framework.py",
          "services/core/governance_synthesis/gs_service/app/core/__init__.py",
          "services/core/governance_synthesis/gs_service/app/core/auth.py",
          "services/core/governance_synthesis/gs_service/app/core/qec_enhanced_synthesizer.py",
          "services/core/governance_synthesis/gs_service/app/core/ollama_client.py",
          "services/core/governance_synthesis/gs_service/app/core/heterogeneous_validator.py",
          "services/core/governance_synthesis/gs_service/app/core/opa_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/mab_prompt_optimizer.py",
          "services/core/governance_synthesis/gs_service/app/core/wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_circuit_breaker.py",
          "services/core/governance_synthesis/gs_service/app/core/performance_optimizer.py",
          "services/core/governance_synthesis/gs_service/app/core/violation_config.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/phase_a3_multi_model_consensus.py",
          "services/core/governance_synthesis/gs_service/app/core/performance_validation.py",
          "services/core/governance_synthesis/gs_service/app/core/multi_model_coordinator.py",
          "services/core/governance_synthesis/gs_service/app/core/enhanced_constitutional_analyzer.py",
          "services/core/governance_synthesis/gs_service/app/core/nvidia_qwen_client.py",
          "services/core/governance_synthesis/gs_service/app/security/adversarial_defenses.py",
          "services/core/governance_synthesis/gs_service/app/services/performance_monitor.py",
          "services/core/governance_synthesis/gs_service/app/services/security_compliance.py",
          "services/core/governance_synthesis/gs_service/app/services/advanced_cache.py",
          "services/core/governance_synthesis/gs_service/app/services/integrity_client.py",
          "services/core/governance_synthesis/gs_service/app/services/groq_tensor_service.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_escalation_service.py",
          "services/core/governance_synthesis/gs_service/app/services/qec_error_correction_service.py",
          "services/core/governance_synthesis/gs_service/app/services/ac_client.py",
          "services/core/governance_synthesis/gs_service/app/services/policy_validator.py",
          "services/core/governance_synthesis/gs_service/app/services/monitoring_service.py",
          "services/core/governance_synthesis/gs_service/app/services/stakeholder_engagement.py",
          "services/core/governance_synthesis/gs_service/app/services/fairness_evaluation_framework.py",
          "services/core/governance_synthesis/gs_service/app/services/alphaevolve_bridge.py",
          "services/core/governance_synthesis/gs_service/app/services/enhanced_governance_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/services/enhanced_multi_model_validation.py",
          "services/core/governance_synthesis/gs_service/app/services/lipschitz_estimator.py",
          "services/core/governance_synthesis/gs_service/app/services/cache_manager.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_audit_service.py",
          "services/core/governance_synthesis/gs_service/app/services/fv_client.py",
          "services/core/governance_synthesis/gs_service/app/services/__init__.py",
          "services/core/governance_synthesis/gs_service/app/services/federated_learning_orchestrator.py",
          "services/core/governance_synthesis/gs_service/app/services/constitutional_reporting_service.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_detection_service.py",
          "services/core/governance_synthesis/gs_service/app/models/mab_models.py",
          "services/core/governance_synthesis/gs_service/app/models/reliability_models.py",
          "services/core/governance_synthesis/gs_service/app/wina/gating.py",
          "services/core/governance_synthesis/gs_service/app/wina/models.py",
          "services/core/governance_synthesis/gs_service/app/wina/core.py",
          "services/core/governance_synthesis/gs_service/app/wina/svd_utils.py",
          "services/core/governance_synthesis/gs_service/app/wina/__init__.py",
          "services/core/governance_synthesis/gs_service/app/shared/metrics.py",
          "services/core/governance_synthesis/gs_service/app/api/__init__.py",
          "services/core/governance_synthesis/gs_service/app/middleware/__init__.py",
          "services/core/governance_synthesis/gs_service/app/middleware/enhanced_security.py",
          "services/core/governance_synthesis/gs_service/app/config/opa_config.py",
          "services/core/governance_synthesis/gs_service/app/workflows/structured_output_models.py",
          "services/core/governance_synthesis/gs_service/app/workflows/multi_model_manager.py",
          "services/core/governance_synthesis/gs_service/app/workflows/policy_synthesis_workflow.py",
          "services/core/governance_synthesis/gs_service/app/workflows/__init__.py",
          "services/core/governance_synthesis/gs_service/app/workflows/phase_a3_governance_orchestrator.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/synthesize.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/__init__.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/mab_optimization.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/qec_error_correction.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/constitutional_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/governance_workflows.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/fidelity_monitoring_websocket.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/phase2_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/enhanced_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/policy_management.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/violation_management.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/constitutional_reports.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/reliability_metrics.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/phase_a3_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/multi_model_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/enhanced_multi_model.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/alphaevolve_integration.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/performance_monitoring.py",
          "services/core/governance_synthesis/gs_service/tests/integration/test_opa_integration.py",
          "services/core/governance_synthesis/gs_service/tests/security/test_security_compliance.py",
          "services/core/governance_synthesis/gs_service/tests/performance/test_governance_synthesis_performance.py",
          "services/core/governance_synthesis/gs_service/tests/unit/services/test_policy_validator.py"
        ]
      }
    ]
  },
  "test_structure": {
    "unit_tests": [
      "tests/unit/test_constitutional_council_fixtures.py",
      "tests/unit/test_policy_validator.py",
      "tests/unit/test_qec_conflict_resolution.py",
      "tests/unit/test_main.py",
      "tests/unit/test_adversarial_framework_validation.py",
      "tests/unit/test_models.py",
      "tests/unit/test_auth_flows.py",
      "tests/unit/test_eval.py",
      "tests/unit/test_logprobs.py",
      "tests/unit/test_code_execution.py",
      "tests/unit/test_bash_tool.py",
      "tests/unit/test_patch_validator.py",
      "tests/unit/test_wina_dynamic_gating.py",
      "tests/unit/test_enhanced_multi_model_validation.py",
      "tests/unit/test_load_testing.py",
      "tests/unit/test_swebench.py",
      "tests/unit/test_centralized_config.py",
      "tests/unit/test_convert.py",
      "tests/unit/test_simple.py",
      "tests/unit/test_intelligent_conflict_resolution.py",
      "tests/unit/test_constitutional_hash_validation.py",
      "tests/unit/test_infrastructure_validation.py",
      "tests/unit/test_mab_metrics_endpoint.py",
      "tests/unit/test_data_preparation.py",
      "tests/unit/test_middleware_directly.py",
      "tests/unit/test_wina_svd_integration.py",
      "tests/unit/test_qec_conflict_resolution_integration.py",
      "tests/unit/test_enhanced_multi_model_consensus.py",
      "tests/unit/test_wina_performance_monitoring.py",
      "tests/unit/test_authentication_workflow.py",
      "tests/unit/test_dataclasses.py",
      "tests/unit/test_automated_disaster_recovery.py",
      "tests/unit/test_enhanced_llm_reliability.py",
      "tests/unit/test_token.py",
      "tests/unit/test_reward.py",
      "tests/unit/test_centralized_configuration.py",
      "tests/unit/test_auth.py",
      "tests/unit/test_enhanced_policy_synthesis_engine.py",
      "tests/unit/test_enhanced_constitutional_prompting.py",
      "tests/unit/test_wina_rego_synthesis.py",
      "tests/unit/test_remediation_coordinator.py",
      "tests/unit/test_prompts.py",
      "tests/unit/test_anthropic_upgrade.py",
      "tests/unit/test_lipschitz_monitor.py",
      "tests/unit/test_database_resilience.py",
      "tests/unit/test_mab_real_world_validation.py",
      "tests/unit/test_service.py",
      "tests/unit/test_quantumagi_implementation.py",
      "tests/unit/test_run_cmd_llm_infer.py",
      "tests/unit/test_minimal_acgs.py",
      "tests/unit/test_edit.py",
      "tests/unit/test_wina_ec_oversight_integration.py",
      "tests/unit/test_enhanced.py",
      "tests/unit/test_ollama_simple.py",
      "tests/unit/test_phase1_validation_simple.py",
      "tests/unit/test_crud_operations_comprehensive.py",
      "tests/unit/test_phase2_implementation.py",
      "tests/unit/test_math_equal.py",
      "tests/unit/test_monitoring_service.py",
      "tests/unit/test_qec_enhancements.py",
      "tests/unit/test_generate.py",
      "tests/unit/test_metrics.py",
      "tests/unit/test_wina_gating_integration.py",
      "tests/unit/test_service_stabilization.py",
      "tests/unit/test_wina_core.py",
      "tests/unit/test_users.py",
      "tests/unit/test_tools.py",
      "tests/unit/test_stakeholder_engagement.py",
      "tests/unit/test_secure_cookie_env.py",
      "tests/unit/test_generators.py",
      "tests/unit/test_human_in_the_loop_sampling.py",
      "tests/unit/test_federated_evaluation_framework.py",
      "tests/unit/test_rto_validation.py",
      "tests/unit/test_mimesis_upgrade.py",
      "tests/unit/test_train.py",
      "tests/unit/test_wina_enforcement_optimizer.py",
      "tests/unit/test_wina_continuous_learning_integration.py",
      "tests/unit/test_stakeholder_simple.py",
      "tests/unit/test_judge.py",
      "tests/unit/test_generation_engine.py",
      "tests/unit/test_restructured_applications.py",
      "tests/unit/test_basic_functionality.py",
      "tests/unit/test_ollama_constitutional.py",
      "tests/unit/test_wina_constitutional_updates.py",
      "tests/unit/test_new_models.py",
      "tests/unit/test_generation.py",
      "tests/unit/test_enhanced_2.py",
      "tests/unit/test_async_processing.py",
      "tests/unit/test_default_args.py",
      "tests/unit/test_principle_tracer.py",
      "tests/unit/test_simple_model.py",
      "tests/unit/test_gemini_validators.py",
      "tests/unit/test_cache_optimizer.py",
      "tests/unit/test_spec.py",
      "tests/unit/test_enhanced_3.py",
      "tests/unit/test_policy_synthesis_enhancement.py",
      "tests/unit/test_simple_cache.py",
      "tests/unit/test_edit_tool.py",
      "tests/unit/test_bias_detection_enhanced.py",
      "tests/unit/test_blue_green_deployment.py",
      "tests/unit/test_enhanced_1.py",
      "tests/unit/test_mab_standalone.py",
      "tests/unit/test_enhanced_constitutional_analyzer.py",
      "tests/unit/test_multi_model_validator.py",
      "tests/unit/test_auth_basic.py",
      "tests/unit/test_wina_performance_integration.py",
      "tests/unit/test_phase2_comprehensive.py",
      "tests/unit/test_qec_backward_compatibility.py",
      "tests/unit/test_contamination.py",
      "tests/unit/test_configs.py",
      "tests/unit/test_adversarial_framework.py",
      "tests/unit/test_teardown_validation.py",
      "tests/unit/test_groq_tensor_service.py",
      "tests/unit/test_datasets.py",
      "tests/unit/test_backup_recovery_simple.py",
      "tests/unit/core/test_data_structures.py",
      "tests/unit/shared/test_unified_response.py",
      "tests/unit/shared/test_error_handling_integration.py",
      "tests/unit/shared/test_error_catalog.py",
      "tests/unit/services/test_integrity_service_comprehensive.py",
      "tests/unit/services/test_gs_service_comprehensive.py",
      "tests/unit/services/test_ec_service_comprehensive.py",
      "tests/unit/services/test_policy_synthesizer.py",
      "tests/unit/services/test_auth_service_comprehensive.py",
      "tests/unit/services/test_fv_service_comprehensive.py",
      "tests/unit/services/test_pgc_service_comprehensive.py",
      "tests/unit/services/test_ac_service_comprehensive.py",
      "tests/unit/services/test_auth_service.py",
      "tests/unit/services/test_ai_model_service_concurrency.py",
      "tests/unit/services/validation/test_validators.py"
    ],
    "integration_tests": [
      "tests/integration/test_constitutional_council_implementation.py",
      "tests/integration/test_constitutional_council.py",
      "tests/integration/test_groq_llm_integration.py",
      "tests/integration/test_ec_service_integration.py",
      "tests/integration/test_wina_rego_integration.py",
      "tests/integration/test_phase3_appeals_dispute_resolution.py",
      "tests/integration/test_end_to_end_mlops.py",
      "tests/integration/test_constitutional_council_workflows.py",
      "tests/integration/test_phase1_implementation.py",
      "tests/integration/test_task8_incremental_compilation.py",
      "tests/integration/test_alphaevolve_acgs_simple.py",
      "tests/integration/test_langgraph_amendment_processing.py",
      "tests/integration/test_enhanced_multi_model_integration.py",
      "tests/integration/test_ollama_integration.py",
      "tests/integration/test_groq_acgs_integration.py",
      "tests/integration/test_governance_workflows_comprehensive.py",
      "tests/integration/test_cross_domain_principle_testing.py",
      "tests/integration/test_phase2_wina_integration.py",
      "tests/integration/test_federated_evaluation_communication.py",
      "tests/integration/test_nvidia_qwen_integration.py",
      "tests/integration/test_evolutionary_tensor_integration.py",
      "tests/integration/test_qec_comprehensive_integration.py",
      "tests/integration/test_federated_evaluation_phase2.py",
      "tests/integration/test_meta_rules_implementation.py",
      "tests/integration/test_constitutional_council_schema_alignment.py",
      "tests/integration/test_wina_enforcement_integration.py",
      "tests/integration/test_federated_evaluation_phase3.py",
      "tests/integration/test_federated_evaluation_phase1.py",
      "tests/integration/test_opa_integration.py",
      "tests/integration/test_hunyuan_acgs_integration.py",
      "tests/integration/test_audit_compliance_implementation.py",
      "tests/integration/test_crypto_standalone.py",
      "tests/integration/test_monitoring_integration.py",
      "tests/integration/test_qec_error_correction_integration.py",
      "tests/integration/test_alphaevolve_acgs_integration.py",
      "tests/integration/test_ai_model_integration.py",
      "tests/integration/test_qec_standalone_integration.py",
      "tests/integration/test_parallel_validation_pipeline.py",
      "tests/integration/test_coverage_enhancement.py",
      "tests/integration/test_governance_workflows_simple.py",
      "tests/integration/test_phase1_enhanced_policy_synthesis.py",
      "tests/integration/test_phase2_end_to_end_integration.py",
      "tests/integration/test_config.py",
      "tests/integration/test_cryptographic_integrity_phase3.py",
      "tests/integration/test_phase3_pgp_assurance.py",
      "tests/integration/test_conflict_resolution_implementation.py",
      "tests/integration/test_constitutional_dashboard_integration.py",
      "tests/integration/test_phase3_z3_integration.py",
      "tests/integration/test_mab_integration.py",
      "tests/integration/test_enhanced_dependency_mocking.py",
      "tests/integration/test_policy_synthesis_enhancement_integration.py",
      "tests/integration/test_public_consultation_implementation.py",
      "tests/integration/test_alphaevolve_minimal.py",
      "tests/integration/test_alphaevolve_acgs_enhancements.py",
      "tests/integration/test_import_verification.py",
      "tests/integration/test_alphaevolve_advanced_features.py",
      "tests/integration/test_centralized_config_integration.py",
      "tests/integration/test_service_integration.py",
      "tests/integration/test_alphaevolve_minimal_check.py",
      "tests/integration/test_complete_policy_pipeline.py",
      "tests/integration/test_enhanced_policy_synthesis_integration.py",
      "tests/integration/test_phase3_algorithmic_fairness.py",
      "tests/integration/test_constitutional_trainer_integration.py",
      "tests/integration/test_hitl_api_integration.py",
      "tests/integration/test_pgc_enhanced_integration.py",
      "tests/integration/test_comprehensive_service_integration.py",
      "tests/integration/test_phase2_alphaevolve_integration.py",
      "tests/integration/test_public_consultation_integration.py",
      "tests/integration/versioning/test_compatibility.py",
      "tests/integration/legacy/test_reliability_framework_simple.py",
      "tests/integration/legacy/test_phase3_core.py",
      "tests/integration/legacy/test_comprehensive_features.py",
      "tests/integration/legacy/test_docker_fixes.py",
      "tests/integration/legacy/test_auth_workflow.py",
      "tests/integration/legacy/test_auth_performance.py",
      "tests/integration/legacy/test_fidelity_websocket.py",
      "tests/integration/legacy/test_phase3_endpoints.py",
      "tests/integration/legacy/test_final_auth.py",
      "tests/integration/legacy/test_teardown_procedures.py",
      "tests/integration/legacy/test_minimal_import.py",
      "tests/integration/legacy/test_comprehensive_acgs_validation.py",
      "tests/integration/legacy/test_parallel_validation_benchmark.py",
      "tests/integration/legacy/test_fidelity_simple.py",
      "tests/integration/legacy/test_token_refresh_logout.py",
      "tests/integration/legacy/test_phase3_enhanced.py",
      "tests/integration/legacy/test_dgm_integration.py"
    ],
    "e2e_tests": [
      "tests/e2e/test_end_to_end_governance_workflow.py",
      "tests/e2e/test_comprehensive_scenarios.py",
      "tests/e2e/test_multimodal_vl_integration.py",
      "tests/e2e/test_comprehensive_end_to_end.py",
      "tests/e2e/test_governance_workflows.py",
      "tests/e2e/test_pytest_integration.py",
      "tests/e2e/test_reasoning_models_integration.py",
      "tests/e2e/test_comprehensive_acgs.py"
    ],
    "performance_tests": [
      "tests/performance/test_database_performance.py",
      "tests/performance/test_task8_performance_benchmarks.py",
      "tests/performance/test_cache_performance.py",
      "tests/performance/test_system_performance.py",
      "tests/performance/test_priority2_simple_performance.py",
      "tests/performance/test_governance_synthesis_performance.py",
      "tests/performance/test_simple_performance.py",
      "tests/performance/test_load_balancing.py",
      "tests/performance/test_system_performance_runner.py",
      "tests/performance/test_policy_synthesis_performance.py",
      "tests/performance/test_performance.py",
      "tests/performance/test_performance_validation.py",
      "tests/performance/test_qec_performance_optimization.py",
      "tests/performance/test_pgc_load.py",
      "tests/performance/test_load_testing_suite.py"
    ],
    "security_tests": [
      "tests/security/test_export_authorization_fix.py",
      "tests/security/test_policy_pipeline_with_security.py",
      "tests/security/test_security_validation.py",
      "tests/security/test_datalog_injection_fix.py",
      "tests/security/test_security_middleware_standalone.py",
      "tests/security/test_comprehensive_security.py",
      "tests/security/test_security_compliance.py"
    ],
    "total_test_files": 246
  },
  "coverage_gaps": {
    "untested_services": [
      "self_evolving_ai",
      "constitutional-ai",
      "self-evolving-ai",
      "evolutionary-computation",
      "policy_governance",
      "aici_integration",
      "evolutionary_computation",
      "audit-engine",
      "formal_verification",
      "constitutional_ai",
      "sandbox-controller",
      "acgs-pgp-v8",
      "governance_workflows",
      "opa-policies",
      "nvidia-llm-router",
      "policy-governance",
      "formal-verification",
      "governance_synthesis",
      "policy-engine"
    ],
    "critical_gaps": [
      {
        "name": "policy-engine",
        "path": "/home/dislove/ACGS-2/services/core/policy-engine",
        "python_files": 1,
        "files": [
          "services/core/policy-engine/main.py"
        ]
      },
      {
        "name": "policy_governance",
        "path": "/home/dislove/ACGS-2/services/core/policy_governance",
        "python_files": 57,
        "files": [
          "services/core/policy_governance/simple_pgc_main.py",
          "services/core/policy_governance/__init__.py",
          "services/core/policy_governance/pgc_service/models.py",
          "services/core/policy_governance/pgc_service/main.py",
          "services/core/policy_governance/pgc_service/start_with_tracing.py",
          "services/core/policy_governance/pgc_service/__init__.py",
          "services/core/policy_governance/pgc_service/optimized_governance_engine.py",
          "services/core/policy_governance/app/cache_manager.py",
          "services/core/policy_governance/app/exceptions.py",
          "services/core/policy_governance/src/__init__.py",
          "services/core/policy_governance/pgc_service/app/schemas.py",
          "services/core/policy_governance/pgc_service/app/telemetry.py",
          "services/core/policy_governance/pgc_service/app/main.py",
          "services/core/policy_governance/pgc_service/app/__init__.py",
          "services/core/policy_governance/pgc_service/app/main_enhanced.py",
          "services/core/policy_governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
          "services/core/policy_governance/pgc_service/tests/test_constitutional_hash_validation.py",
          "services/core/policy_governance/pgc_service/tests/test_wina_enforcement_integration.py",
          "services/core/policy_governance/pgc_service/app/core/constitutional_hash_validator.py",
          "services/core/policy_governance/pgc_service/app/core/database.py",
          "services/core/policy_governance/pgc_service/app/core/auth.py",
          "services/core/policy_governance/pgc_service/app/core/__init__.py",
          "services/core/policy_governance/pgc_service/app/core/policy_synthesis_engine.py",
          "services/core/policy_governance/pgc_service/app/core/limiter.py",
          "services/core/policy_governance/pgc_service/app/core/ultra_low_latency_optimizer.py",
          "services/core/policy_governance/pgc_service/app/core/datalog_engine.py",
          "services/core/policy_governance/pgc_service/app/core/redis_cache_manager.py",
          "services/core/policy_governance/pgc_service/app/core/hardware_acceleration_manager.py",
          "services/core/policy_governance/pgc_service/app/core/realtime_compliance_engine.py",
          "services/core/policy_governance/pgc_service/app/core/manifest_manager.py",
          "services/core/policy_governance/pgc_service/app/core/proactive_fairness_generator.py",
          "services/core/policy_governance/pgc_service/app/core/wina_enforcement_optimizer.py",
          "services/core/policy_governance/pgc_service/app/core/policy_manager.py",
          "services/core/policy_governance/pgc_service/app/core/opa_client.py",
          "services/core/policy_governance/pgc_service/app/core/metrics.py",
          "services/core/policy_governance/pgc_service/app/core/incremental_compiler.py",
          "services/core/policy_governance/pgc_service/app/core/wina_policy_compiler.py",
          "services/core/policy_governance/pgc_service/app/core/policy_format_router.py",
          "services/core/policy_governance/pgc_service/app/core/secure_execution.py",
          "services/core/policy_governance/pgc_service/app/middleware/constitutional_validation.py",
          "services/core/policy_governance/pgc_service/app/middleware/__init__.py",
          "services/core/policy_governance/pgc_service/app/middleware/enhanced_security.py",
          "services/core/policy_governance/pgc_service/app/config/service_config.py",
          "services/core/policy_governance/pgc_service/app/monitoring/acgs_pgp_metrics.py",
          "services/core/policy_governance/pgc_service/app/services/fv_client.py",
          "services/core/policy_governance/pgc_service/app/services/qpe_client.py",
          "services/core/policy_governance/pgc_service/app/services/__init__.py",
          "services/core/policy_governance/pgc_service/app/services/integrity_client.py",
          "services/core/policy_governance/pgc_service/app/services/advanced_cache.py",
          "services/core/policy_governance/pgc_service/app/api/__init__.py",
          "services/core/policy_governance/pgc_service/app/api/v1/ultra_low_latency.py",
          "services/core/policy_governance/pgc_service/app/api/v1/quantum_enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/alphaevolve_enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/__init__.py",
          "services/core/policy_governance/pgc_service/app/api/v1/enforcement.py",
          "services/core/policy_governance/pgc_service/app/api/v1/governance_workflows.py",
          "services/core/policy_governance/pgc_service/app/api/v1/incremental_compilation.py"
        ]
      },
      {
        "name": "constitutional-ai",
        "path": "/home/dislove/ACGS-2/services/core/constitutional-ai",
        "python_files": 68,
        "files": [
          "services/core/constitutional-ai/__init__.py",
          "services/core/constitutional-ai/src/__init__.py",
          "services/core/constitutional-ai/ac_service/validate_stakeholder_system.py",
          "services/core/constitutional-ai/ac_service/test_stakeholder_simple.py",
          "services/core/constitutional-ai/ac_service/models.py",
          "services/core/constitutional-ai/ac_service/test_stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/main.py",
          "services/core/constitutional-ai/ac_service/__init__.py",
          "services/core/constitutional-ai/ac_service/acge_single_model_service.py",
          "services/core/constitutional-ai/ac_service/tests/test_human_in_the_loop_sampling.py",
          "services/core/constitutional-ai/ac_service/tests/test_hitl_api_integration.py",
          "services/core/constitutional-ai/ac_service/tests/test_intelligent_conflict_resolution.py",
          "services/core/constitutional-ai/ac_service/app/schemas.py",
          "services/core/constitutional-ai/ac_service/app/main.py",
          "services/core/constitutional-ai/ac_service/app/cache_manager.py",
          "services/core/constitutional-ai/ac_service/app/crud.py",
          "services/core/constitutional-ai/ac_service/app/models.py",
          "services/core/constitutional-ai/ac_service/app/__init__.py",
          "services/core/constitutional-ai/ac_service/alembic/versions/005_add_qec_conflict_resolution_fields.py",
          "services/core/constitutional-ai/ac_service/app/integrations/polis_integration.py",
          "services/core/constitutional-ai/ac_service/app/middleware/enhanced_security.py",
          "services/core/constitutional-ai/ac_service/app/middleware/__init__.py",
          "services/core/constitutional-ai/ac_service/app/core/constitutional_council_scalability.py",
          "services/core/constitutional-ai/ac_service/app/core/auth.py",
          "services/core/constitutional-ai/ac_service/app/core/__init__.py",
          "services/core/constitutional-ai/ac_service/app/core/domain_context_manager.py",
          "services/core/constitutional-ai/ac_service/app/core/amendment_state_machine.py",
          "services/core/constitutional-ai/ac_service/app/core/cryptographic_signing.py",
          "services/core/constitutional-ai/ac_service/app/api/hitl_sampling.py",
          "services/core/constitutional-ai/ac_service/app/api/public_consultation.py",
          "services/core/constitutional-ai/ac_service/app/api/__init__.py",
          "services/core/constitutional-ai/ac_service/app/services/collective_constitutional_ai.py",
          "services/core/constitutional-ai/ac_service/app/services/human_escalation_system.py",
          "services/core/constitutional-ai/ac_service/app/services/constitutional_council_dashboard.py",
          "services/core/constitutional-ai/ac_service/app/services/public_consultation_service.py",
          "services/core/constitutional-ai/ac_service/app/services/conflict_resolution_orchestrator.py",
          "services/core/constitutional-ai/ac_service/app/services/constitutional_validation_service.py",
          "services/core/constitutional-ai/ac_service/app/services/enhanced_constitutional_reward.py",
          "services/core/constitutional-ai/ac_service/app/services/llm_as_judge_framework.py",
          "services/core/constitutional-ai/ac_service/app/services/intelligent_conflict_detector.py",
          "services/core/constitutional-ai/ac_service/app/services/conflict_audit_system.py",
          "services/core/constitutional-ai/ac_service/app/services/advanced_democratic_participation.py",
          "services/core/constitutional-ai/ac_service/app/services/qec_conflict_resolver.py",
          "services/core/constitutional-ai/ac_service/app/services/voting_mechanism.py",
          "services/core/constitutional-ai/ac_service/app/services/stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/app/services/automated_resolution_engine.py",
          "services/core/constitutional-ai/ac_service/app/services/hitl_cross_service_integration.py",
          "services/core/constitutional-ai/ac_service/app/services/voting_client.py",
          "services/core/constitutional-ai/ac_service/app/services/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/services/human_in_the_loop_sampler.py",
          "services/core/constitutional-ai/ac_service/app/workflows/workflow_manager.py",
          "services/core/constitutional-ai/ac_service/app/workflows/constitutional_council_graph.py",
          "services/core/constitutional-ai/ac_service/app/workflows/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/workflows/__init__.py",
          "services/core/constitutional-ai/ac_service/app/monitoring/scalability_metrics.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/collective_constitutional_ai.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/conflict_resolution.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/dashboard_websocket.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/__init__.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/democratic_governance.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/principles.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/wina_constitutional_updates.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/constitutional_council.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/workflows.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/fidelity_monitor.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/voting.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/stakeholder_engagement.py",
          "services/core/constitutional-ai/ac_service/app/api/v1/constitutional_validation.py"
        ]
      },
      {
        "name": "governance_workflows",
        "path": "/home/dislove/ACGS-2/services/core/governance_workflows",
        "python_files": 6,
        "files": [
          "services/core/governance_workflows/app/main.py",
          "services/core/governance_workflows/app/config.py",
          "services/core/governance_workflows/app/core/service_integrator.py",
          "services/core/governance_workflows/app/core/workflow_orchestrator.py",
          "services/core/governance_workflows/app/core/metrics_collector.py",
          "services/core/governance_workflows/app/core/performance_monitor.py"
        ]
      },
      {
        "name": "policy-governance",
        "path": "/home/dislove/ACGS-2/services/core/policy-governance",
        "python_files": 57,
        "files": [
          "services/core/policy-governance/simple_pgc_main.py",
          "services/core/policy-governance/__init__.py",
          "services/core/policy-governance/pgc_service/models.py",
          "services/core/policy-governance/pgc_service/main.py",
          "services/core/policy-governance/pgc_service/start_with_tracing.py",
          "services/core/policy-governance/pgc_service/__init__.py",
          "services/core/policy-governance/pgc_service/optimized_governance_engine.py",
          "services/core/policy-governance/app/cache_manager.py",
          "services/core/policy-governance/app/exceptions.py",
          "services/core/policy-governance/src/__init__.py",
          "services/core/policy-governance/pgc_service/app/schemas.py",
          "services/core/policy-governance/pgc_service/app/telemetry.py",
          "services/core/policy-governance/pgc_service/app/main.py",
          "services/core/policy-governance/pgc_service/app/__init__.py",
          "services/core/policy-governance/pgc_service/app/main_enhanced.py",
          "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
          "services/core/policy-governance/pgc_service/tests/test_constitutional_hash_validation.py",
          "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_integration.py",
          "services/core/policy-governance/pgc_service/app/core/constitutional_hash_validator.py",
          "services/core/policy-governance/pgc_service/app/core/database.py",
          "services/core/policy-governance/pgc_service/app/core/auth.py",
          "services/core/policy-governance/pgc_service/app/core/__init__.py",
          "services/core/policy-governance/pgc_service/app/core/policy_synthesis_engine.py",
          "services/core/policy-governance/pgc_service/app/core/limiter.py",
          "services/core/policy-governance/pgc_service/app/core/ultra_low_latency_optimizer.py",
          "services/core/policy-governance/pgc_service/app/core/datalog_engine.py",
          "services/core/policy-governance/pgc_service/app/core/redis_cache_manager.py",
          "services/core/policy-governance/pgc_service/app/core/hardware_acceleration_manager.py",
          "services/core/policy-governance/pgc_service/app/core/realtime_compliance_engine.py",
          "services/core/policy-governance/pgc_service/app/core/manifest_manager.py",
          "services/core/policy-governance/pgc_service/app/core/proactive_fairness_generator.py",
          "services/core/policy-governance/pgc_service/app/core/wina_enforcement_optimizer.py",
          "services/core/policy-governance/pgc_service/app/core/policy_manager.py",
          "services/core/policy-governance/pgc_service/app/core/opa_client.py",
          "services/core/policy-governance/pgc_service/app/core/metrics.py",
          "services/core/policy-governance/pgc_service/app/core/incremental_compiler.py",
          "services/core/policy-governance/pgc_service/app/core/wina_policy_compiler.py",
          "services/core/policy-governance/pgc_service/app/core/policy_format_router.py",
          "services/core/policy-governance/pgc_service/app/core/secure_execution.py",
          "services/core/policy-governance/pgc_service/app/middleware/constitutional_validation.py",
          "services/core/policy-governance/pgc_service/app/middleware/__init__.py",
          "services/core/policy-governance/pgc_service/app/middleware/enhanced_security.py",
          "services/core/policy-governance/pgc_service/app/config/service_config.py",
          "services/core/policy-governance/pgc_service/app/monitoring/acgs_pgp_metrics.py",
          "services/core/policy-governance/pgc_service/app/services/fv_client.py",
          "services/core/policy-governance/pgc_service/app/services/qpe_client.py",
          "services/core/policy-governance/pgc_service/app/services/__init__.py",
          "services/core/policy-governance/pgc_service/app/services/integrity_client.py",
          "services/core/policy-governance/pgc_service/app/services/advanced_cache.py",
          "services/core/policy-governance/pgc_service/app/api/__init__.py",
          "services/core/policy-governance/pgc_service/app/api/v1/ultra_low_latency.py",
          "services/core/policy-governance/pgc_service/app/api/v1/quantum_enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/alphaevolve_enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/__init__.py",
          "services/core/policy-governance/pgc_service/app/api/v1/enforcement.py",
          "services/core/policy-governance/pgc_service/app/api/v1/governance_workflows.py",
          "services/core/policy-governance/pgc_service/app/api/v1/incremental_compilation.py"
        ]
      },
      {
        "name": "constitutional_ai",
        "path": "/home/dislove/ACGS-2/services/core/constitutional_ai",
        "python_files": 68,
        "files": [
          "services/core/constitutional_ai/__init__.py",
          "services/core/constitutional_ai/src/__init__.py",
          "services/core/constitutional_ai/ac_service/validate_stakeholder_system.py",
          "services/core/constitutional_ai/ac_service/test_stakeholder_simple.py",
          "services/core/constitutional_ai/ac_service/models.py",
          "services/core/constitutional_ai/ac_service/test_stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/main.py",
          "services/core/constitutional_ai/ac_service/__init__.py",
          "services/core/constitutional_ai/ac_service/acge_single_model_service.py",
          "services/core/constitutional_ai/ac_service/tests/test_human_in_the_loop_sampling.py",
          "services/core/constitutional_ai/ac_service/tests/test_hitl_api_integration.py",
          "services/core/constitutional_ai/ac_service/tests/test_intelligent_conflict_resolution.py",
          "services/core/constitutional_ai/ac_service/app/schemas.py",
          "services/core/constitutional_ai/ac_service/app/main.py",
          "services/core/constitutional_ai/ac_service/app/cache_manager.py",
          "services/core/constitutional_ai/ac_service/app/crud.py",
          "services/core/constitutional_ai/ac_service/app/models.py",
          "services/core/constitutional_ai/ac_service/app/__init__.py",
          "services/core/constitutional_ai/ac_service/alembic/versions/005_add_qec_conflict_resolution_fields.py",
          "services/core/constitutional_ai/ac_service/app/integrations/polis_integration.py",
          "services/core/constitutional_ai/ac_service/app/middleware/enhanced_security.py",
          "services/core/constitutional_ai/ac_service/app/middleware/__init__.py",
          "services/core/constitutional_ai/ac_service/app/core/constitutional_council_scalability.py",
          "services/core/constitutional_ai/ac_service/app/core/auth.py",
          "services/core/constitutional_ai/ac_service/app/core/__init__.py",
          "services/core/constitutional_ai/ac_service/app/core/domain_context_manager.py",
          "services/core/constitutional_ai/ac_service/app/core/amendment_state_machine.py",
          "services/core/constitutional_ai/ac_service/app/core/cryptographic_signing.py",
          "services/core/constitutional_ai/ac_service/app/api/hitl_sampling.py",
          "services/core/constitutional_ai/ac_service/app/api/public_consultation.py",
          "services/core/constitutional_ai/ac_service/app/api/__init__.py",
          "services/core/constitutional_ai/ac_service/app/services/collective_constitutional_ai.py",
          "services/core/constitutional_ai/ac_service/app/services/human_escalation_system.py",
          "services/core/constitutional_ai/ac_service/app/services/constitutional_council_dashboard.py",
          "services/core/constitutional_ai/ac_service/app/services/public_consultation_service.py",
          "services/core/constitutional_ai/ac_service/app/services/conflict_resolution_orchestrator.py",
          "services/core/constitutional_ai/ac_service/app/services/constitutional_validation_service.py",
          "services/core/constitutional_ai/ac_service/app/services/enhanced_constitutional_reward.py",
          "services/core/constitutional_ai/ac_service/app/services/llm_as_judge_framework.py",
          "services/core/constitutional_ai/ac_service/app/services/intelligent_conflict_detector.py",
          "services/core/constitutional_ai/ac_service/app/services/conflict_audit_system.py",
          "services/core/constitutional_ai/ac_service/app/services/advanced_democratic_participation.py",
          "services/core/constitutional_ai/ac_service/app/services/qec_conflict_resolver.py",
          "services/core/constitutional_ai/ac_service/app/services/voting_mechanism.py",
          "services/core/constitutional_ai/ac_service/app/services/stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/app/services/automated_resolution_engine.py",
          "services/core/constitutional_ai/ac_service/app/services/hitl_cross_service_integration.py",
          "services/core/constitutional_ai/ac_service/app/services/voting_client.py",
          "services/core/constitutional_ai/ac_service/app/services/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/services/human_in_the_loop_sampler.py",
          "services/core/constitutional_ai/ac_service/app/workflows/workflow_manager.py",
          "services/core/constitutional_ai/ac_service/app/workflows/constitutional_council_graph.py",
          "services/core/constitutional_ai/ac_service/app/workflows/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/workflows/__init__.py",
          "services/core/constitutional_ai/ac_service/app/monitoring/scalability_metrics.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/collective_constitutional_ai.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/conflict_resolution.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/dashboard_websocket.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/__init__.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/democratic_governance.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/principles.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/wina_constitutional_updates.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/constitutional_council.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/workflows.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/fidelity_monitor.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/voting.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/stakeholder_engagement.py",
          "services/core/constitutional_ai/ac_service/app/api/v1/constitutional_validation.py"
        ]
      },
      {
        "name": "governance_synthesis",
        "path": "/home/dislove/ACGS-2/services/core/governance_synthesis",
        "python_files": 113,
        "files": [
          "services/core/governance_synthesis/__init__.py",
          "services/core/governance_synthesis/gs_service/models.py",
          "services/core/governance_synthesis/gs_service/main.py",
          "services/core/governance_synthesis/gs_service/start_minimal.py",
          "services/core/governance_synthesis/gs_service/__init__.py",
          "services/core/governance_synthesis/src/__init__.py",
          "services/core/governance_synthesis/gs_service/app/__init__.py",
          "services/core/governance_synthesis/gs_service/app/crud_gs.py",
          "services/core/governance_synthesis/gs_service/app/cache_manager.py",
          "services/core/governance_synthesis/gs_service/app/main.py",
          "services/core/governance_synthesis/gs_service/app/schemas.py",
          "services/core/governance_synthesis/gs_service/tests/test_gemini_validators.py",
          "services/core/governance_synthesis/gs_service/tests/test_wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/tests/test_wina_rego_integration.py",
          "services/core/governance_synthesis/gs_service/tests/test_evolutionary_tensor_integration.py",
          "services/core/governance_synthesis/gs_service/tests/test_policy_synthesis_enhancement.py",
          "services/core/governance_synthesis/gs_service/tests/test_groq_tensor_service.py",
          "services/core/governance_synthesis/gs_service/tests/test_router_optimization.py",
          "services/core/governance_synthesis/gs_service/app/validators/gemini_validators.py",
          "services/core/governance_synthesis/gs_service/app/validators/__init__.py",
          "services/core/governance_synthesis/gs_service/app/core/rule_generator.py",
          "services/core/governance_synthesis/gs_service/app/core/constitutional_prompting.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_reliability_framework.py",
          "services/core/governance_synthesis/gs_service/app/core/constitutional_council_scalability.py",
          "services/core/governance_synthesis/gs_service/app/core/sliding_window_ucb.py",
          "services/core/governance_synthesis/gs_service/app/core/distributed_policy_cache.py",
          "services/core/governance_synthesis/gs_service/app/core/datalog_templates.py",
          "services/core/governance_synthesis/gs_service/app/core/conservative_linucb.py",
          "services/core/governance_synthesis/gs_service/app/core/mab_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/contextual_analyzer.py",
          "services/core/governance_synthesis/gs_service/app/core/wina_llm_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/ab_testing_framework.py",
          "services/core/governance_synthesis/gs_service/app/core/__init__.py",
          "services/core/governance_synthesis/gs_service/app/core/auth.py",
          "services/core/governance_synthesis/gs_service/app/core/qec_enhanced_synthesizer.py",
          "services/core/governance_synthesis/gs_service/app/core/ollama_client.py",
          "services/core/governance_synthesis/gs_service/app/core/heterogeneous_validator.py",
          "services/core/governance_synthesis/gs_service/app/core/opa_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/mab_prompt_optimizer.py",
          "services/core/governance_synthesis/gs_service/app/core/wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_circuit_breaker.py",
          "services/core/governance_synthesis/gs_service/app/core/performance_optimizer.py",
          "services/core/governance_synthesis/gs_service/app/core/violation_config.py",
          "services/core/governance_synthesis/gs_service/app/core/llm_integration.py",
          "services/core/governance_synthesis/gs_service/app/core/phase_a3_multi_model_consensus.py",
          "services/core/governance_synthesis/gs_service/app/core/performance_validation.py",
          "services/core/governance_synthesis/gs_service/app/core/multi_model_coordinator.py",
          "services/core/governance_synthesis/gs_service/app/core/enhanced_constitutional_analyzer.py",
          "services/core/governance_synthesis/gs_service/app/core/nvidia_qwen_client.py",
          "services/core/governance_synthesis/gs_service/app/security/adversarial_defenses.py",
          "services/core/governance_synthesis/gs_service/app/services/performance_monitor.py",
          "services/core/governance_synthesis/gs_service/app/services/security_compliance.py",
          "services/core/governance_synthesis/gs_service/app/services/advanced_cache.py",
          "services/core/governance_synthesis/gs_service/app/services/integrity_client.py",
          "services/core/governance_synthesis/gs_service/app/services/groq_tensor_service.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_escalation_service.py",
          "services/core/governance_synthesis/gs_service/app/services/qec_error_correction_service.py",
          "services/core/governance_synthesis/gs_service/app/services/ac_client.py",
          "services/core/governance_synthesis/gs_service/app/services/policy_validator.py",
          "services/core/governance_synthesis/gs_service/app/services/monitoring_service.py",
          "services/core/governance_synthesis/gs_service/app/services/stakeholder_engagement.py",
          "services/core/governance_synthesis/gs_service/app/services/fairness_evaluation_framework.py",
          "services/core/governance_synthesis/gs_service/app/services/alphaevolve_bridge.py",
          "services/core/governance_synthesis/gs_service/app/services/enhanced_governance_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/services/enhanced_multi_model_validation.py",
          "services/core/governance_synthesis/gs_service/app/services/lipschitz_estimator.py",
          "services/core/governance_synthesis/gs_service/app/services/cache_manager.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_audit_service.py",
          "services/core/governance_synthesis/gs_service/app/services/fv_client.py",
          "services/core/governance_synthesis/gs_service/app/services/__init__.py",
          "services/core/governance_synthesis/gs_service/app/services/federated_learning_orchestrator.py",
          "services/core/governance_synthesis/gs_service/app/services/constitutional_reporting_service.py",
          "services/core/governance_synthesis/gs_service/app/services/violation_detection_service.py",
          "services/core/governance_synthesis/gs_service/app/models/mab_models.py",
          "services/core/governance_synthesis/gs_service/app/models/reliability_models.py",
          "services/core/governance_synthesis/gs_service/app/wina/gating.py",
          "services/core/governance_synthesis/gs_service/app/wina/models.py",
          "services/core/governance_synthesis/gs_service/app/wina/core.py",
          "services/core/governance_synthesis/gs_service/app/wina/svd_utils.py",
          "services/core/governance_synthesis/gs_service/app/wina/__init__.py",
          "services/core/governance_synthesis/gs_service/app/shared/metrics.py",
          "services/core/governance_synthesis/gs_service/app/api/__init__.py",
          "services/core/governance_synthesis/gs_service/app/middleware/__init__.py",
          "services/core/governance_synthesis/gs_service/app/middleware/enhanced_security.py",
          "services/core/governance_synthesis/gs_service/app/config/opa_config.py",
          "services/core/governance_synthesis/gs_service/app/workflows/structured_output_models.py",
          "services/core/governance_synthesis/gs_service/app/workflows/multi_model_manager.py",
          "services/core/governance_synthesis/gs_service/app/workflows/policy_synthesis_workflow.py",
          "services/core/governance_synthesis/gs_service/app/workflows/__init__.py",
          "services/core/governance_synthesis/gs_service/app/workflows/phase_a3_governance_orchestrator.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/synthesize.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/__init__.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/mab_optimization.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/qec_error_correction.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/constitutional_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/governance_workflows.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/fidelity_monitoring_websocket.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/wina_rego_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/phase2_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/enhanced_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/policy_management.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/violation_management.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/constitutional_reports.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/reliability_metrics.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/phase_a3_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/multi_model_synthesis.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/enhanced_multi_model.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/alphaevolve_integration.py",
          "services/core/governance_synthesis/gs_service/app/api/v1/performance_monitoring.py",
          "services/core/governance_synthesis/gs_service/tests/integration/test_opa_integration.py",
          "services/core/governance_synthesis/gs_service/tests/security/test_security_compliance.py",
          "services/core/governance_synthesis/gs_service/tests/performance/test_governance_synthesis_performance.py",
          "services/core/governance_synthesis/gs_service/tests/unit/services/test_policy_validator.py"
        ]
      }
    ],
    "missing_test_categories": [],
    "coverage_percentage": 26.923076923076923
  },
  "wina_analysis": {
    "wina_files": [
      "services/core/constitutional-ai/ac_service/app/api/v1/wina_constitutional_updates.py",
      "services/core/evolutionary-computation/tests/test_wina_integration.py",
      "services/core/evolutionary-computation/app/core/wina_oversight_coordinator.py",
      "services/core/evolutionary-computation/app/api/v1/advanced_wina_oversight.py",
      "services/core/evolutionary-computation/app/api/v1/wina_oversight.py",
      "services/core/governance-synthesis/gs_service/tests/test_wina_rego_synthesis.py",
      "services/core/governance-synthesis/gs_service/tests/test_wina_rego_integration.py",
      "services/core/governance-synthesis/gs_service/app/core/wina_llm_integration.py",
      "services/core/governance-synthesis/gs_service/app/core/wina_rego_synthesis.py",
      "services/core/governance-synthesis/gs_service/app/api/v1/wina_rego_synthesis.py",
      "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_optimizer.py",
      "services/core/policy-governance/pgc_service/tests/test_wina_enforcement_integration.py",
      "services/core/policy-governance/pgc_service/app/core/wina_enforcement_optimizer.py",
      "services/core/policy-governance/pgc_service/app/core/wina_policy_compiler.py",
      "services/shared/wina/test_wina_core.py",
      "services/shared/alembic/versions/006_add_wina_constitutional_updates.py"
    ],
    "optimization_files": [
      "services/shared/resource_optimization.py",
      "services/core/aici_integration/performance_optimization.py",
      "services/core/governance-synthesis/gs_service/tests/test_router_optimization.py",
      "services/core/governance-synthesis/gs_service/app/api/v1/mab_optimization.py",
      "services/core/acgs-pgp-v8/src/database/optimization.py",
      "services/shared/alembic/versions/006_add_mab_optimization_tables.py"
    ],
    "performance_files": [
      "services/shared/performance_monitoring.py",
      "services/shared/performance_optimizer.py",
      "services/shared/policy_synthesis_performance_optimizer.py",
      "services/shared/redis_performance_optimizer.py",
      "services/core/opa-policies/test_performance.py",
      "services/core/opa-policies/test_ci_performance.py",
      "services/core/acgs-pgp-v8/baseline_performance_measurement.py",
      "services/core/aici_integration/performance_optimization.py",
      "services/core/governance-workflows/app/core/performance_monitor.py",
      "services/core/evolutionary-computation/app/wina/performance_monitoring.py",
      "services/core/governance-synthesis/gs_service/app/core/performance_optimizer.py",
      "services/core/governance-synthesis/gs_service/app/core/performance_validation.py",
      "services/core/governance-synthesis/gs_service/app/services/performance_monitor.py",
      "services/core/governance-synthesis/gs_service/app/api/v1/performance_monitoring.py",
      "services/core/governance-synthesis/gs_service/tests/performance/test_governance_synthesis_performance.py",
      "services/core/dgm-service/dgm_service/database/performance_optimizer.py",
      "services/core/dgm-service/tests/performance/test_database_performance.py",
      "services/core/dgm-service/tests/performance/test_api_performance.py",
      "services/core/dgm-service/tests/performance/test_system_performance.py",
      "services/core/dgm-service/tests/performance/test_cache_performance.py",
      "services/core/dgm-service/tests/performance/run_performance_tests.py",
      "services/core/dgm-service/tests/unit/core/test_performance_monitor.py",
      "services/core/acgs-pgp-v8/tests/test_performance.py",
      "services/shared/enhancement_framework/performance_optimizer.py",
      "services/shared/service_mesh/performance_monitor.py",
      "services/shared/database/performance_optimizer.py",
      "services/shared/wina/performance_monitoring.py",
      "services/shared/wina/performance_api.py"
    ],
    "test_coverage": {
      "wina_tests": [
        "tests/integration/test_wina_rego_integration.py",
        "tests/integration/test_phase2_wina_integration.py",
        "tests/integration/test_wina_enforcement_integration.py",
        "tests/unit/test_wina_dynamic_gating.py",
        "tests/unit/test_wina_svd_integration.py",
        "tests/unit/test_wina_performance_monitoring.py",
        "tests/unit/test_wina_rego_synthesis.py",
        "tests/unit/test_wina_ec_oversight_integration.py",
        "tests/unit/test_wina_gating_integration.py",
        "tests/unit/test_wina_core.py",
        "tests/unit/test_wina_enforcement_optimizer.py",
        "tests/unit/test_wina_continuous_learning_integration.py",
        "tests/unit/test_wina_constitutional_updates.py",
        "tests/unit/test_wina_performance_integration.py"
      ],
      "performance_tests": [
        "tests/performance_benchmark.py",
        "tests/test_dgm_database_performance.py",
        "tests/unit/test_wina_performance_monitoring.py",
        "tests/unit/test_wina_performance_integration.py",
        "tests/validation/performance_benchmark_validation.py",
        "tests/performance/test_database_performance.py",
        "tests/performance/test_task8_performance_benchmarks.py",
        "tests/performance/api_performance_test.py",
        "tests/performance/test_cache_performance.py",
        "tests/performance/test_system_performance.py",
        "tests/performance/test_priority2_simple_performance.py",
        "tests/performance/test_governance_synthesis_performance.py",
        "tests/performance/test_simple_performance.py",
        "tests/performance/automated_performance_suite.py",
        "tests/performance/test_system_performance_runner.py",
        "tests/performance/test_policy_synthesis_performance.py",
        "tests/performance/test_performance.py",
        "tests/performance/test_performance_validation.py",
        "tests/performance/test_qec_performance_optimization.py",
        "tests/integration/legacy/test_auth_performance.py"
      ],
      "optimization_tests": [
        "tests/performance/test_qec_performance_optimization.py"
      ]
    }
  },
  "recommendations": [
    "CRITICAL: The following critical components lack test coverage:",
    "  - policy-engine (1 files)",
    "  - policy_governance (57 files)",
    "  - constitutional-ai (68 files)",
    "  - governance_workflows (6 files)",
    "  - policy-governance (57 files)",
    "  - constitutional_ai (68 files)",
    "  - governance_synthesis (113 files)",
    "HIGH: WINA test coverage is incomplete (14/16 files)",
    "MEDIUM: Overall test coverage is 26.9%, target is 80%",
    "MEDIUM: The following services need test coverage:",
    "  - self_evolving_ai",
    "  - constitutional-ai",
    "  - self-evolving-ai",
    "  - evolutionary-computation",
    "  - policy_governance",
    "  ... and 14 more"
  ],
  "summary": {
    "total_services": 26,
    "total_test_files": 246,
    "coverage_percentage": 26.923076923076923,
    "critical_gaps": 7,
    "wina_coverage": 87.5
  }
}