# ACGS-1 Service Port Configuration
# Centralized port management for all microservices

version: '1.0'
environment: 'production'

# Core Services (8000-8006)
core_services:
  auth_service:
    port: 8000
    description: 'Authentication and authorization service'
    health_endpoint: '/health'

  ac_service:
    port: 8001
    description: 'Constitutional AI and compliance service'
    health_endpoint: '/health'

  integrity_service:
    port: 8002
    description: 'Cryptographic integrity and verification service'
    health_endpoint: '/health'

  fv_service:
    port: 8003
    description: 'Formal verification service'
    health_endpoint: '/health'

  gs_service:
    port: 8004
    description: 'Governance synthesis service'
    health_endpoint: '/health'

  pgc_service:
    port: 8005
    description: 'Policy governance and compliance service'
    health_endpoint: '/health'

  ec_service:
    port: 8006
    description: 'Executive council and oversight service'
    health_endpoint: '/health'

# Platform Services (9000+)
platform_services:
  workflow_service:
    port: 9007
    description: 'Workflow orchestration service'
    health_endpoint: '/health'

  external_apis_service:
    port: 9010
    description: 'External APIs connector service'
    health_endpoint: '/health'

# Infrastructure Services
infrastructure:
  postgres:
    port: 5432
    description: 'PostgreSQL database'

  redis:
    port: 6379
    description: 'Redis cache and session store'

  prometheus:
    port: 9090
    description: 'Prometheus metrics collection'

  grafana:
    port: 3001
    description: 'Grafana monitoring dashboard'

# Service Discovery Configuration
service_discovery:
  enabled: true
  registry_type: 'consul' # consul | etcd | kubernetes
  health_check_interval: '10s'
  health_check_timeout: '5s'

# Load Balancing Configuration
load_balancing:
  algorithm: 'least_connections' # round_robin | least_connections | ip_hash
  health_check_enabled: true
  circuit_breaker_enabled: true
  circuit_breaker_threshold: 5
  circuit_breaker_timeout: '30s'

# Security Configuration
security:
  tls_enabled: true
  mutual_tls_enabled: false
  allowed_origins:
    - 'https://dashboard.acgs.local'
    - 'https://api.acgs.local'
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_size: 20
