# Prometheus configuration for DGM Service monitoring
# Focused on DGM-specific metrics collection and alerting

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'acgs-dgm'
    environment: 'production'
    service: 'dgm-service'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - dgm-alertmanager:9093

# Load alert rules
rule_files:
  - "alert_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'dgm-prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 15s

  # DGM Service main application
  - job_name: 'dgm-service'
    static_configs:
      - targets: ['dgm-service:8007']
    metrics_path: /metrics
    scrape_interval: 10s
    scrape_timeout: 8s
    honor_labels: true
    params:
      format: ['prometheus']
    metric_relabel_configs:
      # Add service label to all metrics
      - source_labels: [__name__]
        target_label: service
        replacement: 'dgm-service'
      # Relabel DGM-specific metrics
      - source_labels: [__name__]
        regex: 'dgm_.*'
        target_label: component
        replacement: 'dgm-core'

  # DGM Service health endpoint
  - job_name: 'dgm-service-health'
    static_configs:
      - targets: ['dgm-service:8007']
    metrics_path: /health/metrics
    scrape_interval: 5s
    scrape_timeout: 3s

  # Node Exporter for system metrics
  - job_name: 'dgm-node-exporter'
    static_configs:
      - targets: ['dgm-node-exporter:9100']
    scrape_interval: 15s
    scrape_timeout: 10s

  # cAdvisor for container metrics
  - job_name: 'dgm-cadvisor'
    static_configs:
      - targets: ['dgm-cadvisor:8080']
    scrape_interval: 15s
    scrape_timeout: 10s
    metric_relabel_configs:
      # Only collect metrics for DGM-related containers
      - source_labels: [container_label_com_docker_compose_service]
        regex: 'dgm-.*'
        action: keep

  # Redis metrics
  - job_name: 'dgm-redis'
    static_configs:
      - targets: ['dgm-redis-exporter:9121']
    scrape_interval: 15s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: service
        replacement: 'dgm-redis'

  # PostgreSQL metrics
  - job_name: 'dgm-postgres'
    static_configs:
      - targets: ['dgm-postgres-exporter:9187']
    scrape_interval: 15s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: service
        replacement: 'dgm-postgres'

  # Blackbox exporter for endpoint monitoring
  - job_name: 'dgm-blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://dgm-service:8007/health
        - http://dgm-service:8007/api/v1/health
        - http://dgm-service:8007/metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: dgm-blackbox-exporter:9115

  # Blackbox exporter for TCP monitoring
  - job_name: 'dgm-blackbox-tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - dgm-service:8007
        - dgm-postgres:5432
        - dgm-redis:6379
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: dgm-blackbox-exporter:9115

  # ACGS Core Services integration (if available)
  - job_name: 'acgs-auth-service'
    static_configs:
      - targets: ['auth-service:8000']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'acgs_auth_.*'
        action: keep

  - job_name: 'acgs-ac-service'
    static_configs:
      - targets: ['ac-service:8001']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'acgs_constitutional_.*'
        action: keep

  - job_name: 'acgs-gs-service'
    static_configs:
      - targets: ['gs-service:8004']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'acgs_governance_.*'
        action: keep

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "http://cortex:9009/api/prom/push"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention_time: 30d
    retention_size: 10GB
    wal_compression: true
