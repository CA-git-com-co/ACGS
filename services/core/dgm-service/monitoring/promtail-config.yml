# Promtail configuration for DGM Service log collection

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://dgm-loki:3100/loki/api/v1/push

scrape_configs:
  # DGM Service application logs
  - job_name: dgm-service
    static_configs:
      - targets:
          - localhost
        labels:
          job: dgm-service
          service: dgm-service
          environment: production
          __path__: /var/log/dgm-service/*.log
    pipeline_stages:
      # Parse JSON logs
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            request_id: request_id
            user_id: user_id
            event_type: event_type
            component: component
      
      # Extract timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      
      # Set log level
      - labels:
          level:
          service:
          event_type:
          component:
      
      # Add additional labels for DGM-specific events
      - match:
          selector: '{event_type="dgm_improvement"}'
          stages:
            - json:
                expressions:
                  improvement_id: improvement.improvement_id
                  improvement_event: improvement.event_type
            - labels:
                improvement_id:
                improvement_event:
      
      # Constitutional compliance events
      - match:
          selector: '{event_type="constitutional_compliance"}'
          stages:
            - json:
                expressions:
                  principle: constitutional.principle
                  compliance_score: constitutional.compliance_score
                  compliant: constitutional.compliant
            - labels:
                principle:
                compliant:
      
      # Performance events
      - match:
          selector: '{event_type="performance_metric"}'
          stages:
            - json:
                expressions:
                  metric_name: performance.metric_name
                  threshold_exceeded: performance.threshold_exceeded
            - labels:
                metric_name:
                threshold_exceeded:

  # Docker container logs
  - job_name: docker-dgm
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.service=dgm-service"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - "2006-01-02T15:04:05.000000000Z07:00"
            - "2006-01-02T15:04:05Z07:00"
      - labels:
          level:
          service:

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<process>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: "Jan 02 15:04:05"
      - labels:
          hostname:
          process:

  # DGM specific error logs
  - job_name: dgm-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: dgm-errors
          service: dgm-service
          log_type: error
          __path__: /var/log/dgm-service/error.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            error: error
            request_id: request_id
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          request_id:

  # DGM audit logs
  - job_name: dgm-audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: dgm-audit
          service: dgm-service
          log_type: audit
          __path__: /var/log/dgm-service/audit.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event_type: event_type
            severity: severity
            user_id: user_id
            resource_id: resource_id
            message: message
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          event_type:
          severity:
          user_id:

  # Performance logs
  - job_name: dgm-performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: dgm-performance
          service: dgm-service
          log_type: performance
          __path__: /var/log/dgm-service/performance.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            metric_name: performance.metric_name
            metric_value: performance.metric_value
            threshold: performance.threshold
            threshold_exceeded: performance.threshold_exceeded
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          metric_name:
          threshold_exceeded:

  # Constitutional compliance logs
  - job_name: dgm-constitutional
    static_configs:
      - targets:
          - localhost
        labels:
          job: dgm-constitutional
          service: dgm-service
          log_type: constitutional
          __path__: /var/log/dgm-service/constitutional.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            validation_id: constitutional.validation_id
            principle: constitutional.principle
            compliance_score: constitutional.compliance_score
            violations: constitutional.violations
            compliant: constitutional.compliant
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          principle:
          compliant:
          validation_id:
