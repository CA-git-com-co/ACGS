# Alertmanager configuration for DGM Service
# Handles routing, grouping, and notification of DGM-specific alerts

global:
  # Global SMTP configuration
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@acgs.ai'
  smtp_auth_username: 'alerts@acgs.ai'
  smtp_auth_password: '${SMTP_PASSWORD}'

  # Slack webhook URL for general notifications
  slack_api_url: '${SLACK_WEBHOOK_URL}'

# Templates for alert notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  group_by: ['alertname', 'service', 'component']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'dgm-default'

  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'dgm-critical'
      group_wait: 0s
      repeat_interval: 5m
      continue: true

    # Constitutional violations - special handling
    - match:
        component: constitutional
      receiver: 'dgm-constitutional'
      group_wait: 0s
      repeat_interval: 15m
      continue: true

    # Performance alerts
    - match:
        component: performance
      receiver: 'dgm-performance'
      group_interval: 5m
      repeat_interval: 30m

    # Security alerts
    - match:
        component: security
      receiver: 'dgm-security'
      group_wait: 5s
      repeat_interval: 15m

    # Database alerts
    - match:
        component: database
      receiver: 'dgm-database'
      group_interval: 2m
      repeat_interval: 20m

    # Model/AI alerts
    - match:
        component: models
      receiver: 'dgm-models'
      group_interval: 5m
      repeat_interval: 30m

    # Info level alerts - less frequent notifications
    - match:
        severity: info
      receiver: 'dgm-info'
      group_interval: 10m
      repeat_interval: 4h

# Inhibition rules to prevent alert spam
inhibit_rules:
  # If service is down, inhibit all other alerts for that service
  - source_match:
      alertname: DGMServiceDown
    target_match:
      service: dgm-service
    equal: ['service']

  # If there are constitutional violations, inhibit low compliance score alerts
  - source_match:
      alertname: DGMConstitutionalViolation
    target_match:
      alertname: DGMLowComplianceScore
    equal: ['service']

  # If database is slow, inhibit high response time alerts
  - source_match:
      alertname: DGMDatabaseSlowQueries
    target_match:
      alertname: DGMHighResponseTime
    equal: ['service']

# Receiver configurations
receivers:
  # Default receiver for general DGM alerts
  - name: 'dgm-default'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-alerts'
        title: 'DGM Service Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Service:* {{ .Labels.service }}
          *Component:* {{ .Labels.component }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

    email_configs:
      - to: 'dgm-team@acgs.ai'
        subject: 'DGM Service Alert: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}

          {{ end }}

  # Critical alerts - immediate escalation
  - name: 'dgm-critical'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-critical'
        title: 'üö® CRITICAL: DGM Service Alert'
        text: |
          <!channel>
          {{ range .Alerts }}
          *CRITICAL ALERT:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Component:* {{ .Labels.component }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

    email_configs:
      - to: 'dgm-oncall@acgs.ai,sre-team@acgs.ai'
        subject: 'üö® CRITICAL: DGM Service Alert - {{ .GroupLabels.alertname }}'
        body: |
          CRITICAL ALERT DETECTED

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}

          {{ end }}

    # PagerDuty integration for critical alerts
    pagerduty_configs:
      - routing_key: '${PAGERDUTY_ROUTING_KEY}'
        description: 'DGM Service Critical Alert: {{ .GroupLabels.alertname }}'
        details:
          summary: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
          component: '{{ .GroupLabels.component }}'
          service: '{{ .GroupLabels.service }}'

  # Constitutional compliance alerts - special handling
  - name: 'dgm-constitutional'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#constitutional-compliance'
        title: '‚öñÔ∏è Constitutional Compliance Alert'
        text: |
          <!here>
          {{ range .Alerts }}
          *Constitutional Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Principle:* {{ .Labels.principle }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

    email_configs:
      - to: 'constitutional-team@acgs.ai,compliance@acgs.ai'
        subject: '‚öñÔ∏è Constitutional Compliance Alert - {{ .GroupLabels.alertname }}'
        body: |
          Constitutional compliance issue detected in DGM Service.

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Principle: {{ .Labels.principle }}
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}

          {{ end }}

  # Performance alerts
  - name: 'dgm-performance'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-performance'
        title: 'üìä DGM Performance Alert'
        text: |
          {{ range .Alerts }}
          *Performance Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

  # Security alerts
  - name: 'dgm-security'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-security'
        title: 'üîí DGM Security Alert'
        text: |
          {{ range .Alerts }}
          *Security Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

    email_configs:
      - to: 'security-team@acgs.ai'
        subject: 'üîí DGM Security Alert - {{ .GroupLabels.alertname }}'

  # Database alerts
  - name: 'dgm-database'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-database'
        title: 'üóÑÔ∏è DGM Database Alert'
        text: |
          {{ range .Alerts }}
          *Database Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

  # Model/AI alerts
  - name: 'dgm-models'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-models'
        title: 'ü§ñ DGM Model Alert'
        text: |
          {{ range .Alerts }}
          *Model Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Provider:* {{ .Labels.provider }}
          *Model:* {{ .Labels.model }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true

  # Info level alerts
  - name: 'dgm-info'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#dgm-info'
        title: '‚ÑπÔ∏è DGM Info Alert'
        text: |
          {{ range .Alerts }}
          *Info:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
