# Nginx Configuration for Mock Auth Service
# Constitutional Hash: cdd01ef066bc6cf2

server {
    listen 80;
    server_name localhost;

    # Health check endpoint
    location /health {
        add_header Content-Type application/json;
        add_header X-Constitutional-Hash cdd01ef066bc6cf2;
        return 200 '{"status":"healthy","service":"acgs-auth-service-mock","constitutional_hash":"cdd01ef066bc6cf2","timestamp":"2024-01-15T10:30:00Z"}';
    }

    # JWT validation endpoint (mock)
    location /validate {
        add_header Content-Type application/json;
        add_header X-Constitutional-Hash cdd01ef066bc6cf2;
        return 200 '{"valid":true,"user_id":"test_user","constitutional_hash":"cdd01ef066bc6cf2"}';
    }

    # Token generation endpoint (mock)
    location /token {
        add_header Content-Type application/json;
        add_header X-Constitutional-Hash cdd01ef066bc6cf2;
        return 200 '{"access_token":"mock_jwt_token","token_type":"bearer","expires_in":3600,"constitutional_hash":"cdd01ef066bc6cf2"}';
    }

    # User info endpoint (mock)
    location /user {
        add_header Content-Type application/json;
        add_header X-Constitutional-Hash cdd01ef066bc6cf2;
        return 200 '{"user_id":"test_user","username":"test","email":"test@acgs.ai","constitutional_hash":"cdd01ef066bc6cf2"}';
    }

    # Default response for other endpoints
    location / {
        add_header Content-Type application/json;
        add_header X-Constitutional-Hash cdd01ef066bc6cf2;
        return 404 '{"error":"endpoint_not_found","constitutional_hash":"cdd01ef066bc6cf2"}';
    }
}
