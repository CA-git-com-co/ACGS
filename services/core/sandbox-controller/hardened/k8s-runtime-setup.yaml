# Kubernetes Runtime Classes and Security Setup for Hardened Sandbox Controller
# This file sets up gVisor and Firecracker runtime classes with enhanced security

apiVersion: v1
kind: Namespace
metadata:
  name: acgs-hardened-sandbox
  labels:
    constitutional-hash: cdd01ef066bc6cf2
    security-level: hardened

---
# gVisor Runtime Class
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: gvisor
  labels:
    security-level: high
    constitutional-hash: cdd01ef066bc6cf2
handler: runsc
scheduling:
  nodeSelector:
    sandbox: gvisor
    kernel-isolation: enabled
  tolerations:
  - key: sandbox
    operator: Equal
    value: gvisor
    effect: NoSchedule

---
# Firecracker (Kata) Runtime Class  
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: kata-firecracker
  labels:
    security-level: maximum
    constitutional-hash: cdd01ef066bc6cf2
handler: kata
scheduling:
  nodeSelector:
    sandbox: kata
    microvm-isolation: enabled
  tolerations:
  - key: sandbox
    operator: Equal
    value: kata
    effect: NoSchedule

---
# Enhanced Seccomp Profile
apiVersion: v1
kind: ConfigMap
metadata:
  name: hardened-seccomp-profile
  namespace: acgs-hardened-sandbox
  labels:
    constitutional-hash: cdd01ef066bc6cf2
data:
  hardened-seccomp-profile.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "architectures": ["SCMP_ARCH_X86_64", "SCMP_ARCH_AARCH64"],
      "syscalls": [
        {
          "names": [
            "read", "write", "close", "fstat", "lseek", "mmap", "mprotect",
            "munmap", "brk", "rt_sigaction", "rt_sigprocmask", "rt_sigreturn",
            "ioctl", "access", "pipe", "select", "poll", "epoll_create",
            "epoll_ctl", "epoll_wait", "nanosleep", "getrlimit", "getrusage",
            "times", "futex", "exit_group", "exit", "wait4", "kill", "uname",
            "fcntl", "getdents", "getcwd", "chdir", "rename", "mkdir", "rmdir",
            "creat", "link", "unlink", "symlink", "readlink", "chmod", "fchmod",
            "chown", "fchown", "lchown", "umask", "gettimeofday", "getpid",
            "getppid", "getuid", "getgid", "geteuid", "getegid", "setpgid",
            "getpgrp", "setsid", "setreuid", "setregid", "getgroups", "setgroups",
            "setresuid", "getresuid", "setresgid", "getresgid", "getpgid",
            "setfsuid", "setfsgid", "getsid", "capget", "capset", "rt_sigpending",
            "rt_sigtimedwait", "rt_sigqueueinfo", "rt_sigsuspend", "sigaltstack"
          ],
          "action": "SCMP_ACT_ALLOW"
        },
        {
          "names": [
            "ptrace", "mount", "umount", "umount2", "pivot_root", "chroot",
            "setns", "unshare", "clone", "fork", "vfork", "execve", "execveat",
            "kexec_load", "kexec_file_load", "reboot", "init_module", "finit_module",
            "delete_module", "quotactl", "syslog", "swapon", "swapoff",
            "acct", "settimeofday", "adjtimex", "clock_adjtime", "lookup_dcookie",
            "perf_event_open", "fanotify_init", "name_to_handle_at", "open_by_handle_at"
          ],
          "action": "SCMP_ACT_KILL"
        }
      ]
    }

---
# Network Policy for Sandbox Isolation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hardened-sandbox-isolation
  namespace: acgs-hardened-sandbox
  labels:
    constitutional-hash: cdd01ef066bc6cf2
spec:
  podSelector:
    matchLabels:
      app: hardened-sandbox
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: hardened-sandbox-controller
  egress:
  - to: []  # No external egress allowed
    ports:
    - protocol: UDP
      port: 53  # DNS only

---
# Pod Security Policy for Hardened Sandboxes
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: hardened-sandbox-psp
  labels:
    constitutional-hash: cdd01ef066bc6cf2
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'configMap'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  readOnlyRootFilesystem: true
  seccomp:
    rule: 'MustRunAs'
    localhostProfiles:
      - 'hardened-seccomp-profile.json'

---
# RBAC for Hardened Sandbox Controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hardened-sandbox-controller
  namespace: acgs-hardened-sandbox
  labels:
    constitutional-hash: cdd01ef066bc6cf2

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hardened-sandbox-controller
  labels:
    constitutional-hash: cdd01ef066bc6cf2
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
- apiGroups: ["node.k8s.io"]
  resources: ["runtimeclasses"]
  verbs: ["get", "list", "create"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hardened-sandbox-controller
  labels:
    constitutional-hash: cdd01ef066bc6cf2
subjects:
- kind: ServiceAccount
  name: hardened-sandbox-controller
  namespace: acgs-hardened-sandbox
roleRef:
  kind: ClusterRole
  name: hardened-sandbox-controller
  apiGroup: rbac.authorization.k8s.io

---
# Hardened Sandbox Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hardened-sandbox-controller
  namespace: acgs-hardened-sandbox
  labels:
    app: hardened-sandbox-controller
    constitutional-hash: cdd01ef066bc6cf2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hardened-sandbox-controller
  template:
    metadata:
      labels:
        app: hardened-sandbox-controller
        constitutional-hash: cdd01ef066bc6cf2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: hardened-sandbox-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: controller
        image: acgs-hardened-sandbox-controller:latest
        ports:
        - containerPort: 8002
          name: http
        env:
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: POLICY_ENGINE_URL
          value: "http://policy-engine:8001"
        - name: AUDIT_ENGINE_URL
          value: "http://audit-engine:8003"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: seccomp-profiles
          mountPath: /var/lib/kubelet/seccomp/profiles
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: seccomp-profiles
        configMap:
          name: hardened-seccomp-profile

---
# Service for Hardened Sandbox Controller
apiVersion: v1
kind: Service
metadata:
  name: hardened-sandbox-controller
  namespace: acgs-hardened-sandbox
  labels:
    app: hardened-sandbox-controller
    constitutional-hash: cdd01ef066bc6cf2
spec:
  selector:
    app: hardened-sandbox-controller
  ports:
  - name: http
    port: 8002
    targetPort: 8002
  type: ClusterIP

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hardened-sandbox-controller
  namespace: acgs-hardened-sandbox
  labels:
    app: hardened-sandbox-controller
    constitutional-hash: cdd01ef066bc6cf2
spec:
  selector:
    matchLabels:
      app: hardened-sandbox-controller
  endpoints:
  - port: http
    path: /metrics
    interval: 30s