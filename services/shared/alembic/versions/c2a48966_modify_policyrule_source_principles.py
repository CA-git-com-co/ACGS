"""Modify PolicyRule to use source_principle_ids JSON array.

Revision ID: c2a48966
Revises: 2b1a73c9f5d4
Create Date: 2025-05-23 16:09:14.441231

"""

import contextlib
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# Constitutional compliance hash for ACGS
CONSTITUTIONAL_HASH = "cdd01ef066bc6cf2"


# revision identifiers, used by Alembic.
revision: str = "c2a48966"
down_revision: str | None = "004_add_missing_user_columns"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("policy_rules", schema=None) as batch_op:
        batch_op.add_column(sa.Column("source_principle_ids", sa.JSON(), nullable=True))
        # Attempt to drop FK constraint by convention if one exists.
        # The name 'policy_rules_principle_id_fkey' is a common convention.
        # If this fails on some DBs because the name is different, it might need manual adjustment.
        # However, for SQLite, dropping the column often handles the FK.
        with contextlib.suppress(Exception):
            batch_op.drop_constraint(
                "policy_rules_principle_id_fkey", type_="foreignkey"
            )
        batch_op.drop_column("principle_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("policy_rules", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("principle_id", sa.INTEGER(), autoincrement=False, nullable=True)
        )
        # Attempt to re-create FK constraint by convention.
        # Adjust 'principles.id' if the referenced table/column is different.
        with contextlib.suppress(Exception):
            batch_op.create_foreign_key(
                "policy_rules_principle_id_fkey", "principles", ["principle_id"], ["id"]
            )
        batch_op.drop_column("source_principle_ids")
    # ### end Alembic commands ###
