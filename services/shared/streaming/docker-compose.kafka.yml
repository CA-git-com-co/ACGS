version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: acgs-zookeeper
    ports:
    - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
    - zookeeper-data:/var/lib/zookeeper/data
    - zookeeper-logs:/var/lib/zookeeper/log
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - bash
      - -c
      - echo 'ruok' | nc localhost 2181
      interval: 30s
      timeout: 10s
      retries: 5
  kafka-1:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka-1
    container_name: acgs-kafka-1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - 9092:9092
    - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_LOG_COMPRESSION_TYPE: gzip
    volumes:
    - kafka-1-data:/var/lib/kafka/data
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - kafka-broker-api-versions
      - --bootstrap-server
      - localhost:9092
      interval: 30s
      timeout: 10s
      retries: 5
  kafka-2:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka-2
    container_name: acgs-kafka-2
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - 9093:9093
    - 29093:29093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_LOG_COMPRESSION_TYPE: gzip
    volumes:
    - kafka-2-data:/var/lib/kafka/data
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - kafka-broker-api-versions
      - --bootstrap-server
      - localhost:9093
      interval: 30s
      timeout: 10s
      retries: 5
  kafka-3:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka-3
    container_name: acgs-kafka-3
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - 9094:9094
    - 29094:29094
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_LOG_COMPRESSION_TYPE: gzip
    volumes:
    - kafka-3-data:/var/lib/kafka/data
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - kafka-broker-api-versions
      - --bootstrap-server
      - localhost:9094
      interval: 30s
      timeout: 10s
      retries: 5
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: acgs-schema-registry
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    ports:
    - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 3
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8081/subjects
      interval: 30s
      timeout: 10s
      retries: 5
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.0
    hostname: kafka-connect
    container_name: acgs-kafka-connect
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
    - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: acgs-kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: acgs-kafka-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: acgs-kafka-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: acgs-kafka-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    volumes:
    - kafka-connect-data:/tmp/quickstart
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8083/connectors
      interval: 30s
      timeout: 10s
      retries: 5
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    container_name: acgs-kafka-ui
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    ports:
    - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: acgs-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:29092,kafka-2:29093,kafka-3:29094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: acgs-kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
    - acgs-streaming
    restart: unless-stopped
  nats:
    image: nats:2.10-alpine
    hostname: nats
    container_name: acgs-nats
    ports:
    - 4222:4222
    - 8222:8222
    - 6222:6222
    command:
    - --cluster_name
    - acgs-nats-cluster
    - --cluster
    - nats://0.0.0.0:6222
    - --routes
    - nats://ruser:T0pS3cr3t@nats:6222
    - --http_port
    - '8222'
    - --js
    - --sd
    - /data
    volumes:
    - nats-data:/data
    networks:
    - acgs-streaming
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:8222/varz
      interval: 30s
      timeout: 10s
      retries: 5
  jmx-kafka-1:
    image: sscaling/jmx-prometheus-exporter:0.17.2
    hostname: jmx-kafka-1
    container_name: acgs-jmx-kafka-1
    depends_on:
      kafka-1:
        condition: service_healthy
    ports:
    - 5556:5556
    environment:
      CONFIG_YML: '---

        startDelaySeconds: 0

        hostPort: kafka-1:9999

        username:

        password:

        jmxUrl: service:jmx:rmi:///jndi/rmi://kafka-1:9999/jmxrmi

        ssl: false

        lowercaseOutputName: false

        lowercaseOutputLabelNames: false

        whitelistObjectNames: ["java.lang:type=*","kafka.server:type=*","kafka.network:type=*","kafka.log:type=*"]

        '
    volumes:
    - ${ACGS_ROOT}/services/shared/streaming/monitoring/jmx-kafka-config.yml:/opt/jmx_prometheus/config.yml:ro
    networks:
    - acgs-streaming
    restart: unless-stopped
  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: acgs-kafka-init
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    command: "bash -c \"\n  echo 'Creating Kafka topics...'\n\n  # Constitutional\
      \ AI topics\n  kafka-topics --create --topic constitutional-decisions --bootstrap-server\
      \ kafka-1:29092 --partitions 12 --replication-factor 3 --config retention.ms=604800000\
      \ --config compression.type=gzip --config min.insync.replicas=2\n\n  # Policy\
      \ governance topics\n  kafka-topics --create --topic policy-synthesis --bootstrap-server\
      \ kafka-1:29092 --partitions 8 --replication-factor 3 --config retention.ms=259200000\
      \ --config compression.type=gzip --config min.insync.replicas=2\n\n  # Governance\
      \ workflow topics\n  kafka-topics --create --topic governance-actions --bootstrap-server\
      \ kafka-1:29092 --partitions 6 --replication-factor 3 --config retention.ms=86400000\
      \ --config compression.type=gzip --config min.insync.replicas=2\n\n  # Audit\
      \ and compliance topics\n  kafka-topics --create --topic audit-events --bootstrap-server\
      \ kafka-1:29092 --partitions 6 --replication-factor 3 --config retention.ms=2592000000\
      \ --config compression.type=gzip --config min.insync.replicas=2\n  kafka-topics\
      \ --create --topic compliance-events --bootstrap-server kafka-1:29092 --partitions\
      \ 4 --replication-factor 3 --config retention.ms=7776000000 --config compression.type=gzip\
      \ --config min.insync.replicas=2\n\n  # Monitoring topics\n  kafka-topics --create\
      \ --topic metrics --bootstrap-server kafka-1:29092 --partitions 4 --replication-factor\
      \ 3 --config retention.ms=86400000 --config compression.type=gzip --config min.insync.replicas=2\n\
      \  kafka-topics --create --topic alerts --bootstrap-server kafka-1:29092 --partitions\
      \ 3 --replication-factor 3 --config retention.ms=259200000 --config compression.type=gzip\
      \ --config min.insync.replicas=2\n\n  # User and system topics\n  kafka-topics\
      \ --create --topic user-actions --bootstrap-server kafka-1:29092 --partitions\
      \ 6 --replication-factor 3 --config retention.ms=604800000 --config compression.type=gzip\
      \ --config min.insync.replicas=2\n  kafka-topics --create --topic system-events\
      \ --bootstrap-server kafka-1:29092 --partitions 4 --replication-factor 3 --config\
      \ retention.ms=172800000 --config compression.type=gzip --config min.insync.replicas=2\n\
      \n  # Dead letter queue\n  kafka-topics --create --topic dead-letter-queue --bootstrap-server\
      \ kafka-1:29092 --partitions 3 --replication-factor 3 --config retention.ms=1209600000\
      \ --config compression.type=gzip --config min.insync.replicas=2\n\n  # Kafka\
      \ Connect internal topics\n  kafka-topics --create --topic acgs-kafka-connect-configs\
      \ --bootstrap-server kafka-1:29092 --partitions 1 --replication-factor 3 --config\
      \ cleanup.policy=compact --config min.insync.replicas=2\n  kafka-topics --create\
      \ --topic acgs-kafka-connect-offsets --bootstrap-server kafka-1:29092 --partitions\
      \ 25 --replication-factor 3 --config cleanup.policy=compact --config min.insync.replicas=2\n\
      \  kafka-topics --create --topic acgs-kafka-connect-status --bootstrap-server\
      \ kafka-1:29092 --partitions 5 --replication-factor 3 --config cleanup.policy=compact\
      \ --config min.insync.replicas=2\n\n  echo 'Kafka topics created successfully!'\n\
      \  kafka-topics --list --bootstrap-server kafka-1:29092\n\"\n"
    networks:
    - acgs-streaming
volumes:
  zookeeper-data:
    driver: local
  zookeeper-logs:
    driver: local
  kafka-1-data:
    driver: local
  kafka-2-data:
    driver: local
  kafka-3-data:
    driver: local
  kafka-connect-data:
    driver: local
  nats-data:
    driver: local
networks:
  acgs-streaming:
    driver: bridge
    name: acgs-streaming-network
# constitutional_hash: cdd01ef066bc6cf2
