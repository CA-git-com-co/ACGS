{
  "timestamp": "2025-06-05T14:50:10.237448",
  "summary": {
    "total_modules": 123,
    "overall_coverage": 22.07884963336825,
    "target_coverage": 95.0,
    "modules_meeting_target": 16,
    "coverage_gaps": 107
  },
  "coverage_gaps": [
    {
      "module": "backend.ac_service.app.core.constitutional_council_scalability",
      "current_coverage": 4.827586206896552,
      "target_coverage": 95.0,
      "gap_percentage": 90.17241379310344,
      "missing_lines_count": 276,
      "missing_lines": [
        25,
        27,
        29,
        32,
        34,
        35,
        36,
        37,
        40,
        42
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.ac_service.app.core.domain_context_manager",
      "current_coverage": 3.3175355450236967,
      "target_coverage": 95.0,
      "gap_percentage": 91.6824644549763,
      "missing_lines_count": 204,
      "missing_lines": [
        16,
        19,
        21,
        22,
        23,
        26,
        27,
        29,
        30,
        31
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.ac_service.app.services.qec_conflict_resolver",
      "current_coverage": 5.217391304347826,
      "target_coverage": 95.0,
      "gap_percentage": 89.78260869565217,
      "missing_lines_count": 109,
      "missing_lines": [
        14,
        17,
        18,
        26,
        27,
        28,
        29,
        31,
        32,
        34
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.auth_service.app.core.security",
      "current_coverage": 17.0,
      "target_coverage": 95.0,
      "gap_percentage": 78.0,
      "missing_lines_count": 83,
      "missing_lines": [
        21,
        26,
        28,
        31,
        32,
        35,
        36,
        37,
        38,
        39
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.core.adversarial_robustness_tester",
      "current_coverage": 36.734693877551024,
      "target_coverage": 95.0,
      "gap_percentage": 58.265306122448976,
      "missing_lines_count": 155,
      "missing_lines": [
        59,
        60,
        96,
        104,
        106,
        108,
        109,
        112,
        113,
        116
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.core.bias_detector",
      "current_coverage": 14.335664335664337,
      "target_coverage": 95.0,
      "gap_percentage": 80.66433566433567,
      "missing_lines_count": 245,
      "missing_lines": [
        21,
        23,
        24,
        25,
        53,
        55,
        57,
        60,
        61,
        62
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.core.cross_domain_testing_engine",
      "current_coverage": 26.94063926940639,
      "target_coverage": 95.0,
      "gap_percentage": 68.05936073059361,
      "missing_lines_count": 160,
      "missing_lines": [
        51,
        52,
        65,
        73,
        81,
        94,
        101,
        104,
        105,
        106
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.core.enhanced_multi_model_validation",
      "current_coverage": 26.6304347826087,
      "target_coverage": 95.0,
      "gap_percentage": 68.3695652173913,
      "missing_lines_count": 270,
      "missing_lines": [
        100,
        101,
        102,
        103,
        107,
        162,
        163,
        166,
        167,
        168
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.core.smt_solver_integration",
      "current_coverage": 14.213197969543149,
      "target_coverage": 95.0,
      "gap_percentage": 80.78680203045685,
      "missing_lines_count": 169,
      "missing_lines": [
        26,
        27,
        30,
        31,
        34,
        37,
        40,
        41,
        45,
        46
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.core.constitutional_prompting",
      "current_coverage": 18.68686868686869,
      "target_coverage": 95.0,
      "gap_percentage": 76.31313131313131,
      "missing_lines_count": 161,
      "missing_lines": [
        21,
        47,
        48,
        49,
        93,
        96,
        98,
        108,
        109,
        111
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.core.llm_integration",
      "current_coverage": 12.350597609561753,
      "target_coverage": 95.0,
      "gap_percentage": 82.64940239043824,
      "missing_lines_count": 220,
      "missing_lines": [
        19,
        24,
        25,
        26,
        27,
        28,
        33,
        37,
        38,
        39
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.core.llm_reliability_framework",
      "current_coverage": 20.646067415730336,
      "target_coverage": 95.0,
      "gap_percentage": 74.35393258426967,
      "missing_lines_count": 1130,
      "missing_lines": [
        32,
        35,
        36,
        37,
        38,
        39,
        40,
        49,
        50,
        243
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.core.wina_llm_integration",
      "current_coverage": 3.3707865168539324,
      "target_coverage": 95.0,
      "gap_percentage": 91.62921348314607,
      "missing_lines_count": 258,
      "missing_lines": [
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        43,
        44
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.main",
      "current_coverage": 4.854368932038835,
      "target_coverage": 95.0,
      "gap_percentage": 90.14563106796116,
      "missing_lines_count": 98,
      "missing_lines": [
        8,
        9,
        12,
        13,
        14,
        17,
        18,
        21,
        22,
        23
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first"
      ]
    },
    {
      "module": "backend.gs_service.app.services.ac_client",
      "current_coverage": 17.355371900826448,
      "target_coverage": 95.0,
      "gap_percentage": 77.64462809917356,
      "missing_lines_count": 100,
      "missing_lines": [
        7,
        9,
        26,
        27,
        29,
        31,
        32,
        33,
        34,
        35
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.services.lipschitz_estimator",
      "current_coverage": 33.771929824561404,
      "target_coverage": 95.0,
      "gap_percentage": 61.228070175438596,
      "missing_lines_count": 151,
      "missing_lines": [
        36,
        89,
        90,
        91,
        93,
        94,
        95,
        96,
        98,
        99
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.integrity_service.app.models",
      "current_coverage": 5.555555555555555,
      "target_coverage": 95.0,
      "gap_percentage": 89.44444444444444,
      "missing_lines_count": 51,
      "missing_lines": [
        4,
        5,
        13,
        15,
        17,
        18,
        19,
        20,
        21,
        22
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first"
      ]
    },
    {
      "module": "backend.integrity_service.app.services.crypto_service",
      "current_coverage": 29.411764705882355,
      "target_coverage": 95.0,
      "gap_percentage": 65.58823529411765,
      "missing_lines_count": 84,
      "missing_lines": [
        22,
        23,
        24,
        48,
        49,
        51,
        52,
        53,
        66,
        67
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.integrity_service.app.services.key_management",
      "current_coverage": 8.403361344537815,
      "target_coverage": 95.0,
      "gap_percentage": 86.59663865546219,
      "missing_lines_count": 109,
      "missing_lines": [
        16,
        18,
        21,
        26,
        27,
        28,
        29,
        31,
        39,
        40
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.integrity_service.app.services.research_data_pipeline",
      "current_coverage": 6.132075471698113,
      "target_coverage": 95.0,
      "gap_percentage": 88.86792452830188,
      "missing_lines_count": 199,
      "missing_lines": [
        24,
        26,
        29,
        31,
        32,
        33,
        34,
        37,
        38,
        40
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.pgc_service.app.core.manifest_manager",
      "current_coverage": 33.663366336633665,
      "target_coverage": 95.0,
      "gap_percentage": 61.336633663366335,
      "missing_lines_count": 134,
      "missing_lines": [
        37,
        38,
        39,
        54,
        58,
        62,
        66,
        70,
        89,
        101
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.pgc_service.app.core.policy_format_router",
      "current_coverage": 26.34146341463415,
      "target_coverage": 95.0,
      "gap_percentage": 68.65853658536585,
      "missing_lines_count": 151,
      "missing_lines": [
        62,
        63,
        67,
        68,
        74,
        75,
        76,
        78,
        79,
        80
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.pgc_service.app.core.proactive_fairness_generator",
      "current_coverage": 31.40794223826715,
      "target_coverage": 95.0,
      "gap_percentage": 63.592057761732846,
      "missing_lines_count": 190,
      "missing_lines": [
        87,
        88,
        89,
        93,
        111,
        112,
        115,
        116,
        117,
        120
      ],
      "priority": 18,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.core.proof_obligations",
      "current_coverage": 15.151515151515152,
      "target_coverage": 95.0,
      "gap_percentage": 79.84848484848484,
      "missing_lines_count": 28,
      "missing_lines": [
        10,
        11,
        12,
        15,
        19,
        20,
        29,
        30,
        31,
        40
      ],
      "priority": 17,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.wina.core",
      "current_coverage": 26.47058823529412,
      "target_coverage": 95.0,
      "gap_percentage": 68.52941176470588,
      "missing_lines_count": 25,
      "missing_lines": [
        25,
        27,
        28,
        31,
        32,
        34,
        35,
        38,
        39,
        41
      ],
      "priority": 17,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.gs_service.app.wina.svd_utils",
      "current_coverage": 12.76595744680851,
      "target_coverage": 95.0,
      "gap_percentage": 82.23404255319149,
      "missing_lines_count": 41,
      "missing_lines": [
        17,
        18,
        19,
        20,
        22,
        23,
        39,
        40,
        41,
        42
      ],
      "priority": 17,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.ac_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.ac_service.app.core.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.auth_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.auth_service.app.core.password",
      "current_coverage": 35.0,
      "target_coverage": 95.0,
      "gap_percentage": 60.0,
      "missing_lines_count": 13,
      "missing_lines": [
        16,
        18,
        19,
        21,
        22,
        25,
        26,
        28,
        29,
        30
      ],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.fv_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.fv_service.app.core.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.gs_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.gs_service.app.core.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.gs_service.app.services.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.gs_service.app.wina.gating",
      "current_coverage": 20.0,
      "target_coverage": 95.0,
      "gap_percentage": 75.0,
      "missing_lines_count": 12,
      "missing_lines": [
        20,
        21,
        23,
        24,
        25,
        28,
        29,
        30,
        31,
        32
      ],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.integrity_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.integrity_service.app.services.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.pgc_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.pgc_service.app.core.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 15,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.constitutional_principle",
      "current_coverage": 15.18987341772152,
      "target_coverage": 95.0,
      "gap_percentage": 79.81012658227849,
      "missing_lines_count": 67,
      "missing_lines": [
        81,
        82,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.operational_rule",
      "current_coverage": 20.27027027027027,
      "target_coverage": 95.0,
      "gap_percentage": 74.72972972972973,
      "missing_lines_count": 59,
      "missing_lines": [
        51,
        52,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.crypto_service",
      "current_coverage": 12.925170068027212,
      "target_coverage": 95.0,
      "gap_percentage": 82.07482993197279,
      "missing_lines_count": 128,
      "missing_lines": [
        26,
        27,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.llm_service",
      "current_coverage": 13.865546218487395,
      "target_coverage": 95.0,
      "gap_percentage": 81.1344537815126,
      "missing_lines_count": 205,
      "missing_lines": [
        26,
        27,
        66,
        93,
        100,
        101,
        103,
        104,
        105,
        107
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.policy_synthesizer",
      "current_coverage": 17.307692307692307,
      "target_coverage": 95.0,
      "gap_percentage": 77.6923076923077,
      "missing_lines_count": 129,
      "missing_lines": [
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        62
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.constitutional_distance_calculator",
      "current_coverage": 28.865979381443296,
      "target_coverage": 95.0,
      "gap_percentage": 66.1340206185567,
      "missing_lines_count": 69,
      "missing_lines": [
        50,
        51,
        58,
        59,
        62,
        64,
        76,
        78,
        80,
        81
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.constitutional_fidelity_monitor",
      "current_coverage": 32.76595744680851,
      "target_coverage": 95.0,
      "gap_percentage": 62.23404255319149,
      "missing_lines_count": 158,
      "missing_lines": [
        94,
        95,
        98,
        108,
        109,
        110,
        113,
        114,
        115,
        118
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.error_prediction_model",
      "current_coverage": 32.82051282051282,
      "target_coverage": 95.0,
      "gap_percentage": 62.17948717948718,
      "missing_lines_count": 131,
      "missing_lines": [
        80,
        83,
        84,
        87,
        88,
        91,
        93,
        108,
        110,
        112
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.recovery_strategy_dispatcher",
      "current_coverage": 37.82051282051282,
      "target_coverage": 95.0,
      "gap_percentage": 57.17948717948718,
      "missing_lines_count": 97,
      "missing_lines": [
        78,
        79,
        80,
        82,
        99,
        100,
        103,
        106,
        107,
        108
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.validation_dsl_parser",
      "current_coverage": 29.365079365079367,
      "target_coverage": 95.0,
      "gap_percentage": 65.63492063492063,
      "missing_lines_count": 89,
      "missing_lines": [
        50,
        51,
        54,
        56,
        71,
        72,
        74,
        75,
        76,
        77
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.bias_validator",
      "current_coverage": 15.92356687898089,
      "target_coverage": 95.0,
      "gap_percentage": 79.07643312101911,
      "missing_lines_count": 132,
      "missing_lines": [
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        55,
        56,
        57
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.conflict_validator",
      "current_coverage": 16.216216216216218,
      "target_coverage": 95.0,
      "gap_percentage": 78.78378378378378,
      "missing_lines_count": 124,
      "missing_lines": [
        48,
        49,
        50,
        51,
        52,
        55,
        87,
        106,
        107,
        108
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.safety_validator",
      "current_coverage": 20.8,
      "target_coverage": 95.0,
      "gap_percentage": 74.2,
      "missing_lines_count": 99,
      "missing_lines": [
        47,
        48,
        49,
        50,
        51,
        52,
        55,
        56,
        57,
        61
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.semantic_validator",
      "current_coverage": 14.56953642384106,
      "target_coverage": 95.0,
      "gap_percentage": 80.43046357615894,
      "missing_lines_count": 129,
      "missing_lines": [
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        85,
        105,
        106
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.syntactic_validator",
      "current_coverage": 17.142857142857142,
      "target_coverage": 95.0,
      "gap_percentage": 77.85714285714286,
      "missing_lines_count": 58,
      "missing_lines": [
        32,
        33,
        37,
        38,
        40,
        41,
        43,
        45,
        46,
        50
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.ec_service.app.core.wina_oversight_coordinator",
      "current_coverage": 20.956399437412095,
      "target_coverage": 95.0,
      "gap_percentage": 74.0436005625879,
      "missing_lines_count": 562,
      "missing_lines": [
        54,
        64,
        180,
        183,
        184,
        185,
        186,
        187,
        188,
        191
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.ec_service.app.main",
      "current_coverage": 9.278350515463918,
      "target_coverage": 95.0,
      "gap_percentage": 85.72164948453609,
      "missing_lines_count": 88,
      "missing_lines": [
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.federated_service.app.api.v1.federated_evaluation",
      "current_coverage": 4.022988505747127,
      "target_coverage": 95.0,
      "gap_percentage": 90.97701149425288,
      "missing_lines_count": 167,
      "missing_lines": [
        15,
        16,
        17,
        23,
        24,
        27,
        28,
        34,
        35,
        38
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.ai_model_service",
      "current_coverage": 48.888888888888886,
      "target_coverage": 95.0,
      "gap_percentage": 46.111111111111114,
      "missing_lines_count": 69,
      "missing_lines": [
        77,
        78,
        79,
        81,
        85,
        88,
        97,
        106,
        116,
        117
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.common.error_handling",
      "current_coverage": 42.44604316546763,
      "target_coverage": 95.0,
      "gap_percentage": 52.55395683453237,
      "missing_lines_count": 80,
      "missing_lines": [
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65,
        69
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.common.formatting",
      "current_coverage": 24.087591240875913,
      "target_coverage": 95.0,
      "gap_percentage": 70.91240875912409,
      "missing_lines_count": 104,
      "missing_lines": [
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        52,
        71
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.common.validation",
      "current_coverage": 22.033898305084744,
      "target_coverage": 95.0,
      "gap_percentage": 72.96610169491525,
      "missing_lines_count": 92,
      "missing_lines": [
        22,
        23,
        24,
        25,
        32,
        33,
        34,
        38,
        39,
        43
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.database.pool_manager",
      "current_coverage": 35.467980295566505,
      "target_coverage": 95.0,
      "gap_percentage": 59.532019704433495,
      "missing_lines_count": 131,
      "missing_lines": [
        23,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        66,
        71
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.di.container",
      "current_coverage": 28.365384615384613,
      "target_coverage": 95.0,
      "gap_percentage": 66.63461538461539,
      "missing_lines_count": 149,
      "missing_lines": [
        50,
        51,
        52,
        56,
        60,
        64,
        68,
        69,
        70,
        71
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.di.decorators",
      "current_coverage": 16.55629139072848,
      "target_coverage": 95.0,
      "gap_percentage": 78.44370860927152,
      "missing_lines_count": 126,
      "missing_lines": [
        33,
        36,
        37,
        39,
        40,
        41,
        44,
        45,
        48,
        49
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.di.providers",
      "current_coverage": 32.62411347517731,
      "target_coverage": 95.0,
      "gap_percentage": 62.37588652482269,
      "missing_lines_count": 95,
      "missing_lines": [
        27,
        32,
        37,
        51,
        52,
        57,
        59,
        66,
        67,
        68
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.events.bus",
      "current_coverage": 25.365853658536587,
      "target_coverage": 95.0,
      "gap_percentage": 69.6341463414634,
      "missing_lines_count": 153,
      "missing_lines": [
        58,
        60,
        73,
        75,
        79,
        104,
        121,
        122,
        123,
        124
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.events.decorators",
      "current_coverage": 22.68041237113402,
      "target_coverage": 95.0,
      "gap_percentage": 72.31958762886597,
      "missing_lines_count": 75,
      "missing_lines": [
        34,
        35,
        36,
        37,
        40,
        41,
        42,
        43,
        46,
        47
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.events.middleware",
      "current_coverage": 28.859060402684566,
      "target_coverage": 95.0,
      "gap_percentage": 66.14093959731544,
      "missing_lines_count": 106,
      "missing_lines": [
        33,
        50,
        51,
        54,
        55,
        56,
        57,
        58,
        59,
        61
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.events.store",
      "current_coverage": 28.8135593220339,
      "target_coverage": 95.0,
      "gap_percentage": 66.1864406779661,
      "missing_lines_count": 126,
      "missing_lines": [
        27,
        32,
        37,
        42,
        52,
        57,
        62,
        67,
        75,
        76
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.models",
      "current_coverage": 0.1589825119236884,
      "target_coverage": 95.0,
      "gap_percentage": 94.84101748807632,
      "missing_lines_count": 628,
      "missing_lines": [
        3,
        6,
        7,
        8,
        9,
        10,
        12,
        13,
        15,
        16
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first"
      ]
    },
    {
      "module": "backend.shared.service_mesh.circuit_breaker",
      "current_coverage": 32.121212121212125,
      "target_coverage": 95.0,
      "gap_percentage": 62.878787878787875,
      "missing_lines_count": 112,
      "missing_lines": [
        39,
        40,
        41,
        46,
        73,
        74,
        75,
        76,
        78,
        79
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.service_mesh.client",
      "current_coverage": 28.666666666666668,
      "target_coverage": 95.0,
      "gap_percentage": 66.33333333333333,
      "missing_lines_count": 107,
      "missing_lines": [
        36,
        37,
        38,
        40,
        41,
        46,
        51,
        60,
        61,
        62
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.service_mesh.discovery",
      "current_coverage": 28.24858757062147,
      "target_coverage": 95.0,
      "gap_percentage": 66.75141242937853,
      "missing_lines_count": 127,
      "missing_lines": [
        38,
        43,
        44,
        45,
        63,
        64,
        67,
        70,
        71,
        74
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.utils",
      "current_coverage": 43.13725490196079,
      "target_coverage": 95.0,
      "gap_percentage": 51.86274509803921,
      "missing_lines_count": 174,
      "missing_lines": [
        22,
        26,
        27,
        28,
        32,
        33,
        34,
        36,
        37,
        38
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.constitutional_integration",
      "current_coverage": 19.65811965811966,
      "target_coverage": 95.0,
      "gap_percentage": 75.34188034188034,
      "missing_lines_count": 376,
      "missing_lines": [
        34,
        35,
        41,
        58,
        59,
        61,
        71,
        73,
        74,
        77
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.continuous_learning",
      "current_coverage": 25.954198473282442,
      "target_coverage": 95.0,
      "gap_percentage": 69.04580152671755,
      "missing_lines_count": 388,
      "missing_lines": [
        52,
        53,
        54,
        57,
        59,
        60,
        61,
        62,
        63,
        64
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.core",
      "current_coverage": 34.04255319148936,
      "target_coverage": 95.0,
      "gap_percentage": 60.95744680851064,
      "missing_lines_count": 93,
      "missing_lines": [
        83,
        84,
        85,
        86,
        89,
        90,
        91,
        92,
        94,
        108
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.dashboard",
      "current_coverage": 9.480122324159021,
      "target_coverage": 95.0,
      "gap_percentage": 85.51987767584097,
      "missing_lines_count": 296,
      "missing_lines": [
        42,
        43,
        44,
        45,
        48,
        49,
        50,
        52,
        56,
        57
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.gating",
      "current_coverage": 21.875,
      "target_coverage": 95.0,
      "gap_percentage": 73.125,
      "missing_lines_count": 275,
      "missing_lines": [
        110,
        111,
        112,
        113,
        114,
        115,
        125,
        126,
        127,
        128
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.metrics",
      "current_coverage": 34.831460674157306,
      "target_coverage": 95.0,
      "gap_percentage": 60.168539325842694,
      "missing_lines_count": 116,
      "missing_lines": [
        21,
        22,
        23,
        24,
        97,
        98,
        100,
        113,
        119,
        121
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.model_integration",
      "current_coverage": 29.78723404255319,
      "target_coverage": 95.0,
      "gap_percentage": 65.2127659574468,
      "missing_lines_count": 165,
      "missing_lines": [
        73,
        78,
        85,
        94,
        96,
        97,
        100,
        101,
        110,
        122
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.performance_monitoring",
      "current_coverage": 36.65987780040733,
      "target_coverage": 95.0,
      "gap_percentage": 58.34012219959267,
      "missing_lines_count": 311,
      "missing_lines": [
        32,
        33,
        202,
        205,
        206,
        207,
        208,
        209,
        210,
        211
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.svd_transformation",
      "current_coverage": 24.025974025974026,
      "target_coverage": 95.0,
      "gap_percentage": 70.97402597402598,
      "missing_lines_count": 117,
      "missing_lines": [
        65,
        66,
        68,
        85,
        86,
        87,
        88,
        90,
        92,
        93
      ],
      "priority": 13,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.formal_verifier",
      "current_coverage": 28.57142857142857,
      "target_coverage": 95.0,
      "gap_percentage": 66.42857142857143,
      "missing_lines_count": 45,
      "missing_lines": [
        42,
        43,
        44,
        45,
        48,
        78,
        95,
        96,
        108,
        109
      ],
      "priority": 12,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.ac_service.app.models",
      "current_coverage": 50.0,
      "target_coverage": 95.0,
      "gap_percentage": 45.0,
      "missing_lines_count": 1,
      "missing_lines": [
        13
      ],
      "priority": 12,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.auth_service.app.core.__init__",
      "current_coverage": 50.0,
      "target_coverage": 95.0,
      "gap_percentage": 45.0,
      "missing_lines_count": 1,
      "missing_lines": [
        4
      ],
      "priority": 12,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.auth_service.app.core.config",
      "current_coverage": 67.64705882352942,
      "target_coverage": 95.0,
      "gap_percentage": 27.35294117647058,
      "missing_lines_count": 11,
      "missing_lines": [
        46,
        47,
        49,
        51,
        52,
        53,
        54,
        57,
        58,
        59
      ],
      "priority": 12,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.federated_service.app.main",
      "current_coverage": 18.367346938775512,
      "target_coverage": 95.0,
      "gap_percentage": 76.63265306122449,
      "missing_lines_count": 40,
      "missing_lines": [
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        25,
        27
      ],
      "priority": 12,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.di.registry",
      "current_coverage": 46.51162790697674,
      "target_coverage": 95.0,
      "gap_percentage": 48.48837209302326,
      "missing_lines_count": 46,
      "missing_lines": [
        34,
        35,
        48,
        49,
        70,
        71,
        73,
        80,
        81,
        83
      ],
      "priority": 12,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.amendment",
      "current_coverage": 37.93103448275862,
      "target_coverage": 95.0,
      "gap_percentage": 57.06896551724138,
      "missing_lines_count": 18,
      "missing_lines": [
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        51,
        58,
        65
      ],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.utils.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.federated_service.app.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.federated_service.app.api.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.federated_service.app.api.v1.__init__",
      "current_coverage": 0,
      "target_coverage": 95.0,
      "gap_percentage": 95.0,
      "missing_lines_count": 0,
      "missing_lines": [],
      "priority": 10,
      "recommendations": [
        "Create comprehensive unit tests for core functionality",
        "Add integration tests for main workflows",
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.shared.service_mesh.registry",
      "current_coverage": 51.26050420168067,
      "target_coverage": 95.0,
      "gap_percentage": 43.73949579831933,
      "missing_lines_count": 58,
      "missing_lines": [
        58,
        63,
        75,
        76,
        77,
        78,
        82,
        145,
        149,
        151
      ],
      "priority": 10,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.utils.logging_utils",
      "current_coverage": 50.0,
      "target_coverage": 95.0,
      "gap_percentage": 45.0,
      "missing_lines_count": 21,
      "missing_lines": [
        45,
        46,
        47,
        58,
        67,
        68,
        69,
        70,
        73,
        74
      ],
      "priority": 9,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.common.http_clients",
      "current_coverage": 58.77192982456141,
      "target_coverage": 95.0,
      "gap_percentage": 36.22807017543859,
      "missing_lines_count": 47,
      "missing_lines": [
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        71,
        75,
        76
      ],
      "priority": 9,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.config",
      "current_coverage": 65.1685393258427,
      "target_coverage": 95.0,
      "gap_percentage": 29.8314606741573,
      "missing_lines_count": 31,
      "missing_lines": [
        81,
        85,
        86,
        88,
        89,
        91,
        92,
        94,
        95,
        98
      ],
      "priority": 9,
      "recommendations": [
        "Add tests for error handling and edge cases",
        "Test exception paths and validation logic",
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.di.interfaces",
      "current_coverage": 71.92118226600985,
      "target_coverage": 95.0,
      "gap_percentage": 23.07881773399015,
      "missing_lines_count": 57,
      "missing_lines": [
        19,
        24,
        29,
        38,
        43,
        48,
        53,
        58,
        63,
        72
      ],
      "priority": 8,
      "recommendations": [
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Focus on testing the most critical missing lines first",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.__init__",
      "current_coverage": 75.0,
      "target_coverage": 95.0,
      "gap_percentage": 20.0,
      "missing_lines_count": 3,
      "missing_lines": [
        7,
        8,
        9
      ],
      "priority": 5,
      "recommendations": [
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths"
      ]
    },
    {
      "module": "backend.shared.database.__init__",
      "current_coverage": 82.6086956521739,
      "target_coverage": 95.0,
      "gap_percentage": 12.391304347826093,
      "missing_lines_count": 4,
      "missing_lines": [
        21,
        27,
        33,
        39
      ],
      "priority": 5,
      "recommendations": [
        "Add parameterized tests for different input scenarios",
        "Test configuration and initialization code",
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.events.types",
      "current_coverage": 91.2,
      "target_coverage": 95.0,
      "gap_percentage": 3.799999999999997,
      "missing_lines_count": 11,
      "missing_lines": [
        116,
        117,
        119,
        120,
        132,
        133,
        262,
        267,
        272,
        277
      ],
      "priority": 3,
      "recommendations": [
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    },
    {
      "module": "backend.shared.wina.learning_api",
      "current_coverage": 93.33333333333333,
      "target_coverage": 95.0,
      "gap_percentage": 1.6666666666666714,
      "missing_lines_count": 4,
      "missing_lines": [
        31,
        32,
        33,
        34
      ],
      "priority": 3,
      "recommendations": [
        "Add tests for utility functions and helpers",
        "Test logging and debugging code paths",
        "Improve branch coverage by testing conditional logic"
      ]
    }
  ],
  "recommendations": {
    "overall_status": {
      "total_modules": 123,
      "modules_above_95": 16,
      "modules_above_90": 18,
      "modules_below_80": 104,
      "overall_coverage": 22.07884963336825,
      "target_met": false
    },
    "priority_actions": [
      "Address 104 modules with coverage below 80%",
      "Increase overall coverage by 72.9% to reach 95% target"
    ],
    "quick_wins": [
      "Focus on 2 modules between 85-95% coverage for quick wins"
    ],
    "long_term_goals": [
      "Maintain 95%+ coverage for all new code",
      "Implement coverage gates in CI/CD pipeline",
      "Add mutation testing for quality assurance"
    ]
  },
  "detailed_results": [
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.utils.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.ac_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.ac_service.app.core.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.auth_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.federated_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.federated_service.app.api.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.federated_service.app.api.v1.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.fv_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.fv_service.app.core.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.gs_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.gs_service.app.core.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.gs_service.app.services.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.integrity_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.integrity_service.app.services.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.pgc_service.app.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.pgc_service.app.core.__init__",
      "coverage_pct": 0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 0
    },
    {
      "module": "backend.shared.models",
      "coverage_pct": 0.1589825119236884,
      "missing_lines_count": 628,
      "branch_coverage": 1.0,
      "total_lines": 629
    },
    {
      "module": "backend.ac_service.app.core.domain_context_manager",
      "coverage_pct": 3.3175355450236967,
      "missing_lines_count": 204,
      "branch_coverage": 2.0,
      "total_lines": 211
    },
    {
      "module": "backend.gs_service.app.core.wina_llm_integration",
      "coverage_pct": 3.3707865168539324,
      "missing_lines_count": 258,
      "branch_coverage": 2.0,
      "total_lines": 267
    },
    {
      "module": "backend.federated_service.app.api.v1.federated_evaluation",
      "coverage_pct": 4.022988505747127,
      "missing_lines_count": 167,
      "branch_coverage": 3.0,
      "total_lines": 174
    },
    {
      "module": "backend.ac_service.app.core.constitutional_council_scalability",
      "coverage_pct": 4.827586206896552,
      "missing_lines_count": 276,
      "branch_coverage": 3.0,
      "total_lines": 290
    },
    {
      "module": "backend.gs_service.app.main",
      "coverage_pct": 4.854368932038835,
      "missing_lines_count": 98,
      "branch_coverage": 5.0,
      "total_lines": 103
    },
    {
      "module": "backend.ac_service.app.services.qec_conflict_resolver",
      "coverage_pct": 5.217391304347826,
      "missing_lines_count": 109,
      "branch_coverage": 4.0,
      "total_lines": 115
    },
    {
      "module": "backend.integrity_service.app.models",
      "coverage_pct": 5.555555555555555,
      "missing_lines_count": 51,
      "branch_coverage": 6.0,
      "total_lines": 54
    },
    {
      "module": "backend.integrity_service.app.services.research_data_pipeline",
      "coverage_pct": 6.132075471698113,
      "missing_lines_count": 199,
      "branch_coverage": 4.0,
      "total_lines": 212
    },
    {
      "module": "backend.integrity_service.app.services.key_management",
      "coverage_pct": 8.403361344537815,
      "missing_lines_count": 109,
      "branch_coverage": 7.0,
      "total_lines": 119
    },
    {
      "module": "backend.ec_service.app.main",
      "coverage_pct": 9.278350515463918,
      "missing_lines_count": 88,
      "branch_coverage": 8.0,
      "total_lines": 97
    },
    {
      "module": "backend.shared.wina.dashboard",
      "coverage_pct": 9.480122324159021,
      "missing_lines_count": 296,
      "branch_coverage": 7.0,
      "total_lines": 327
    },
    {
      "module": "backend.gs_service.app.core.llm_integration",
      "coverage_pct": 12.350597609561753,
      "missing_lines_count": 220,
      "branch_coverage": 11.0,
      "total_lines": 251
    },
    {
      "module": "backend.gs_service.app.wina.svd_utils",
      "coverage_pct": 12.76595744680851,
      "missing_lines_count": 41,
      "branch_coverage": 8.0,
      "total_lines": 47
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.crypto_service",
      "coverage_pct": 12.925170068027212,
      "missing_lines_count": 128,
      "branch_coverage": 10.0,
      "total_lines": 147
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.llm_service",
      "coverage_pct": 13.865546218487395,
      "missing_lines_count": 205,
      "branch_coverage": 10.0,
      "total_lines": 238
    },
    {
      "module": "backend.fv_service.app.core.smt_solver_integration",
      "coverage_pct": 14.213197969543149,
      "missing_lines_count": 169,
      "branch_coverage": 10.0,
      "total_lines": 197
    },
    {
      "module": "backend.fv_service.app.core.bias_detector",
      "coverage_pct": 14.335664335664337,
      "missing_lines_count": 245,
      "branch_coverage": 10.0,
      "total_lines": 286
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.semantic_validator",
      "coverage_pct": 14.56953642384106,
      "missing_lines_count": 129,
      "branch_coverage": 10.0,
      "total_lines": 151
    },
    {
      "module": "backend.fv_service.app.core.proof_obligations",
      "coverage_pct": 15.151515151515152,
      "missing_lines_count": 28,
      "branch_coverage": 13.0,
      "total_lines": 33
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.constitutional_principle",
      "coverage_pct": 15.18987341772152,
      "missing_lines_count": 67,
      "branch_coverage": 10.0,
      "total_lines": 79
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.bias_validator",
      "coverage_pct": 15.92356687898089,
      "missing_lines_count": 132,
      "branch_coverage": 10.0,
      "total_lines": 157
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.conflict_validator",
      "coverage_pct": 16.216216216216218,
      "missing_lines_count": 124,
      "branch_coverage": 11.0,
      "total_lines": 148
    },
    {
      "module": "backend.shared.di.decorators",
      "coverage_pct": 16.55629139072848,
      "missing_lines_count": 126,
      "branch_coverage": 13.0,
      "total_lines": 151
    },
    {
      "module": "backend.auth_service.app.core.security",
      "coverage_pct": 17.0,
      "missing_lines_count": 83,
      "branch_coverage": 15.0,
      "total_lines": 100
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.syntactic_validator",
      "coverage_pct": 17.142857142857142,
      "missing_lines_count": 58,
      "branch_coverage": 14.0,
      "total_lines": 70
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.policy_synthesizer",
      "coverage_pct": 17.307692307692307,
      "missing_lines_count": 129,
      "branch_coverage": 12.0,
      "total_lines": 156
    },
    {
      "module": "backend.gs_service.app.services.ac_client",
      "coverage_pct": 17.355371900826448,
      "missing_lines_count": 100,
      "branch_coverage": 16.0,
      "total_lines": 121
    },
    {
      "module": "backend.federated_service.app.main",
      "coverage_pct": 18.367346938775512,
      "missing_lines_count": 40,
      "branch_coverage": 16.0,
      "total_lines": 49
    },
    {
      "module": "backend.gs_service.app.core.constitutional_prompting",
      "coverage_pct": 18.68686868686869,
      "missing_lines_count": 161,
      "branch_coverage": 14.0,
      "total_lines": 198
    },
    {
      "module": "backend.shared.wina.constitutional_integration",
      "coverage_pct": 19.65811965811966,
      "missing_lines_count": 376,
      "branch_coverage": 15.0,
      "total_lines": 468
    },
    {
      "module": "backend.gs_service.app.wina.gating",
      "coverage_pct": 20.0,
      "missing_lines_count": 12,
      "branch_coverage": 14.0,
      "total_lines": 15
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.operational_rule",
      "coverage_pct": 20.27027027027027,
      "missing_lines_count": 59,
      "branch_coverage": 15.0,
      "total_lines": 74
    },
    {
      "module": "backend.gs_service.app.core.llm_reliability_framework",
      "coverage_pct": 20.646067415730336,
      "missing_lines_count": 1130,
      "branch_coverage": 15.0,
      "total_lines": 1424
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.safety_validator",
      "coverage_pct": 20.8,
      "missing_lines_count": 99,
      "branch_coverage": 14.0,
      "total_lines": 125
    },
    {
      "module": "backend.ec_service.app.core.wina_oversight_coordinator",
      "coverage_pct": 20.956399437412095,
      "missing_lines_count": 562,
      "branch_coverage": 16.0,
      "total_lines": 711
    },
    {
      "module": "backend.shared.wina.gating",
      "coverage_pct": 21.875,
      "missing_lines_count": 275,
      "branch_coverage": 16.0,
      "total_lines": 352
    },
    {
      "module": "backend.shared.common.validation",
      "coverage_pct": 22.033898305084744,
      "missing_lines_count": 92,
      "branch_coverage": 14.0,
      "total_lines": 118
    },
    {
      "module": "backend.shared.events.decorators",
      "coverage_pct": 22.68041237113402,
      "missing_lines_count": 75,
      "branch_coverage": 19.0,
      "total_lines": 97
    },
    {
      "module": "backend.shared.wina.svd_transformation",
      "coverage_pct": 24.025974025974026,
      "missing_lines_count": 117,
      "branch_coverage": 19.0,
      "total_lines": 154
    },
    {
      "module": "backend.shared.common.formatting",
      "coverage_pct": 24.087591240875913,
      "missing_lines_count": 104,
      "branch_coverage": 15.0,
      "total_lines": 137
    },
    {
      "module": "backend.shared.events.bus",
      "coverage_pct": 25.365853658536587,
      "missing_lines_count": 153,
      "branch_coverage": 18.0,
      "total_lines": 205
    },
    {
      "module": "backend.shared.wina.continuous_learning",
      "coverage_pct": 25.954198473282442,
      "missing_lines_count": 388,
      "branch_coverage": 18.0,
      "total_lines": 524
    },
    {
      "module": "backend.pgc_service.app.core.policy_format_router",
      "coverage_pct": 26.34146341463415,
      "missing_lines_count": 151,
      "branch_coverage": 20.0,
      "total_lines": 205
    },
    {
      "module": "backend.gs_service.app.wina.core",
      "coverage_pct": 26.47058823529412,
      "missing_lines_count": 25,
      "branch_coverage": 20.0,
      "total_lines": 34
    },
    {
      "module": "backend.fv_service.app.core.enhanced_multi_model_validation",
      "coverage_pct": 26.6304347826087,
      "missing_lines_count": 270,
      "branch_coverage": 19.0,
      "total_lines": 368
    },
    {
      "module": "backend.fv_service.app.core.cross_domain_testing_engine",
      "coverage_pct": 26.94063926940639,
      "missing_lines_count": 160,
      "branch_coverage": 20.0,
      "total_lines": 219
    },
    {
      "module": "backend.shared.service_mesh.discovery",
      "coverage_pct": 28.24858757062147,
      "missing_lines_count": 127,
      "branch_coverage": 21.0,
      "total_lines": 177
    },
    {
      "module": "backend.shared.di.container",
      "coverage_pct": 28.365384615384613,
      "missing_lines_count": 149,
      "branch_coverage": 19.0,
      "total_lines": 208
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.validation.formal_verifier",
      "coverage_pct": 28.57142857142857,
      "missing_lines_count": 45,
      "branch_coverage": 22.0,
      "total_lines": 63
    },
    {
      "module": "backend.shared.service_mesh.client",
      "coverage_pct": 28.666666666666668,
      "missing_lines_count": 107,
      "branch_coverage": 22.0,
      "total_lines": 150
    },
    {
      "module": "backend.shared.events.store",
      "coverage_pct": 28.8135593220339,
      "missing_lines_count": 126,
      "branch_coverage": 24.0,
      "total_lines": 177
    },
    {
      "module": "backend.shared.events.middleware",
      "coverage_pct": 28.859060402684566,
      "missing_lines_count": 106,
      "branch_coverage": 18.0,
      "total_lines": 149
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.constitutional_distance_calculator",
      "coverage_pct": 28.865979381443296,
      "missing_lines_count": 69,
      "branch_coverage": 22.0,
      "total_lines": 97
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.validation_dsl_parser",
      "coverage_pct": 29.365079365079367,
      "missing_lines_count": 89,
      "branch_coverage": 20.0,
      "total_lines": 126
    },
    {
      "module": "backend.integrity_service.app.services.crypto_service",
      "coverage_pct": 29.411764705882355,
      "missing_lines_count": 84,
      "branch_coverage": 22.0,
      "total_lines": 119
    },
    {
      "module": "backend.shared.wina.model_integration",
      "coverage_pct": 29.78723404255319,
      "missing_lines_count": 165,
      "branch_coverage": 23.0,
      "total_lines": 235
    },
    {
      "module": "backend.pgc_service.app.core.proactive_fairness_generator",
      "coverage_pct": 31.40794223826715,
      "missing_lines_count": 190,
      "branch_coverage": 21.0,
      "total_lines": 277
    },
    {
      "module": "backend.shared.service_mesh.circuit_breaker",
      "coverage_pct": 32.121212121212125,
      "missing_lines_count": 112,
      "branch_coverage": 24.0,
      "total_lines": 165
    },
    {
      "module": "backend.shared.di.providers",
      "coverage_pct": 32.62411347517731,
      "missing_lines_count": 95,
      "branch_coverage": 27.0,
      "total_lines": 141
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.constitutional_fidelity_monitor",
      "coverage_pct": 32.76595744680851,
      "missing_lines_count": 158,
      "branch_coverage": 23.0,
      "total_lines": 235
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.error_prediction_model",
      "coverage_pct": 32.82051282051282,
      "missing_lines_count": 131,
      "branch_coverage": 25.0,
      "total_lines": 195
    },
    {
      "module": "backend.pgc_service.app.core.manifest_manager",
      "coverage_pct": 33.663366336633665,
      "missing_lines_count": 134,
      "branch_coverage": 26.0,
      "total_lines": 202
    },
    {
      "module": "backend.gs_service.app.services.lipschitz_estimator",
      "coverage_pct": 33.771929824561404,
      "missing_lines_count": 151,
      "branch_coverage": 27.0,
      "total_lines": 228
    },
    {
      "module": "backend.shared.wina.core",
      "coverage_pct": 34.04255319148936,
      "missing_lines_count": 93,
      "branch_coverage": 29.0,
      "total_lines": 141
    },
    {
      "module": "backend.shared.wina.metrics",
      "coverage_pct": 34.831460674157306,
      "missing_lines_count": 116,
      "branch_coverage": 28.0,
      "total_lines": 178
    },
    {
      "module": "backend.auth_service.app.core.password",
      "coverage_pct": 35.0,
      "missing_lines_count": 13,
      "branch_coverage": 29.0,
      "total_lines": 20
    },
    {
      "module": "backend.shared.database.pool_manager",
      "coverage_pct": 35.467980295566505,
      "missing_lines_count": 131,
      "branch_coverage": 28.0,
      "total_lines": 203
    },
    {
      "module": "backend.shared.wina.performance_monitoring",
      "coverage_pct": 36.65987780040733,
      "missing_lines_count": 311,
      "branch_coverage": 28.0,
      "total_lines": 491
    },
    {
      "module": "backend.fv_service.app.core.adversarial_robustness_tester",
      "coverage_pct": 36.734693877551024,
      "missing_lines_count": 155,
      "branch_coverage": 26.0,
      "total_lines": 245
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.recovery_strategy_dispatcher",
      "coverage_pct": 37.82051282051282,
      "missing_lines_count": 97,
      "branch_coverage": 29.0,
      "total_lines": 156
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.core.amendment",
      "coverage_pct": 37.93103448275862,
      "missing_lines_count": 18,
      "branch_coverage": 34.0,
      "total_lines": 29
    },
    {
      "module": "backend.shared.common.error_handling",
      "coverage_pct": 42.44604316546763,
      "missing_lines_count": 80,
      "branch_coverage": 28.0,
      "total_lines": 139
    },
    {
      "module": "backend.shared.utils",
      "coverage_pct": 43.13725490196079,
      "missing_lines_count": 174,
      "branch_coverage": 32.0,
      "total_lines": 306
    },
    {
      "module": "backend.shared.di.registry",
      "coverage_pct": 46.51162790697674,
      "missing_lines_count": 46,
      "branch_coverage": 37.0,
      "total_lines": 86
    },
    {
      "module": "backend.shared.ai_model_service",
      "coverage_pct": 48.888888888888886,
      "missing_lines_count": 69,
      "branch_coverage": 36.0,
      "total_lines": 135
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.utils.logging_utils",
      "coverage_pct": 50.0,
      "missing_lines_count": 21,
      "branch_coverage": 49.0,
      "total_lines": 42
    },
    {
      "module": "backend.ac_service.app.models",
      "coverage_pct": 50.0,
      "missing_lines_count": 1,
      "branch_coverage": 50.0,
      "total_lines": 2
    },
    {
      "module": "backend.auth_service.app.core.__init__",
      "coverage_pct": 50.0,
      "missing_lines_count": 1,
      "branch_coverage": 50.0,
      "total_lines": 2
    },
    {
      "module": "backend.shared.service_mesh.registry",
      "coverage_pct": 51.26050420168067,
      "missing_lines_count": 58,
      "branch_coverage": 40.0,
      "total_lines": 119
    },
    {
      "module": "backend.shared.common.http_clients",
      "coverage_pct": 58.77192982456141,
      "missing_lines_count": 47,
      "branch_coverage": 49.0,
      "total_lines": 114
    },
    {
      "module": "backend.shared.wina.config",
      "coverage_pct": 65.1685393258427,
      "missing_lines_count": 31,
      "branch_coverage": 52.0,
      "total_lines": 89
    },
    {
      "module": "backend.auth_service.app.core.config",
      "coverage_pct": 67.64705882352942,
      "missing_lines_count": 11,
      "branch_coverage": 57.0,
      "total_lines": 34
    },
    {
      "module": "backend.shared.di.interfaces",
      "coverage_pct": 71.92118226600985,
      "missing_lines_count": 57,
      "branch_coverage": 70.0,
      "total_lines": 203
    },
    {
      "module": "backend.shared.__init__",
      "coverage_pct": 75.0,
      "missing_lines_count": 3,
      "branch_coverage": 75.0,
      "total_lines": 12
    },
    {
      "module": "backend.shared.database.__init__",
      "coverage_pct": 82.6086956521739,
      "missing_lines_count": 4,
      "branch_coverage": 82.0,
      "total_lines": 23
    },
    {
      "module": "backend.shared.events.types",
      "coverage_pct": 91.2,
      "missing_lines_count": 11,
      "branch_coverage": 86.0,
      "total_lines": 125
    },
    {
      "module": "backend.shared.wina.learning_api",
      "coverage_pct": 93.33333333333333,
      "missing_lines_count": 4,
      "branch_coverage": 88.0,
      "total_lines": 60
    },
    {
      "module": "backend.gs_service.app.schemas",
      "coverage_pct": 96.17224880382776,
      "missing_lines_count": 8,
      "branch_coverage": 94.0,
      "total_lines": 209
    },
    {
      "module": "backend.ac_service.app.schemas",
      "coverage_pct": 96.85714285714285,
      "missing_lines_count": 11,
      "branch_coverage": 94.0,
      "total_lines": 350
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 18
    },
    {
      "module": "alphaevolve_gs_engine.alphaevolve_gs_engine.services.qec_enhancement.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 7
    },
    {
      "module": "backend.fv_service.app.schemas",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 345
    },
    {
      "module": "backend.gs_service.app.wina.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 5
    },
    {
      "module": "backend.gs_service.app.wina.models",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 28
    },
    {
      "module": "backend.shared.common.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 6
    },
    {
      "module": "backend.shared.di.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 7
    },
    {
      "module": "backend.shared.events.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 7
    },
    {
      "module": "backend.shared.schemas.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 3
    },
    {
      "module": "backend.shared.schemas.token",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 13
    },
    {
      "module": "backend.shared.schemas.user",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 18
    },
    {
      "module": "backend.shared.service_mesh.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 6
    },
    {
      "module": "backend.shared.wina.__init__",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 12
    },
    {
      "module": "backend.shared.wina.exceptions",
      "coverage_pct": 100.0,
      "missing_lines_count": 0,
      "branch_coverage": 100.0,
      "total_lines": 22
    }
  ]
}