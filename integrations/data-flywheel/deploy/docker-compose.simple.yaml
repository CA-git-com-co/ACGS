# Simplified ACGS-1 Data Flywheel Integration Docker Compose
# Infrastructure services only for initial testing

version: '3.8'

services:
  # Enhanced Redis for ACGS-1 integration
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - acgs_redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Enhanced MongoDB for ACGS-1 integration
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - acgs_mongodb_data:/data/db
    environment:
      - MONGO_LOG_LEVEL=error
      - MONGO_INITDB_DATABASE=acgs_flywheel
    command: >
      mongod --quiet
      --setParameter diagnosticDataCollectionEnabled=false
      --setParameter logComponentVerbosity='{ "network": { "verbosity": 0 }, "command": { "verbosity": 0 }, "control": { "verbosity": 0 } }'
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/acgs_flywheel --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  # Enhanced Elasticsearch for ACGS-1 governance traffic
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.watermark.low=95%
      - cluster.routing.allocation.disk.watermark.high=97%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - logger.org.elasticsearch=ERROR
      - logger.org.elasticsearch.cluster=ERROR
      - logger.org.elasticsearch.discovery=ERROR
      - logger.org.elasticsearch.gateway=ERROR
      - logger.org.elasticsearch.indices=ERROR
      - logger.org.elasticsearch.node=ERROR
      - logger.org.elasticsearch.transport=ERROR
    ports:
      - "9200:9200"
    volumes:
      - acgs_elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for ACGS-1 metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - acgs_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: always

volumes:
  acgs_elasticsearch_data:
    driver: local
  acgs_redis_data:
    driver: local
  acgs_mongodb_data:
    driver: local
  acgs_prometheus_data:
    driver: local

networks:
  default:
    name: acgs_flywheel_network
    driver: bridge
