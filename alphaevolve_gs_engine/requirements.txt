# AlphaEvolve Governance System Engine - Requirements
#
# This file lists the Python packages required to run the AlphaEvolve GS Engine.
# Install these dependencies, preferably in a virtual environment:
# pip install -r requirements.txt

# --- Core Dependencies ---
# Used for type hinting and abstract base classes
typing_extensions>=4.0.0       # For newer typing features if needed, e.g. Literal on older Pythons

# --- LLM Service Dependencies ---
# If using OpenAI LLM Service:
openai>=1.3.0,<2.0.0            # OpenAI Python client library (pin v1.x to avoid breaking changes in v2.0)
python-dotenv>=0.19.0           # For loading environment variables from .env files (like OPENAI_API_KEY)

# If using other LLM providers (e.g., Anthropic, Cohere), add their clients here:
# anthropic>=0.7.0
# cohere>=4.0.0

# --- Cryptographic Service Dependencies ---
cryptography>=3.4.0             # For digital signatures, hashing, and potential encryption

# --- OPA Interaction (Validation Services) ---
# While OPA (Open Policy Agent) is an external binary, Python scripts might interact
# with it via subprocess calls. No specific Python package is strictly required for
# `subprocess`, but if a dedicated OPA client library for Python is used in the future,
# it would be listed here. For now, ensure OPA executable is installed separately.

# --- Data Handling and Numerics (Potentially for BiasValidator or complex metrics) ---
numpy>=1.20.0                   # For numerical operations, if advanced statistical bias metrics are used.
# pandas>=1.3.0                 # If handling datasets for bias analysis in tabular format.

# --- Development and Testing Dependencies ---
# These are not strictly required for running the engine but are useful for development.
# Consider having a separate requirements-dev.txt for these.
# pytest>=6.2.0                 # For running unit tests (if using pytest framework)
# pylint>=2.10.0                # For code linting
# mypy>=0.900                   # For static type checking

# Instructions:
# 1. Ensure Python 3.8+ is installed.
# 2. Create a virtual environment: `python -m venv venv`
# 3. Activate it: `source venv/bin/activate` (Linux/macOS) or `venv\Scripts\activate` (Windows)
# 4. Install dependencies: `pip install -r requirements.txt`
# 5. If using OPA-dependent features, download and install OPA: https://www.openpolicyagent.org/docs/latest/
#    Ensure the `opa` executable is in your system's PATH or configure its path in the application.

# Note: Versions are specified with '>=' to allow newer compatible versions.
# For production, you might want to pin to specific versions for stability (e.g., openai==1.3.5).
