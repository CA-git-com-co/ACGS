# Constitutional Hash: cdd01ef066bc6cf2
[tool:pytest]
# Pytest configuration for Academic Submission System

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=quality_assurance
    --cov=cli
    --cov=web
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests across components
    performance: Performance and load tests
    slow: Tests that take more than 5 seconds
    web: Tests for web interface
    cli: Tests for command line interface
    validator: Tests for validation engine
    compliance: Tests for compliance checking
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for bug fixes
    security: Security-related tests
    api: API endpoint tests
    e2e: End-to-end workflow tests
    mock: Tests using mocked dependencies
    real: Tests using real dependencies
    network: Tests requiring network access
    filesystem: Tests requiring file system access
    latex: Tests requiring LaTeX installation

# Test timeout (in seconds)
timeout = 300

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:flask.*
    ignore::UserWarning:werkzeug.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution
# Uncomment to enable parallel testing
# -n auto

# JUnit XML output for CI
# --junitxml=junit.xml

# Coverage configuration
[coverage:run]
source = quality_assurance, cli, web
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
