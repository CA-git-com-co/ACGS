openapi: 3.0.3
info:
  title: ACGS-1 Formal Verification Service API
  description: |
    Enterprise-grade mathematical proof engine providing comprehensive formal verification
    of policies, constitutional compliance validation, and safety property verification
    using Z3 SMT solver and advanced theorem proving.

    Constitutional Hash: cdd01ef066bc6cf2
  version: 2.0.0
  contact:
    name: ACGS-1 Development Team
    url: https://github.com/CA-git-com-co/ACGS
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8003
    description: Local development server
  - url: https://fv.acgs.local
    description: Production server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Service health check
      description: Returns the current health status of the formal verification service
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /api/v1/verify:
    post:
      summary: Submit policies for formal verification
      description: Orchestrates formal verification of Datalog policy rules against constitutional principles
      tags:
        - Core Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRequest'
      responses:
        '200':
          description: Verification completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationResponse'

  /api/v1/verify/parallel:
    post:
      summary: Parallel policy verification
      description: Enhanced parallel policy verification with constitutional compliance and 100+ concurrent validations
      tags:
        - Core Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParallelVerificationRequest'
      responses:
        '200':
          description: Parallel verification completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParallelVerificationResponse'

  /api/v1/verify/constitutional-compliance:
    post:
      summary: Verify constitutional compliance
      description: Constitutional compliance verification with Z3 formal proofs
      tags:
        - Constitutional Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstitutionalVerificationRequest'
      responses:
        '200':
          description: Constitutional verification completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstitutionalVerificationResponse'

  /api/v1/verify/generate-formal-proof:
    post:
      summary: Generate formal mathematical proof
      description: Generate formal mathematical proof for constitutional property verification using Z3
      tags:
        - Proof Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProofGenerationRequest'
      responses:
        '200':
          description: Formal proof generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofGenerationResponse'

  /api/v1/verify/bias-detection:
    post:
      summary: Detect bias in policies
      description: Analyze policies for bias and fairness issues using advanced algorithms
      tags:
        - Bias Detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiasDetectionRequest'
      responses:
        '200':
          description: Bias analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiasDetectionResponse'

  /api/v1/cross-domain-testing:
    post:
      summary: Cross-domain policy testing
      description: Run cross-domain tests for multi-domain policy validation
      tags:
        - Cross-Domain Testing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossDomainTestRequest'
      responses:
        '200':
          description: Cross-domain testing completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrossDomainTestResponse'

  /api/v1/verification-metrics:
    get:
      summary: Get verification performance metrics
      description: Comprehensive performance metrics for the formal verification engine
      tags:
        - Monitoring
      responses:
        '200':
          description: Verification metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationMetricsResponse'

  /api/v1/performance/metrics:
    get:
      summary: Get performance optimization metrics
      description: Performance metrics and optimization status
      tags:
        - Monitoring
      responses:
        '200':
          description: Performance metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetricsResponse'

  /api/v1/enterprise/status:
    get:
      summary: Get enterprise verification status
      description: Enterprise formal verification status and capabilities
      tags:
        - Enterprise Features
      responses:
        '200':
          description: Enterprise status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseStatusResponse'

  /api/v1/constitutional/emergency-shutdown:
    post:
      summary: Emergency shutdown procedure
      description: Initiate emergency shutdown with <30min RTO for critical incidents
      tags:
        - DGM Safety Patterns
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyShutdownRequest'
      responses:
        '200':
          description: Emergency shutdown initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyShutdownResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/dgm/sandbox/execute:
    post:
      summary: Execute verification in sandbox
      description: Execute formal verification in isolated sandbox environment
      tags:
        - DGM Safety Patterns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxExecutionRequest'
      responses:
        '200':
          description: Sandbox execution completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxExecutionResponse'

  /api/v1/dgm/human-review:
    post:
      summary: Submit for human review
      description: Submit critical verification results for human review
      tags:
        - DGM Safety Patterns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HumanReviewRequest'
      responses:
        '200':
          description: Submitted for human review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanReviewResponse'

  /api/v1/dgm/rollback:
    post:
      summary: Rollback verification changes
      description: Rollback verification changes to previous safe state
      tags:
        - DGM Safety Patterns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackRequest'
      responses:
        '200':
          description: Rollback completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollbackResponse'

  /metrics:
    get:
      summary: Prometheus metrics
      description: Service metrics for monitoring
      tags:
        - Monitoring
      security: []
      responses:
        '200':
          description: Metrics data
          content:
            text/plain:
              schema:
                type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        service:
          type: string
          example: enhanced_fv_service
        version:
          type: string
          example: '2.0.0'
        port:
          type: integer
          example: 8003
        enterprise_features_enabled:
          type: boolean
        components:
          type: object
          properties:
            z3_smt_solver:
              type: string
              enum: [operational, unavailable]
            tiered_validation:
              type: string
              enum: [operational, degraded]
            parallel_pipeline:
              type: string
              enum: [operational, degraded]
            cryptographic_validation:
              type: string
              enum: [operational, degraded]
        performance_metrics:
          type: object
          properties:
            target_response_time:
              type: string
              example: '<500ms'
            availability_target:
              type: string
              example: '>99.9%'
            concurrent_verification_support:
              type: string
              example: '>100 tasks'

    VerificationRequest:
      type: object
      required:
        - policy_rule_refs
      properties:
        policy_rule_refs:
          type: array
          items:
            type: string
          description: Policy rule references to verify
        verification_level:
          type: string
          enum: [basic, comprehensive, formal_proof]
          default: basic
        constitutional_principles:
          type: array
          items:
            type: string
          description: Constitutional principles to verify against
        safety_properties:
          type: array
          items:
            type: string
          description: Safety properties to validate
        generate_proof:
          type: boolean
          default: false
          description: Whether to generate formal mathematical proof

    VerificationResponse:
      type: object
      properties:
        verification_id:
          type: string
          format: uuid
        verification_status:
          type: string
          enum: [verified, failed, contradiction_detected, timeout]
        mathematical_proof:
          type: object
          properties:
            proof_steps:
              type: array
              items:
                type: string
            proof_valid:
              type: boolean
            proof_type:
              type: string
        constitutional_compliance:
          type: object
          properties:
            compliant:
              type: boolean
            confidence:
              type: number
              minimum: 0
              maximum: 1
            violations:
              type: array
              items:
                type: object
        verification_time_ms:
          type: number
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'

    ParallelVerificationRequest:
      type: object
      required:
        - policy_rule_refs
      properties:
        policy_rule_refs:
          type: array
          items:
            type: string
          description: Multiple policy rule references for parallel verification
        enable_parallel:
          type: boolean
          default: true
        max_concurrent:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        verification_level:
          type: string
          enum: [basic, comprehensive, formal_proof]
        constitutional_principles:
          type: array
          items:
            type: string

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'
        timestamp:
          type: string
          format: date-time

    EmergencyShutdownRequest:
      type: object
      required:
        - reason
        - authorization_token
      properties:
        reason:
          type: string
          description: Reason for emergency shutdown
          example: 'Constitutional violation detected'
        authorization_token:
          type: string
          description: Admin authorization token
        rto_target_minutes:
          type: integer
          default: 30
          description: Recovery time objective in minutes

    EmergencyShutdownResponse:
      type: object
      properties:
        status:
          type: string
          example: 'shutdown_initiated'
        shutdown_id:
          type: string
          example: 'emergency_shutdown_20250627_123456'
        estimated_rto_minutes:
          type: integer
          example: 25
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'
        timestamp:
          type: string
          format: date-time

    SandboxExecutionRequest:
      type: object
      required:
        - verification_request
      properties:
        verification_request:
          type: object
          description: Verification request to execute in sandbox
        sandbox_config:
          type: object
          properties:
            timeout_seconds:
              type: integer
              default: 300
            memory_limit_mb:
              type: integer
              default: 1024
            isolation_level:
              type: string
              enum: [basic, strict, maximum]
              default: strict

    SandboxExecutionResponse:
      type: object
      properties:
        status:
          type: string
          enum: [completed, timeout, error]
        execution_id:
          type: string
        verification_result:
          type: object
          description: Verification results from sandbox
        sandbox_metrics:
          type: object
          properties:
            execution_time_ms:
              type: number
            memory_used_mb:
              type: number
            isolation_violations:
              type: integer

    HumanReviewRequest:
      type: object
      required:
        - verification_result
        - review_priority
      properties:
        verification_result:
          type: object
          description: Verification result requiring human review
        review_priority:
          type: string
          enum: [low, medium, high, critical]
        review_reason:
          type: string
          description: Reason for human review requirement
        constitutional_implications:
          type: array
          items:
            type: string

    HumanReviewResponse:
      type: object
      properties:
        review_id:
          type: string
        status:
          type: string
          enum: [submitted, in_review, approved, rejected]
        estimated_review_time_hours:
          type: integer
        reviewer_assigned:
          type: boolean
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'

    RollbackRequest:
      type: object
      required:
        - target_state
      properties:
        target_state:
          type: string
          description: Target state identifier to rollback to
        rollback_reason:
          type: string
          description: Reason for rollback
        preserve_audit_trail:
          type: boolean
          default: true

    RollbackResponse:
      type: object
      properties:
        status:
          type: string
          enum: [completed, failed, partial]
        rollback_id:
          type: string
        previous_state:
          type: string
        current_state:
          type: string
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'
        timestamp:
          type: string
          format: date-time

tags:
  - name: Health
    description: Service health and status endpoints
  - name: Core Verification
    description: Policy verification and formal proof generation
  - name: Constitutional Verification
    description: Constitutional compliance verification
  - name: Proof Generation
    description: Mathematical proof generation with Z3
  - name: Bias Detection
    description: Bias and fairness analysis
  - name: Cross-Domain Testing
    description: Multi-domain policy validation
  - name: Enterprise Features
    description: Enterprise verification capabilities
  - name: Monitoring
    description: Performance metrics and monitoring
  - name: DGM Safety Patterns
    description: Democratic Governance Model safety patterns including sandbox execution, human review, and emergency procedures
