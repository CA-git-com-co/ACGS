openapi: 3.0.3
info:
  title: ACGS-1 Policy Governance Compiler Service API
  description: |
    Enterprise-grade policy enforcement engine providing real-time governance policy
    enforcement, workflow orchestration, and constitutional compliance validation
    using Open Policy Agent (OPA) integration.

    Constitutional Hash: cdd01ef066bc6cf2
  version: 3.0.0
  contact:
    name: ACGS-1 Development Team
    url: https://github.com/CA-git-com-co/ACGS
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8005
    description: Local development server
  - url: https://pgc.acgs.local
    description: Production server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Service health check
      description: Returns the current health status of the policy governance compiler service
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /api/v1/enforcement/evaluate:
    post:
      summary: Evaluate policy queries
      description: Evaluate policy queries against currently active policies using OPA
      tags:
        - Policy Enforcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyEvaluationRequest'
      responses:
        '200':
          description: Policy evaluation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationResponse'

  /api/v1/enforcement/realtime-compliance:
    post:
      summary: Real-time compliance checking
      description: Ultra-fast compliance validation with <200ms latency target
      tags:
        - Real-Time Enforcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealtimeComplianceRequest'
      responses:
        '200':
          description: Real-time compliance check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealtimeComplianceResponse'

  /api/v1/enforcement/intercept-action:
    post:
      summary: Intercept and validate governance actions
      description: Intercept and validate governance actions in real-time
      tags:
        - Action Interception
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionInterceptionRequest'
      responses:
        '200':
          description: Action interception completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionInterceptionResponse'

  /api/v1/lifecycle/create:
    post:
      summary: Create new policy in lifecycle
      description: Create new policy and initiate lifecycle management
      tags:
        - Policy Lifecycle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCreationRequest'
      responses:
        '201':
          description: Policy created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCreationResponse'

  /api/v1/lifecycle/status/{policy_id}:
    get:
      summary: Get policy lifecycle status
      description: Get current lifecycle status of a policy
      tags:
        - Policy Lifecycle
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Policy lifecycle status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyLifecycleStatusResponse'

  /api/v1/incremental/deploy:
    post:
      summary: Deploy policy update with zero-downtime
      description: Deploy policy update using incremental compilation with hot-swapping
      tags:
        - Incremental Compilation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDeploymentRequest'
      responses:
        '200':
          description: Policy deployment initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDeploymentResponse'

  /api/v1/ultra-low-latency/evaluate:
    post:
      summary: Ultra-low latency policy evaluation
      description: Optimized policy evaluation targeting <25ms latency
      tags:
        - Ultra-Low Latency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UltraLowLatencyRequest'
      responses:
        '200':
          description: Ultra-low latency evaluation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UltraLowLatencyResponse'

  /api/v1/constitutional/validate:
    post:
      summary: Constitutional compliance validation
      description: Validate constitutional compliance with formal verification
      tags:
        - Constitutional Compliance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstitutionalValidationRequest'
      responses:
        '200':
          description: Constitutional validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstitutionalValidationResponse'

  /api/v1/enforcement/compliance-metrics:
    get:
      summary: Get compliance performance metrics
      description: Comprehensive performance metrics for enforcement engine
      tags:
        - Monitoring
      responses:
        '200':
          description: Compliance metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceMetricsResponse'

  /api/v1/status:
    get:
      summary: Get detailed API status
      description: Detailed API status and governance capabilities
      tags:
        - System Status
      responses:
        '200':
          description: API status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIStatusResponse'

  /metrics:
    get:
      summary: Prometheus metrics
      description: Service metrics for monitoring
      tags:
        - Monitoring
      security: []
      responses:
        '200':
          description: Metrics data
          content:
            text/plain:
              schema:
                type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        service:
          type: string
          example: pgc_service_production
        version:
          type: string
          example: '3.0.0'
        phase:
          type: string
          example: 'Phase 3 - Production Implementation'
        components:
          type: object
          properties:
            opa_server:
              type: string
              enum: [operational, degraded, unavailable]
            policy_engine:
              type: string
              enum: [operational, degraded]
            enforcement_engine:
              type: string
              enum: [operational, degraded]
        performance_targets:
          type: object
          properties:
            p99_latency_ms:
              type: integer
              example: 500
            p95_latency_ms:
              type: integer
              example: 25

    PolicyEvaluationRequest:
      type: object
      required:
        - query
        - input_data
      properties:
        query:
          type: string
          description: OPA query to evaluate
          example: 'data.acgs.authz.allow'
        input_data:
          type: object
          description: Input data for policy evaluation
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                role:
                  type: string
            action:
              type: object
              properties:
                type:
                  type: string
                resource:
                  type: string
            resource:
              type: object
              properties:
                id:
                  type: string
                type:
                  type: string
            environment:
              type: object
        explain:
          type: string
          enum: [off, notes, fails, full]
          default: off
        metrics:
          type: boolean
          default: false

    PolicyEvaluationResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            allow:
              type: boolean
            decision_id:
              type: string
        explanation:
          type: array
          items:
            type: object
        metrics:
          type: object
          properties:
            decision_time_ms:
              type: number
            timer_rego_query_eval_ns:
              type: integer
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'

    RealtimeComplianceRequest:
      type: object
      required:
        - action_type
        - user_id
      properties:
        action_type:
          type: string
          enum: [policy_creation, policy_modification, constitutional_amendment]
        user_id:
          type: string
        resource_id:
          type: string
        action_data:
          type: object
        constitutional_principles:
          type: array
          items:
            type: string
        validation_level:
          type: string
          enum: [basic, comprehensive, formal_proof]
          default: comprehensive

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        constitutional_hash:
          type: string
          example: 'cdd01ef066bc6cf2'
        timestamp:
          type: string
          format: date-time

tags:
  - name: Health
    description: Service health and status endpoints
  - name: Policy Enforcement
    description: Core policy enforcement operations
  - name: Real-Time Enforcement
    description: Real-time compliance checking
  - name: Action Interception
    description: Governance action interception and validation
  - name: Policy Lifecycle
    description: Policy lifecycle management
  - name: Incremental Compilation
    description: Zero-downtime policy deployment
  - name: Ultra-Low Latency
    description: Ultra-low latency optimization
  - name: Constitutional Compliance
    description: Constitutional compliance validation
  - name: System Status
    description: System status and capabilities
  - name: Monitoring
    description: Performance metrics and monitoring
