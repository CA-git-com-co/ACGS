openapi: 3.0.3
info:
  title: ACGS Code Analysis Engine API
  version: 1.0.0
  description: |
    Comprehensive API for intelligent code analysis, semantic search, and dependency mapping
    within the ACGS (AI Constitutional Governance System) ecosystem.

    ## Features
    - **Semantic Code Search**: Vector-based similarity search using CodeBERT embeddings
    - **Symbol Analysis**: Detailed code symbol extraction and metadata
    - **Dependency Mapping**: Comprehensive dependency graph construction and traversal
    - **Context Integration**: Bidirectional integration with ACGS Context Service
    - **Constitutional Compliance**: Full integration with ACGS governance framework

    ## Authentication
    All endpoints require JWT authentication via the ACGS Auth Service (port 8016).
    Include the JWT token in the Authorization header: `Bearer <token>`

    ## Performance Targets
    - **Latency**: P99 < 10ms for cached queries
    - **Throughput**: >100 RPS sustained load
    - **Cache Hit Rate**: >85% for repeated queries

    ## Constitutional Compliance
    All responses include constitutional validation signature with hash: `cdd01ef066bc6cf2`

  contact:
    name: ACGS Development Team
    url: https://github.com/CA-git-com-co/ACGS
    email: dev@acgs.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8007
    description: Local development server
  - url: https://api.acgs.ai/code-analysis
    description: Production server

security:
  - bearerAuth: []

paths:
  # Health and Status Endpoints
  /health:
    get:
      tags:
        - Health
      summary: Service Health Check
      description: Returns the health status of the Code Analysis Engine and its dependencies
      operationId: getHealth
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                service: "acgs-code-analysis-engine"
                version: "1.0.0"
                constitutional_hash: "cdd01ef066bc6cf2"
                checks:
                  database: "ok"
                  cache: "ok"
                  context_service: "ok"
                  auth_service: "ok"
                uptime_seconds: 3600
                last_analysis_job: "2024-01-15T10:30:00Z"
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /metrics:
    get:
      tags:
        - Monitoring
      summary: Prometheus Metrics
      description: Returns Prometheus-formatted metrics for monitoring
      operationId: getMetrics
      security: []
      responses:
        '200':
          description: Metrics in Prometheus format
          content:
            text/plain:
              schema:
                type: string
              example: |
                # HELP acgs_code_analysis_requests_total Total requests
                # TYPE acgs_code_analysis_requests_total counter
                acgs_code_analysis_requests_total{method="GET",endpoint="/api/v1/search/semantic"} 1234

                # HELP acgs_code_analysis_request_duration_seconds Request latency
                # TYPE acgs_code_analysis_request_duration_seconds histogram
                acgs_code_analysis_request_duration_seconds_bucket{le="0.005"} 800
                acgs_code_analysis_request_duration_seconds_bucket{le="0.01"} 900
                acgs_code_analysis_request_duration_seconds_bucket{le="+Inf"} 1000

  # Search Endpoints
  /api/v1/search/semantic:
    get:
      tags:
        - Search
      summary: Semantic Code Search
      description: |
        Performs semantic search across the codebase using vector embeddings.
        Returns code symbols ranked by semantic similarity to the query.
      operationId: searchSemantic
      parameters:
        - name: query
          in: query
          required: true
          description: Natural language or code search query
          schema:
            type: string
            minLength: 1
            maxLength: 500
          example: "function that validates user authentication"
        - name: limit
          in: query
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: language
          in: query
          description: Filter by programming language
          schema:
            type: string
            enum: [python, javascript, typescript, yaml, json, sql]
        - name: symbol_type
          in: query
          description: Filter by symbol type
          schema:
            type: string
            enum: [function, class, variable, import, method, property]
        - name: min_score
          in: query
          description: Minimum similarity score (0.0 to 1.0)
          schema:
            type: number
            minimum: 0.0
            maximum: 1.0
            default: 0.5
      responses:
        '200':
          description: Semantic search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticSearchResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/search/symbol:
    get:
      tags:
        - Search
      summary: Symbol Name Search
      description: |
        Fast exact or fuzzy search for code symbols by name.
        Optimized for autocomplete and symbol lookup scenarios.
      operationId: searchSymbol
      parameters:
        - name: name
          in: query
          required: true
          description: Symbol name to search for (supports wildcards)
          schema:
            type: string
            minLength: 1
            maxLength: 256
          example: "validate_*"
        - name: exact_match
          in: query
          description: Whether to perform exact matching
          schema:
            type: boolean
            default: false
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: symbol_type
          in: query
          schema:
            type: string
            enum: [function, class, variable, import, method, property]
        - name: language
          in: query
          schema:
            type: string
            enum: [python, javascript, typescript, yaml, json, sql]
        - name: file_path
          in: query
          description: Filter by file path (supports wildcards)
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: Symbol search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolSearchResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2

  # Symbol Management Endpoints
  /api/v1/symbols/{symbol_id}:
    get:
      tags:
        - Symbols
      summary: Get Symbol Details
      description: |
        Retrieves detailed information about a specific code symbol,
        including metadata, source code, and related context.
      operationId: getSymbol
      parameters:
        - name: symbol_id
          in: path
          required: true
          description: Unique identifier for the code symbol
          schema:
            type: string
            format: uuid
        - name: include_source
          in: query
          description: Whether to include source code in response
          schema:
            type: boolean
            default: true
        - name: include_context
          in: query
          description: Whether to include related context from Context Service
          schema:
            type: boolean
            default: true
        - name: include_dependencies
          in: query
          description: Whether to include dependency information
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Symbol details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolDetailResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2
        '404':
          description: Symbol not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/symbols/{symbol_id}/dependencies:
    get:
      tags:
        - Dependencies
      summary: Get Symbol Dependencies
      description: |
        Retrieves dependency information for a specific symbol,
        including incoming and outgoing dependencies with relationship types.
      operationId: getSymbolDependencies
      parameters:
        - name: symbol_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: direction
          in: query
          description: Direction of dependencies to retrieve
          schema:
            type: string
            enum: [incoming, outgoing, both]
            default: both
        - name: dependency_type
          in: query
          description: Filter by dependency type
          schema:
            type: string
            enum: [import, call, inheritance, composition, reference]
        - name: depth
          in: query
          description: Maximum depth for dependency traversal
          schema:
            type: integer
            minimum: 1
            maximum: 5
            default: 1
        - name: include_external
          in: query
          description: Whether to include external dependencies
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Symbol dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyResponse'

  # File Analysis Endpoints
  /api/v1/files/{file_path}/symbols:
    get:
      tags:
        - Files
      summary: Get File Symbols
      description: |
        Retrieves all symbols extracted from a specific file,
        with optional filtering and sorting capabilities.
      operationId: getFileSymbols
      parameters:
        - name: file_path
          in: path
          required: true
          description: Relative path to the file from project root
          schema:
            type: string
            maxLength: 512
          example: "services/core/auth/auth_service.py"
        - name: symbol_type
          in: query
          schema:
            type: string
            enum: [function, class, variable, import, method, property]
        - name: include_private
          in: query
          description: Whether to include private symbols
          schema:
            type: boolean
            default: false
        - name: sort_by
          in: query
          description: Sort order for results
          schema:
            type: string
            enum: [name, line_number, symbol_type]
            default: line_number
      responses:
        '200':
          description: File symbols
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSymbolsResponse'

  /api/v1/files/{file_path}/dependencies:
    get:
      tags:
        - Files
      summary: Get File Dependencies
      description: |
        Retrieves dependency information for all symbols in a file,
        useful for impact analysis and refactoring planning.
      operationId: getFileDependencies
      parameters:
        - name: file_path
          in: path
          required: true
          schema:
            type: string
            maxLength: 512
        - name: direction
          in: query
          schema:
            type: string
            enum: [incoming, outgoing, both]
            default: both
        - name: group_by_type
          in: query
          description: Whether to group dependencies by type
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: File dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDependencyResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2

  # Analysis and Indexing Endpoints
  /api/v1/analysis/trigger:
    post:
      tags:
        - Analysis
      summary: Trigger Code Analysis
      description: |
        Triggers analysis of specific files or the entire codebase.
        Useful for manual re-indexing or processing new files.
      operationId: triggerAnalysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
            examples:
              single_file:
                summary: Analyze single file
                value:
                  analysis_type: "file"
                  file_paths: ["services/core/auth/auth_service.py"]
                  force_reanalysis: false
              full_scan:
                summary: Full codebase scan
                value:
                  analysis_type: "full_scan"
                  force_reanalysis: true
      responses:
        '202':
          description: Analysis job started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisJobResponse'
        '400':
          description: Invalid analysis request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/analysis/jobs/{job_id}:
    get:
      tags:
        - Analysis
      summary: Get Analysis Job Status
      description: |
        Retrieves the status and progress of an analysis job.
      operationId: getAnalysisJob
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Analysis job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisJobStatusResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2

  # Context Integration Endpoints
  /api/v1/context/enrich:
    post:
      tags:
        - Context Integration
      summary: Enrich Code Analysis with Context
      description: |
        Enriches code analysis results with contextual information from the ACGS Context Service.
        Creates bidirectional links between code symbols and domain contexts.
      operationId: enrichWithContext
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextEnrichmentRequest'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2
      responses:
        '200':
          description: Context enrichment completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextEnrichmentResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2

  /api/v1/context/links/{symbol_id}:
    get:
      tags:
        - Context Integration
      summary: Get Context Links for Symbol
      description: |
        Retrieves all context links for a specific code symbol,
        showing relationships with domain, policy, and constitutional contexts.
      operationId: getContextLinks
      parameters:
        - name: symbol_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: context_type
          in: query
          description: Filter by context type
          schema:
            type: string
            enum: [DomainContext, PolicyContext, ConstitutionalContext, AgentContext]
        - name: relationship_type
          in: query
          description: Filter by relationship type
          schema:
            type: string
            enum: [implements, uses, related_to, validates, enforces]
      responses:
        '200':
          description: Context links for symbol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextLinksResponse'  # TODO: Replace with environment variable - Constitutional Hash: cdd01ef066bc6cf2

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token from ACGS Auth Service (port 8016)

  schemas:
    # Health and Status Schemas
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy, degraded]
        service:
          type: string
          example: "acgs-code-analysis-engine"
        version:
          type: string
          example: "1.0.0"
        constitutional_hash:
          type: string
          example: "cdd01ef066bc6cf2"
        checks:
          type: object
          properties:
            database:
              type: string
              enum: [ok, failed]
            cache:
              type: string
              enum: [ok, failed]
            context_service:
              type: string
              enum: [ok, failed]
            auth_service:
              type: string
              enum: [ok, failed]
        uptime_seconds:
          type: integer
          minimum: 0
        last_analysis_job:
          type: string
          format: date-time
      required:
        - status
        - service
        - version
        - constitutional_hash

    # Core Data Schemas
    CodeSymbol:
      type: object
      properties:
        id:
          type: string
          format: uuid
        file_path:
          type: string
          maxLength: 512
        relative_path:
          type: string
          maxLength: 512
        symbol_name:
          type: string
          maxLength: 256
        symbol_type:
          type: string
          enum: [function, class, variable, import, method, property]
        language:
          type: string
          enum: [python, javascript, typescript, yaml, json, sql, markdown]
        start_line:
          type: integer
          minimum: 1
        end_line:
          type: integer
          minimum: 1
        signature:
          type: string
          nullable: true
        docstring:
          type: string
          nullable: true
        source_code:
          type: string
          nullable: true
        complexity_score:
          type: integer
          minimum: 0
        is_public:
          type: boolean
        is_deprecated:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        constitutional_hash:
          type: string
          example: "cdd01ef066bc6cf2"
      required:
        - id
        - file_path
        - symbol_name
        - symbol_type
        - language
        - start_line
        - end_line

    Dependency:
      type: object
      properties:
        id:
          type: string
          format: uuid
        source_symbol:
          $ref: '#/components/schemas/CodeSymbol'
        target_symbol:
          allOf:
            - $ref: '#/components/schemas/CodeSymbol'
          nullable: true
        dependency_type:
          type: string
          enum: [import, call, inheritance, composition, reference]
        target_name:
          type: string
          nullable: true
          description: For external dependencies
        target_module:
          type: string
          nullable: true
          description: Module name for external dependencies
        is_external:
          type: boolean
        confidence_score:
          type: number
          minimum: 0.0
          maximum: 1.0
        created_at:
          type: string
          format: date-time
      required:
        - id
        - source_symbol
        - dependency_type
        - is_external
        - confidence_score

    ContextLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code_symbol_id:
          type: string
          format: uuid
        context_id:
          type: string
          format: uuid
        context_type:
          type: string
          enum: [DomainContext, PolicyContext, ConstitutionalContext, AgentContext]
        relationship_type:
          type: string
          enum: [implements, uses, related_to, validates, enforces]
        confidence_score:
          type: number
          minimum: 0.0
          maximum: 1.0
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - code_symbol_id
        - context_id
        - context_type
        - relationship_type

    # Search Response Schemas
    SemanticSearchResponse:
      type: object
      properties:
        query:
          type: string
        results:
          type: array
          items:
            type: object
            properties:
              symbol:
                $ref: '#/components/schemas/CodeSymbol'
              similarity_score:
                type: number
                minimum: 0.0
                maximum: 1.0
              context_enrichment:
                type: array
                items:
                  $ref: '#/components/schemas/ContextLink'
        total_results:
          type: integer
          minimum: 0
        query_time_ms:
          type: integer
          minimum: 0
        cache_hit:
          type: boolean
        constitutional_signature:
          type: string
          description: Constitutional compliance signature
      required:
        - query
        - results
        - total_results
        - query_time_ms
        - constitutional_signature

    SymbolSearchResponse:
      type: object
      properties:
        query:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/CodeSymbol'
        total_results:
          type: integer
          minimum: 0
        query_time_ms:
          type: integer
          minimum: 0
        cache_hit:
          type: boolean
        constitutional_signature:
          type: string
      required:
        - query
        - results
        - total_results
        - constitutional_signature

    SymbolDetailResponse:
      type: object
      properties:
        symbol:
          $ref: '#/components/schemas/CodeSymbol'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        context_links:
          type: array
          items:
            $ref: '#/components/schemas/ContextLink'
        related_symbols:
          type: array
          items:
            $ref: '#/components/schemas/CodeSymbol'
        file_metadata:
          type: object
          properties:
            file_size:
              type: integer
            last_modified:
              type: string
              format: date-time
            language:
              type: string
            symbol_count:
              type: integer
        constitutional_signature:
          type: string
      required:
        - symbol
        - constitutional_signature

    # Request Schemas
    AnalysisRequest:
      type: object
      properties:
        analysis_type:
          type: string
          enum: [file, directory, full_scan]
        file_paths:
          type: array
          items:
            type: string
            maxLength: 512
        force_reanalysis:
          type: boolean
          default: false
        include_embeddings:
          type: boolean
          default: true
        include_dependencies:
          type: boolean
          default: true
      required:
        - analysis_type

    ContextEnrichmentRequest:
      type: object
      properties:
        symbol_ids:
          type: array
          items:
            type: string
            format: uuid
        context_types:
          type: array
          items:
            type: string
            enum: [DomainContext, PolicyContext, ConstitutionalContext, AgentContext]
        min_confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          default: 0.7
      required:
        - symbol_ids

    # Response Schemas
    AnalysisJobResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, running, completed, failed, cancelled]
        created_at:
          type: string
          format: date-time
        estimated_completion:
          type: string
          format: date-time
          nullable: true
        constitutional_signature:
          type: string
      required:
        - job_id
        - status
        - created_at
        - constitutional_signature

    AnalysisJobStatusResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        job_type:
          type: string
          enum: [full_scan, incremental_update, file_analysis, dependency_update]
        status:
          type: string
          enum: [pending, running, completed, failed, cancelled]
        progress:
          type: object
          properties:
            files_processed:
              type: integer
              minimum: 0
            symbols_created:
              type: integer
              minimum: 0
            symbols_updated:
              type: integer
              minimum: 0
            dependencies_created:
              type: integer
              minimum: 0
            embeddings_created:
              type: integer
              minimum: 0
            total_files:
              type: integer
              minimum: 0
            completion_percentage:
              type: number
              minimum: 0.0
              maximum: 100.0
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        error_message:
          type: string
          nullable: true
        processing_time_ms:
          type: integer
          minimum: 0
          nullable: true
        constitutional_signature:
          type: string
      required:
        - job_id
        - job_type
        - status
        - constitutional_signature

    # Error Schema
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
        request_id:
          type: string
          format: uuid
        constitutional_hash:
          type: string
          example: "cdd01ef066bc6cf2"
      required:
        - error
        - message
        - timestamp
        - constitutional_hash
