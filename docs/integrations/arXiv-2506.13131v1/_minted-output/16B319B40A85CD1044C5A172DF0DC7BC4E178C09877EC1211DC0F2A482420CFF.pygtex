\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{esc}{Act as an expert software developer. Your task is to iteratively improve the provided codebase. [...]}

\PYG{esc}{- Prior programs}

\PYG{esc}{Previously we found that the following programs performed well on the task at hand:}

\PYG{n}{top\PYGZus{}1\PYGZus{}acc}\PYG{p}{:} \PYG{l+m+mf}{0.796}\PYG{p}{;} \PYG{n}{neg\PYGZus{}eval\PYGZus{}log\PYGZus{}loss}\PYG{p}{:} \PYG{l+m+mf}{0.230}\PYG{p}{;} \PYG{n}{average\PYGZus{}score}\PYG{p}{:} \PYG{l+m+mf}{0.513}

\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Image classification experiment in jaxline.\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{p}{[}\PYG{o}{.}\PYG{o}{.}\PYG{o}{.}\PYG{p}{]}
\PYG{k}{class} \PYG{n+nc}{ConvNet}\PYG{p}{(}\PYG{n}{hk}\PYG{o}{.}\PYG{n}{Module}\PYG{p}{)}\PYG{p}{:}
  \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Network.\PYGZdq{}\PYGZdq{}\PYGZdq{}}

  \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{num\PYGZus{}channels}\PYG{o}{=}\PYG{l+m+mi}{32}\PYG{p}{,} \PYG{n}{num\PYGZus{}output\PYGZus{}classess}\PYG{o}{=}\PYG{l+m+mi}{10}\PYG{p}{)}\PYG{p}{:}
    \PYG{n+nb}{super}\PYG{p}{(}\PYG{p}{)}\PYG{o}{.}\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}conv1} \PYG{o}{=} \PYG{n}{hk}\PYG{o}{.}\PYG{n}{Conv2D}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels}\PYG{p}{,} \PYG{n}{kernel\PYGZus{}shape}\PYG{o}{=}\PYG{l+m+mi}{3}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}conv2} \PYG{o}{=} \PYG{n}{hk}\PYG{o}{.}\PYG{n}{Conv2D}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{kernel\PYGZus{}shape}\PYG{o}{=}\PYG{l+m+mi}{3}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}conv3} \PYG{o}{=} \PYG{n}{hk}\PYG{o}{.}\PYG{n}{Conv2D}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{n}{kernel\PYGZus{}shape}\PYG{o}{=}\PYG{l+m+mi}{3}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}logits\PYGZus{}module} \PYG{o}{=} \PYG{n}{hk}\PYG{o}{.}\PYG{n}{Linear}\PYG{p}{(}\PYG{n}{num\PYGZus{}output\PYGZus{}classes}\PYG{p}{)}
\PYG{p}{[}\PYG{o}{.}\PYG{o}{.}\PYG{o}{.}\PYG{p}{]}


\PYG{esc}{- Current program}

\PYG{esc}{Here is the current program we are trying to improve (you will need to propose a modification to it below).}

\PYG{n}{top\PYGZus{}1\PYGZus{}acc}\PYG{p}{:} \PYG{l+m+mf}{0.862}\PYG{p}{;} \PYG{n}{neg\PYGZus{}eval\PYGZus{}log\PYGZus{}loss}\PYG{p}{:} \PYG{l+m+mf}{0.387}\PYG{p}{;} \PYG{n}{average\PYGZus{}score}\PYG{p}{:} \PYG{l+m+mf}{0.624}

\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Image classification experiment in jaxline.\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{p}{[}\PYG{o}{.}\PYG{o}{.}\PYG{o}{.}\PYG{p}{]}
\PYG{k}{class} \PYG{n+nc}{ConvNet}\PYG{p}{(}\PYG{n}{hk}\PYG{o}{.}\PYG{n}{Module}\PYG{p}{)}\PYG{p}{:}
  \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Network.\PYGZdq{}\PYGZdq{}\PYGZdq{}}

  \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{num\PYGZus{}channels}\PYG{o}{=}\PYG{l+m+mi}{32}\PYG{p}{,} \PYG{n}{num\PYGZus{}output\PYGZus{}classes}\PYG{o}{=}\PYG{l+m+mi}{10}\PYG{p}{)}\PYG{p}{:}
    \PYG{n+nb}{super}\PYG{p}{(}\PYG{p}{)}\PYG{o}{.}\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}conv1} \PYG{o}{=} \PYG{n}{hk}\PYG{o}{.}\PYG{n}{Conv2D}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels}\PYG{p}{,} \PYG{n}{kernel\PYGZus{}shape}\PYG{o}{=}\PYG{l+m+mi}{3}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block1} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block2} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block3} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}logits\PYGZus{}module} \PYG{o}{=} \PYG{n}{hk}\PYG{o}{.}\PYG{n}{Linear}\PYG{p}{(}\PYG{n}{num\PYGZus{}output\PYGZus{}classes}\PYG{p}{)}
\PYG{esc}{[...]}

\PYG{esc}{SEARCH/REPLACE block rules:}
\PYG{esc}{[...]}

\PYG{esc}{Make sure that the changes you propose are consistent with each other. For example, if you refer to a new config variable somewhere, you should also propose a change to add that variable.}

\PYG{esc}{Example:}
\PYG{esc}{[...]}

\PYG{esc}{Task}
\PYG{esc}{Suggest a new idea to improve the code that is inspired by your expert knowledge of optimization and machine learning.}

\PYG{esc}{Describe each change with a SEARCH/REPLACE block.}
\end{Verbatim}
