\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{esc}{The current model uses a simple ResNet architecture with only three ResNet blocks. We can improve its performance by increasing the model capacity and adding regularization. This will allow the model to learn more complex features and generalize better to unseen data. We also add weight decay to the optimizer to further regularize the model and prevent overfitting. AdamW is generally a better choice than Adam, especially with weight decay.}


\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{o}{\PYGZlt{}} \PYG{n}{SEARCH}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block1} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block2} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block3} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{2}\PYG{p}{)}
\PYG{o}{==}\PYG{o}{==}\PYG{o}{==}\PYG{o}{=}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block1} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block2} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block3} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block4} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block5} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}block6} \PYG{o}{=} \PYG{n}{ResNetBlock}\PYG{p}{(}\PYG{n}{num\PYGZus{}channels} \PYG{o}{*} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{n}{stride}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{)}
\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{o}{\PYGZgt{}} \PYG{n}{REPLACE}
\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{o}{\PYGZlt{}} \PYG{n}{SEARCH}
  \PYG{k}{def} \PYG{n+nf}{optimizer}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{learning\PYGZus{}rate}\PYG{p}{)}\PYG{p}{:}
    \PYG{k}{return} \PYG{n}{optax}\PYG{o}{.}\PYG{n}{adam}\PYG{p}{(}\PYG{n}{learning\PYGZus{}rate}\PYG{p}{)}
\PYG{o}{==}\PYG{o}{==}\PYG{o}{==}\PYG{o}{=}
  \PYG{k}{def} \PYG{n+nf}{optimizer}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{learning\PYGZus{}rate}\PYG{p}{)}\PYG{p}{:}
    \PYG{k}{return} \PYG{n}{optax}\PYG{o}{.}\PYG{n}{adamw}\PYG{p}{(}\PYG{n}{learning\PYGZus{}rate}\PYG{p}{,} \PYG{n}{weight\PYGZus{}decay}\PYG{o}{=}\PYG{l+m+mf}{1e\PYGZhy{}4}\PYG{p}{)}
\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{o}{\PYGZgt{}} \PYG{n}{REPLACE}
\end{Verbatim}
